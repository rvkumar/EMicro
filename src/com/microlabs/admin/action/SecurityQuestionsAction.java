/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.microlabs.admin.action;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.microlabs.admin.dao.GroupDao;
import com.microlabs.admin.form.SecurityQuestionsForm;
import com.microlabs.newsandmedia.dao.NewsandMediaDao;

/** 
 * MyEclipse Struts
 * Creation date: 01-04-2013
 * 
 * XDoclet definition:
 * @struts.action path="/securityQuestions" name="securityQuestionsForm" input="/form/securityQuestions.jsp" parameter="method" scope="request" validate="true"
 * @struts.action-forward name="display" path="/jsp"
 */
public class SecurityQuestionsAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SecurityQuestionsForm securityQuestionsForm = (SecurityQuestionsForm) form;// TODO Auto-generated method stub
		
		
		HttpSession session=request.getSession();
		
		
		GroupDao ad=new GroupDao();
		
		String sql1="select id,question_name from security_questions where status='1'";
		
		
		ResultSet rs=ad.selectQuery(sql1);
		
		try{
			
			SecurityQuestionsForm securityQuestionsForm1 =null;
			ArrayList a1=new ArrayList();
			while (rs.next()) {
				
				securityQuestionsForm1=new SecurityQuestionsForm();
				
				securityQuestionsForm1.setQuestionId(rs.getString("id"));
				securityQuestionsForm1.setQuestionName(rs.getString("question_name"));
				
				a1.add(securityQuestionsForm1);
			}
			
			request.setAttribute("questionDetails", a1);
		}catch(SQLException se){
			se.printStackTrace();
		}
		return mapping.findForward("display");
	}
	
	
	
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SecurityQuestionsForm securityQuestionsForm = (SecurityQuestionsForm) form;// TODO Auto-generated method stub
		
		
		NewsandMediaDao ad=new NewsandMediaDao();
		
		String id=request.getParameter("sId");
		
		
		String sql1="select id,question_name from security_questions where id="+id+"";
		
		
		ResultSet rs=ad.selectQuery(sql1);
		
		try{
			
			ArrayList a1=new ArrayList();
			while (rs.next()) {
				securityQuestionsForm.setQuestionName(rs.getString("question_name"));
				securityQuestionsForm.setQuestionId(rs.getString("id"));
			}
			
			request.setAttribute("displayModifyButton", "displayModifyButton");
		}catch(SQLException se){
			se.printStackTrace();
		}
		
		display(mapping, form, request, response);
		return mapping.findForward("display");
	}
	
	
	
	public ActionForward submit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SecurityQuestionsForm securityQuestionsForm = (SecurityQuestionsForm) form;// TODO Auto-generated method stub
		
		String sql="insert into security_questions(question_name) values('"+securityQuestionsForm.getQuestionName()+"')";
		
		NewsandMediaDao ad=new NewsandMediaDao();
		
		int a= ad.SqlExecuteUpdate(sql);
		
		if(a>0){
			securityQuestionsForm.setQuestionName("");
			securityQuestionsForm.setMessage("Questions Details Submitted Succesfully");
		}
		
		
		String sql1="select id,question_name from security_questions where status='1'";
		
		
		ResultSet rs=ad.selectQuery(sql1);
		
		try{
			
			SecurityQuestionsForm securityQuestionsForm1 =null;
			ArrayList a1=new ArrayList();
			while (rs.next()) {
				securityQuestionsForm1.setQuestionName(rs.getString("question_name"));
				securityQuestionsForm1.setQuestionId(rs.getString("id"));
				a1.add(securityQuestionsForm1);
			}
			
			request.setAttribute("questionDetails", a1);
		}catch(SQLException se){
			se.printStackTrace();
		}
		
		
		return mapping.findForward("display");
	}
	
	
	
	public ActionForward modifyQuestion(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SecurityQuestionsForm securityQuestionsForm = (SecurityQuestionsForm) form;// TODO Auto-generated method stub
		
		String questionId=securityQuestionsForm.getQuestionId();
		
		String questionName=securityQuestionsForm.getQuestionName();
		
		NewsandMediaDao ad=new NewsandMediaDao();
		
		String sql="update security_questions set question_name='"+questionName+"' where " +
				"id='"+questionId+"'";
		
		
		int a= ad.SqlExecuteUpdate(sql);
		
		
		if(a>0){
			securityQuestionsForm.setQuestionName("");
			securityQuestionsForm.setMessage("Security Questions Modified Successfully");
		}
		
		display(mapping, form, request, response);
		return mapping.findForward("display");
	}
		
	
	public ActionForward deleteQuestion(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SecurityQuestionsForm securityQuestionsForm = (SecurityQuestionsForm) form;// TODO Auto-generated method stub
		
		String questionId=securityQuestionsForm.getQuestionId();
		
		String questionName=securityQuestionsForm.getQuestionName();
		
		NewsandMediaDao ad=new NewsandMediaDao();
		
		String sql="update security_questions set status='0' where " +
				"id='"+questionId+"'";
		
		
		int a= ad.SqlExecuteUpdate(sql);
		
		
		if(a>0){
			securityQuestionsForm.setQuestionName("");
			securityQuestionsForm.setMessage("Security Questions Deleted Successfully");
		}
		
		display(mapping, form, request, response);
		return mapping.findForward("display");
	}
}