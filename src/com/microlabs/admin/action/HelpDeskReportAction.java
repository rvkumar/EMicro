package com.microlabs.admin.action;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.util.Rotation;

import com.microlabs.admin.form.HelpDeskReportForm;
import com.microlabs.db.ConnectionFactory;
import com.microlabs.ess.dao.EssDao;
import com.microlabs.it.DaoImpl.IssueImpl;
import com.microlabs.it.form.IssuesForm;
import com.microlabs.main.form.ApprovalsForm;
import com.microlabs.myrequest.form.MyRequestForm;
import com.microlabs.newsandmedia.dao.NewsandMediaDao;
import com.microlabs.utilities.EMicroUtils;
import com.microlabs.utilities.UserInfo;
public class HelpDeskReportAction extends DispatchAction {
	
	  String reqtype="";
	 
	  public ActionForward exportITIssues(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  HelpDeskReportForm report=(HelpDeskReportForm)form;
		EssDao ad=new EssDao();
		HttpSession session=request.getSession();
		
			String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String toDate=report.getToDate();
			String keyword=report.getKeyword();
			String tech=report.getApprover();
			  if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
		  
			  
			  
			//get Issue records
			String requestStatus=report.getRequestStatus();
			String requestType=report.getRequestType();
			if(requestType.equals("Issues")){
			LinkedList listofIssues=new LinkedList();
			String getIssues="select it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =itall.Technician_Id) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority,IT.approved_date,Year(IT.approved_date) as refyear "
					+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
					if(!requestStatus.equals(""))
						getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
					if(!keyword.equals(""))
						getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
					if(!locationId.equals(""))
						 getIssues=getIssues+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getIssues=getIssues+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+ toDate+"')";
				    if(!tech.equals(""))
				    	getIssues=getIssues+" and  itall.Technician_Id='"+tech+"'";
				    getIssues=getIssues+" order by it.Req_No desc";
				    ResultSet rsIssues=ad.selectQuery(getIssues);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							String ref = rsIssues.getString("refyear");
							String appDate="";
							String	status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							///time taken
							
							  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
							try {
								
								Date date1 = simpleDateFormat.parse(ReqDate);	
								Date date2=new Date();
								status = rsIssues.getString("Req_Status");
								if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
								{
									date2 = simpleDateFormat.parse(appDate);
								}
								else
								{
									 date2 = new Date();
								}
								
								
								long different = date2.getTime() - date1.getTime();
								 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 				
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							
							listofIssues.add(form1); 
					    }
					    if(listofIssues.size()>0)
					    	request.setAttribute("listofIssues", listofIssues);
					    rsIssues.close();
						 ad.connClose();
					    	
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
			}
			else if(requestType.equals("SAPIssues"))
			{

				LinkedList listofIssues=new LinkedList();
				String getIssues="select it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =it.assignto) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority,IT.approved_date,Year(IT.approved_date) as refyear "
						+ "it.*,from IT_SAP_ISSUES it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID ";
						if(!requestStatus.equals(""))
							getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
						if(!keyword.equals(""))
							getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
						if(!locationId.equals(""))
							 getIssues=getIssues+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getIssues=getIssues+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+ toDate+"')";
					    
					    getIssues=getIssues+" order by it.Req_No desc";
					    ResultSet rsIssues=ad.selectQuery(getIssues);
					    try{
						    while(rsIssues.next()){
						    	IssuesForm form1=new IssuesForm();
						    	form1.setRequestNo(rsIssues.getInt("Req_No"));
						    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
						    	String ReqDate=rsIssues.getString("Req_date");
								String a[]=ReqDate.split(" "); 
								ReqDate=a[0];
								String b[]=ReqDate.split("-");
								ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
								form1.setReqDate(ReqDate);
								form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
								form1.setTechnicianName(rsIssues.getString("tech"));
								form1.setCategory(rsIssues.getString("Req_Type"));
								form1.setSubcategory(rsIssues.getString("Sub_Category"));
								form1.setSubject(rsIssues.getString("Subject"));
								form1.setRequestStatus(rsIssues.getString("Req_Status"));
								form1.setReqPriority(rsIssues.getString("Req_Priority"));
								form1.setRequestName(rsIssues.getString("sap_request_type"));
								String ref = rsIssues.getString("refyear");
								String appDate="";
								String	status = rsIssues.getString("Req_Status");
								if(ref!=null)
											{
											if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
											{	
											 appDate=rsIssues.getString("approved_date");
											String c[]=appDate.split(" "); 
											appDate=c[0];
											String d[]=appDate.split("-");
											appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
									        form1.setApprovedDate(appDate);
											}
											if(status.equalsIgnoreCase("Completed"))
											{	
											 appDate=rsIssues.getString("approved_date");
											String c[]=appDate.split(" "); 
											appDate=c[0];
											String d[]=appDate.split("-");
											appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
									        form1.setCompDate(appDate);
											}
											}
								///time taken
								
								  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
								try {
									
									Date date1 = simpleDateFormat.parse(ReqDate);	
									Date date2=new Date();
									status = rsIssues.getString("Req_Status");
									if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
									{
										date2 = simpleDateFormat.parse(appDate);
									}
									else
									{
										 date2 = new Date();
									}
									
									
									long different = date2.getTime() - date1.getTime();
									 

									long secondsInMilli = 1000;
									long minutesInMilli = secondsInMilli * 60;
									long hoursInMilli = minutesInMilli * 60;
									long daysInMilli = hoursInMilli * 24;
							 
									long elapsedDays = different / daysInMilli;
									different = different % daysInMilli;
							 
									long elapsedHours = different / hoursInMilli;
									different = different % hoursInMilli;
							 
									long elapsedMinutes = different / minutesInMilli;
									different = different % minutesInMilli;
							 
							
									form1.setDay(Long.toString(elapsedDays));
									String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
									form1.setHr(time);
								
							 				
								} catch (ParseException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
								
								listofIssues.add(form1); 
						    }
						    if(listofIssues.size()>0)
						    	request.setAttribute("listofIssues", listofIssues);
						    rsIssues.close();
							 ad.connClose();
						    	
					    }catch(Exception e){
					    	e.printStackTrace();
					    }
				
				
			}	
			
			else{
				LinkedList list=new LinkedList();
				
				
				String getHelpDeskRecords="select it.Req_No,it.Req_date,it.Emp_No,emp.EMP_FULLNAME,it.Req_type,it.Req_Status,it.ITEng_Status,IT.approved_date,Year(IT.approved_date) as refyear, "
						+ "it.Pending_approver,it.Last_approver,(select emp1.EMP_FULLNAME from IT_Approvers as ita,emp_official_info as emp1 where it.Req_type=ita.Req_type and Priority='1' and ita.LOCATION_ID=loc.LOCID and emp1.PERNR=ita.Approver_ID)as technician  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
						+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getHelpDeskRecords=getHelpDeskRecords+" and it.Req_type='"+category+"'";
				if(!requestStatus.equals("")){
					if(requestStatus.equals("In Process"))
						getHelpDeskRecords=getHelpDeskRecords+" and it.Req_Status='"+requestStatus+"'";
					else
						getHelpDeskRecords=getHelpDeskRecords+" and it.ITEng_Status='"+requestStatus+"'";
				}
				if(!locationId.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			    
			    getHelpDeskRecords=getHelpDeskRecords+" order by it.Req_No desc";
			    
			   ResultSet rs=ad.selectQuery(getHelpDeskRecords);
			   try{
				 while(rs.next()){
					 HelpDeskReportForm h=new HelpDeskReportForm();
					 h.setRequestNo(rs.getInt("Req_No"));
					 String ReqDate=rs.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						h.setRequestDate(ReqDate);
					 h.setEmpno(rs.getString("Emp_No"));
					 h.setRequestername(rs.getString("EMP_FULLNAME"));					 
					 h.setReqname(rs.getString("Req_type"));
					 h.setApprover(rs.getString("technician"));
					 h.setLastApprover(rs.getString("Last_approver"));
					 h.setPendingApprover(rs.getString("Pending_approver"));
					 h.setRequestStatus(rs.getString("Req_Status"));
					 h.setItEngStatus(rs.getString("ITEng_Status"));
					 String ref = rs.getString("refyear");
						String appDate="";
					String	status = rs.getString("Req_Status");
						if(ref!=null)
						{
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{	
						 appDate=rs.getString("approved_date");
						String c[]=appDate.split(" "); 
						appDate=c[0];
						String d[]=appDate.split("-");
						appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				        h.setApprovedDate(appDate);
						}
						if(status.equalsIgnoreCase("Completed"))
						{	
						 appDate=rs.getString("approved_date");
						String c[]=appDate.split(" "); 
						appDate=c[0];
						String d[]=appDate.split("-");
						appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				        h.setCompDate(appDate);
						}
						}
						///time taken
						
						  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
						try {
							status = rs.getString("Req_Status");
							Date date1 = simpleDateFormat.parse(ReqDate);	
							Date date2=new Date();
							status = rs.getString("Req_Status");
							if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
							{
								date2 = simpleDateFormat.parse(appDate);
							}
							else 
							{
								 date2 = new Date();
							}
							
							
							long different = date2.getTime() - date1.getTime();
							 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							h.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							h.setHr(time);
						
					 				
						} catch (ParseException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						list.add(h);
				 }
				 rs.close();
				 ad.connClose();
				 if(list.size()>0)
					 request.setAttribute("helpDeskList", list);
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			}
		  return mapping.findForward("exportITIssues");
	  }
	  
	  public ActionForward exportAllIssues(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {

		  Date dNow = new Date( );
			SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd");
			String exportdate=ft.format(dNow);
			response.setHeader("Content-Disposition", "inline; filename=HelpDesk_Report_"+exportdate+"_.xls");
			
			HelpDeskReportForm help = (HelpDeskReportForm) form;
			HttpSession session=request.getSession();
			UserInfo user=(UserInfo)session.getAttribute("user");
			
			NewsandMediaDao ad=new NewsandMediaDao();
			LinkedList listofIssues=new LinkedList();
			String loc = help.getLocation();
			String techname = help.getTechname();
			String status = help.getStatus();
			String requesttype = help.getRequestBy();
			String getITRecords ="";
				
			
			ArrayList locationList=new ArrayList();
			ArrayList locationLabelList =new ArrayList();
			
			   String fromDate=help.getFromDate1();
	            String toDate=help.getToDate1();
	            
	            if(!fromDate.equals("") && fromDate.contains("/"))
	 		   {
	 			   String a[]=fromDate.split("/");
	 			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
	 			  help.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
	 			  
	 		   }
	 		
	 		 if(!toDate.equals("") && toDate.contains("/"))
	 		   {  
	 		   String b[]=toDate.split("/");
	 		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
	 		  help.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
	 		   }
			
		
			
			
			//System.out.println(help.getRequesterdepartment());
			//System.out.println(loc);
		
					
	 		if(!loc.equalsIgnoreCase("All"))
	 		{	
	 			if(requesttype.equalsIgnoreCase("Techinician")){
	 			
	 				
	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status, "
	 						+ "IT_ISSUES.approved_date ,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 					     +" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"  
	 						  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status ,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					     + " from IT_HELPDESK ,emp_official_info"
	 					     +" where emp_official_info.Pernr = AssignTo and" 
	 						 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
	 						 + " and Req_Status in ('In Process','Approved')" 
	 						 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
	 						 + " union all"
	 						 + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo and" 
	 						 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
	 						 
	 				

	 			}
	 				
	 				if(status.equalsIgnoreCase("total"))
	 				{
	 					
	 					getITRecords= " select IT_ISSUES.Req_No,"
	 							+" IT_ISSUES.Req_date,"
	 							+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 							+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 							+" emp_official_info.EMP_FULLNAME as tech,"
	 							
	 							+" IT_ISSUES.Req_type,"
	 							+" IT_ISSUES.Sub_Category,"
	 							+" IT_ISSUES.Subject,"
	 							+" IT_ISSUES.Req_Priority,"
	 							+" IT_ISSUES.Req_Status, "
	 							+ "IT_ISSUES.approved_date ,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 						       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 							+" from IT_ISSUES ,emp_official_info" 
	 							 +" where  "
	 							 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 							 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 							 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 							 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
	 							 +" union all" 
	 							 +" select" 
	 							  +" IT_HELPDESK.Req_No,"
	 							  +" IT_HELPDESK.Req_date,"
	 							  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 							 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 							  +" emp_official_info.EMP_FULLNAME,"
	 							  +" IT_HELPDESK.Req_type,"
	 							  +" IT_HELPDESK.Category,"
	 							  +" '',"
	 							  +" IT_HELPDESK.Req_Priority,"
	 							  +" IT_HELPDESK.Req_Status ,"
	 							  + " IT_HELPDESK.approved_date ,"
	 							  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 								+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 								+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 								+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 								+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 								+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 								+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 						      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 								 +" from IT_HELPDESK , emp_official_info" 
	 								 +" where emp_official_info.Pernr = AssignTo and" 
	 								 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
	 								 +" and  (Req_Status <>'Rejected' )" 
	 								 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 							  + " union all"
	 							  + " select IT_SAP_ISSUES.Req_No,"					
	 							 +" IT_SAP_ISSUES.Req_date,"
	 							   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 							 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 							 +" emp_official_info.EMP_FULLNAME,"
	 							 +" IT_SAP_ISSUES.Req_type,"
	 							 +" IT_SAP_ISSUES.Sub_Category,"
	 							 +" IT_SAP_ISSUES.Subject,"
	 							 +" IT_SAP_ISSUES.Req_Priority,"
	 							 +" IT_SAP_ISSUES.Req_Status,"
	 							 + " IT_SAP_ISSUES.approved_date ,"
	 							 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 								+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 								+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 								+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 								+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 								+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 								+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 						       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 							 +" from IT_SAP_ISSUES , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo and" 
	 							 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
	 							 +" and  (Req_Status <>'Rejected' )" 
	 							 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"'and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 							 
	 						

	 					
	 				}
	 				
	 				if(status.equalsIgnoreCase("forward"))
	 				{
	 					getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
	 							+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
	 							+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
	 							+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
	 							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
	 							+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
	 							+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
	 							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
	 							+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
	 							+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
	 							+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
	 									+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
	 						
	 				}
	 				
	 				
	 				if(status.equalsIgnoreCase("sla"))
	 				{
	 					getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
	 				+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
	 				+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
	 				+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
	 				+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 				+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
	 				+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 				+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
	 				+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
	 				+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
	 				+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
	 						+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
	 				+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
	 						
	 				}
	 				
	 				
	 				
	 			}		
	 			
	 			
	 			if(requesttype.equalsIgnoreCase("Category")){
	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						 +" and IT_ISSUES.Req_type = '"+techname+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status , "
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 				         +" from IT_HELPDESK , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 + " and Req_Status in ('In Process','Approved')"
	 						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  
	 						  
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 					
	 			}
	 				
	 		
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						 +" and IT_ISSUES.Req_type = '"+techname+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status , "
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 							 +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo " 
	 							 +" and  (Req_Status <>'Rejected' )" 
	 							 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						  
	 					  
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and  (Req_Status <>'Rejected' )" 
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
	 						 
	 					
	 			
	 		  }
	 			

	 			}
	 			
	 			
	 			if(requesttype.equalsIgnoreCase("Priority")){

	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"'" 
	 						 +" and IT_ISSUES.Req_Priority = '"+techname+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo and" 
	 							 +" Req_Status in ('In Process','Approved')" 
	 							 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 				
	 			}
	 				
	 		
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"'" 
	 						 +" and IT_ISSUES.Req_Priority = '"+techname+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 							 +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo and" 
	 							 +"  (Req_Status <>'Rejected' )" 
	 							 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo and" 
	 						 +"  (Req_Status <>'Rejected' )" 
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
	 						 
	 					
	 			
	 		  }
	 		 

	 			
	 			}
	 	   
	 			if(requesttype.equalsIgnoreCase("Mode")){


	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						 +" and IT_ISSUES.mode = '"+techname+"'"
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 					
	 			}
	 				
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
	 						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
	 						 +" and IT_ISSUES.mode = '"+techname+"'"
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and  ( Req_Status <>'Rejected' )" 
	 						 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 			
	 		  }
	 				
	 		 	

	 		   
	 			
	 			}	
	 			
	 		}	
	 			
	 		if(loc.equalsIgnoreCase("All"))
	 		{
	 			
	 			if(requesttype.equalsIgnoreCase("Techinician")){
	 			
	 				
	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status, "
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status ,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo " 
	 							 +" and  (Req_Status  in('In Process','Approved')   )" 
	 							 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
	 					       + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";

	 			}
	 				
	 				if(status.equalsIgnoreCase("total"))
	 				{
	 					
	 					getITRecords= " select IT_ISSUES.Req_No,"
	 							+" IT_ISSUES.Req_date,"
	 							+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 							+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 							+" emp_official_info.EMP_FULLNAME as tech,"
	 							
	 							+" IT_ISSUES.Req_type,"
	 							+" IT_ISSUES.Sub_Category,"
	 							+" IT_ISSUES.Subject,"
	 							+" IT_ISSUES.Req_Priority,"
	 							+" IT_ISSUES.Req_Status, "
	 							+ "IT_ISSUES.approved_date ,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 						       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 							+" from IT_ISSUES ,emp_official_info" 
	 							 +" where  "
	 							 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 							 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
	 							 +" union all" 
	 							 +" select" 
	 							  +" IT_HELPDESK.Req_No,"
	 							  +" IT_HELPDESK.Req_date,"
	 							  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 							 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 							  +" emp_official_info.EMP_FULLNAME,"
	 							  +" IT_HELPDESK.Req_type,"
	 							  +" IT_HELPDESK.Category,"
	 							  +" '',"
	 							  +" IT_HELPDESK.Req_Priority,"
	 							  +" IT_HELPDESK.Req_Status ,"
	 							  + " IT_HELPDESK.approved_date ,"
	 							  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 								+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 								+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 								+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 								+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 								+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 								+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 								+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 						        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 						       +" from IT_HELPDESK , emp_official_info" 
	 								 +" where emp_official_info.Pernr = AssignTo "  
	 								 +" and  (Req_Status <>'Rejected' )" 
	 								 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"	
	 							  + " union all"
	 							  + " select IT_SAP_ISSUES.Req_No,"					
	 							 +" IT_SAP_ISSUES.Req_date,"
	 							   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 							 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 							 +" emp_official_info.EMP_FULLNAME,"
	 							 +" IT_SAP_ISSUES.Req_type,"
	 							 +" IT_SAP_ISSUES.Sub_Category,"
	 							 +" IT_SAP_ISSUES.Subject,"
	 							 +" IT_SAP_ISSUES.Req_Priority,"
	 							 +" IT_SAP_ISSUES.Req_Status,"
	 							 + " IT_SAP_ISSUES.approved_date ,"
	 							 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 								+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 								+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 								+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 								+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 								+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 								+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 								+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 						       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 							 +" from IT_SAP_ISSUES , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo "  
	 							 +" and  (Req_Status <>'Rejected' )" 
	 							 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
	 							 

	 					
	 				}
	 				
	 				if(status.equalsIgnoreCase("forward"))
	 				{
	 					getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
	 							+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
	 							+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
	 							+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
	 							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
	 							+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
	 							+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
	 							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
	 							+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
	 							+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
	 							+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
	 						
	 				}
	 				
	 				if(status.equalsIgnoreCase("sla"))
	 				{
	 					getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
	 				+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
	 				+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
	 				+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
	 				+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 				+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
	 				+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 				+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
	 				+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
	 				+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
	 				+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
	 						+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
	 				+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
	 						
	 				}
	 				
	 			
	 			}		
	 			
	 			
	 			if(requesttype.equalsIgnoreCase("Category")){
	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
	 						 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status , "
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo " 
	 							 + " and Req_Status in ('In Process','Approved')" 
	 							 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "						  
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 					
	 			}
	 				
	 		
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						  
	 						 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status , "
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo " 
	 							 +" and  (Req_Status <>'Rejected' )" 
	 							 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and  (Req_Status <>'Rejected' )" 
	 						 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 			
	 		  }
	 				


	 			}
	 			
	 			
	 			if(requesttype.equalsIgnoreCase("Priority")){

	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						  
	 						 
	 						 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo and" 
	 							  + "  Req_Status in ('In Process','Approved')" 
	 							 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 				
	 				
	 					
	 			}
	 				
	 		
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						  
	 			 
	 						 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"
	 						 +" union all" 
	 						 +" select" 
	 						  +" IT_HELPDESK.Req_No,"
	 						  +" IT_HELPDESK.Req_date,"
	 						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
	 						  +" emp_official_info.EMP_FULLNAME,"
	 						  +" IT_HELPDESK.Req_type,"
	 						  +" IT_HELPDESK.Category,"
	 						  +" '',"
	 						  +" IT_HELPDESK.Req_Priority,"
	 						  +" IT_HELPDESK.Req_Status,"
	 						  + " IT_HELPDESK.approved_date ,"
	 						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_HELPDESK.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
	 							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
	 					       +" from IT_HELPDESK , emp_official_info" 
	 							 +" where emp_official_info.Pernr = AssignTo and" 
	 							 +"  (Req_Status <>'Rejected' )" 
	 							 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo and" 
	 						 +"  (Req_Status <>'Rejected' )" 
	 						 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 				
	 		  }
	 		  	

	 			
	 			}
	 	   
	 			if(requesttype.equalsIgnoreCase("Mode")){


	 				if(status.equalsIgnoreCase("pending"))
	 				{	
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where  Req_Status <>'Completed'"
	 						 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						  
	 						  
	 						 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and Req_Status  not in ('Completed','Rejected')"
	 						 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 					
	 			}
	 				
	 		  if(status.equalsIgnoreCase("total"))
	 		  {
	 				
	 				
	 				getITRecords= " select IT_ISSUES.Req_No,"
	 						+" IT_ISSUES.Req_date,"
	 						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
	 						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						+" emp_official_info.EMP_FULLNAME as tech,"
	 						
	 						+" IT_ISSUES.Req_type,"
	 						+" IT_ISSUES.Sub_Category,"
	 						+" IT_ISSUES.Subject,"
	 						+" IT_ISSUES.Req_Priority,"
	 						+" IT_ISSUES.Req_Status ,"
	 						+ "IT_ISSUES.approved_date ,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
	 						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
	 						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
	 						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
	 						+"(case when year(IT_ISSUES.approved_date)=1900 "
	 						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
	 						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
	 						+ "Year(IT_ISSUES.approved_date) as refyear ,"
	 					    +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
	 						+" from IT_ISSUES ,emp_official_info" 
	 						 +" where "
	 						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
	 						  
	 						  
	 						 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
	 						  + " union all"
	 						  + " select IT_SAP_ISSUES.Req_No,"					
	 						 +" IT_SAP_ISSUES.Req_date,"
	 						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
	 						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
	 						 +" emp_official_info.EMP_FULLNAME,"
	 						 +" IT_SAP_ISSUES.Req_type,"
	 						 +" IT_SAP_ISSUES.Sub_Category,"
	 						 +" IT_SAP_ISSUES.Subject,"
	 						 +" IT_SAP_ISSUES.Req_Priority,"
	 						 +" IT_SAP_ISSUES.Req_Status ,"
	 						 + " IT_SAP_ISSUES.approved_date ,"
	 						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
	 							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
	 							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
	 							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
	 							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
	 							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
	 							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
	 							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
	 					    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
	 						 +" from IT_SAP_ISSUES , emp_official_info" 
	 						 +" where emp_official_info.Pernr = AssignTo " 
	 						 +" and  ( Req_Status <>'Rejected' )" 
	 						 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
	 						 
	 				
	 		  }
	 				
	 		  	

	 		   
	 			
	 			}	
	 			
	 		
	 		}
		
		/////////checking
	
		
	    String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
	    		           + "Req_No,		Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,	refyear,	reftype "
	    		           + "From"
	    		           + "("+ getITRecords+ ") as  T) AS SUB ";
		
		ResultSet rsIssues=ad.selectQuery(itrecords);
		
		try {
			while(rsIssues.next()) 
			{
				
				IssuesForm form1=new IssuesForm();
		    	form1.setRequestNo(rsIssues.getInt("Req_No"));
		    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
		    	String ReqDate=rsIssues.getString("Req_date");
				String a[]=ReqDate.split(" "); 
				ReqDate=a[0];
				String b[]=ReqDate.split("-");
				ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
				form1.setReqDate(ReqDate);
				form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
				form1.setTechnicianName(rsIssues.getString("tech"));
				form1.setCategory(rsIssues.getString("Req_Type"));
				form1.setSubcategory(rsIssues.getString("Sub_Category"));
				form1.setSubject(rsIssues.getString("Subject"));
				form1.setRequestStatus(rsIssues.getString("Req_Status"));
				form1.setReqPriority(rsIssues.getString("Req_Priority"));
				form1.setReftype(rsIssues.getString("reftype"));
				String ref = rsIssues.getString("refyear");
				String appDate="";
				status = rsIssues.getString("Req_Status");
				if(ref!=null)
							{
							if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
							{	
							 appDate=rsIssues.getString("approved_date");
							String c[]=appDate.split(" "); 
							appDate=c[0];
							String d[]=appDate.split("-");
							appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					        form1.setApprovedDate(appDate);
							}
							if(status.equalsIgnoreCase("Completed"))
							{	
							 appDate=rsIssues.getString("approved_date");
							String c[]=appDate.split(" "); 
							appDate=c[0];
							String d[]=appDate.split("-");
							appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					        form1.setCompDate(appDate);
							}
							}
				///time taken
				
				  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
				try {
					
					Date date1 = simpleDateFormat.parse(ReqDate);	
					Date date2=new Date();
					status = rsIssues.getString("Req_Status");
					if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
					{
						date2 = simpleDateFormat.parse(appDate);
					}
					else
					{
						 date2 = new Date();
					}
					
					
					long different = date2.getTime() - date1.getTime();
					 

					long secondsInMilli = 1000;
					long minutesInMilli = secondsInMilli * 60;
					long hoursInMilli = minutesInMilli * 60;
					long daysInMilli = hoursInMilli * 24;
			 
					long elapsedDays = different / daysInMilli;
					different = different % daysInMilli;
			 
					long elapsedHours = different / hoursInMilli;
					different = different % hoursInMilli;
			 
					long elapsedMinutes = different / minutesInMilli;
					different = different % minutesInMilli;
			 
			
					form1.setDay(Long.toString(elapsedDays));
					String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
					form1.setHr(time);
				
			 				
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				listofIssues.add(form1); 
					
			
			}
			
			request.setAttribute("dashboardissue",listofIssues);	
	        		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(listofIssues.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}	
		
		return mapping.findForward("exportITIssues");
	  }
	  
	  public ActionForward lastRecord(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  
		  
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			String requestType=report.getRequestType();
			
			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);


			if(requestType.equals("Issues")){
				 	int newStatusCount=0;
					int inprocess=0;
				 	int sendToIT=0;
				    int userAction=0;
				    int pendForSpares=0;
				    int solutionProvided=0;
				    int completedCount=0;
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String toDate=report.getToDate();
				String keyword=report.getKeyword();
				String tech=report.getApprover();
				String type = request.getParameter("selType");
				report.setSelType(type);
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
			    
			  try{
			    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			    if(!keyword.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
			  while(rsNewCount.next()){
				  newStatusCount=rsNewCount.getInt(1);
			  }
			  ad.connClose();
			  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
			  while(rsgetinprocessCount.next()){
				  inprocess=rsgetinprocessCount.getInt(1);
			  }
			  rsgetinprocessCount.close();
			  ad.connClose();
			  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
			  while(rsSendToITCount.next()){
				  sendToIT=rsSendToITCount.getInt(1);
			  }
			  rsSendToITCount.close();
			  ad.connClose();
			  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
			  while(rsUserActionCount.next()){
				  userAction=rsUserActionCount.getInt(1);
			  }
			  rsUserActionCount.close();
			  ad.connClose();
			  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
			  while(rspendForSpares.next()){
				  pendForSpares=rspendForSpares.getInt(1);
			  }
			  rspendForSpares.close();
			  ad.connClose();
			  
			  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
			  while(rsSolProvided.next()){
				  solutionProvided=rsSolProvided.getInt(1);
			  }
			  rsSolProvided.close();
			  ad.connClose();
			  
			  
			  
		  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
				  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
				  while(rsCompletedCount.next()){
					  completedCount=rsCompletedCount.getInt(1);
				  }	
				  rsCompletedCount.close();
				  ad.connClose();
				  
				  	report.setNewStatusCount(newStatusCount);
				  	report.setInprocesscount(inprocess);
					report.setSendToITcount(sendToIT);
					report.setUserActionCount(userAction);
					report.setPendForSparescount(pendForSpares);
					report.setSolutionProvidedcount(solutionProvided);
					report.setCompletedCount(completedCount);
					String id= session.getId();
					
				
					String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
							+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
					
					// GRAPH CREATION AND DISPLAY
					HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
					/** Create a PieDataSet* */    
					String realPath=getServlet().getServletContext().getRealPath("/images/graph");
					/** Define a file location to save this chart */   
					String fileLocation = realPath+"/"+id+".jpg"; 
					String fileName=id+".jpg";
					
					File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
				 	boolean test=fileToCreate.delete();
					chartCreator.processgraphimage(fileLocation, totalCount);
					request.setAttribute("ITIssues", "ITIssues");
					
					//get Issue records
					String requestStatus=report.getRequestStatus();
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord();//11
					int endRecord=report.getEndRecord();	
					
					
					 startRecord=totalRecords-19;
					 endRecord=totalRecords;
					 report.setTotal(totalRecords);
					 report.setStartRecord(startRecord);
					 report.setEndRecord(totalRecords);
				    
				    
				    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =itall.Technician_Id) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority, "
				    		+ " IT.approved_date ,"
				    		+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
							+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
							+"(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
							+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date ,'It issues' as category "
				    		+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
							if(!requestStatus.equals(""))
								getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
							if(!keyword.equals(""))
								getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
							if(!locationId.equals(""))
								getIssues=getIssues+" and it.Location='"+locationId+"'";
						    if(!category.equals(""))
						    	getIssues=getIssues+" and it.Req_type='"+category+"'";
						    if(!deptId.equals(""))
						    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
						    if(!fromDate.equals(""))
						    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
						    if(!tech.equals(""))
						    	getIssues=getIssues+" and  itall.Technician_Id='"+tech+"'";
				    
				    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
				    ResultSet rsIssues=ad.selectQuery(getIssues);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
							form1.setReftype(rsIssues.getString("category"));
							String ref = rsIssues.getString("refyear");
							String appDate="";
							String status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							///time taken
							
							  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
							try {
								
								Date date1 = simpleDateFormat.parse(ReqDate);	
								Date date2=new Date();
								if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))

								{
									date2 = simpleDateFormat.parse(appDate);
								}
								else
								{
									 date2 = new Date();
								}
								
								
								long different = date2.getTime() - date1.getTime();
								 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 				
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							listofIssues.add(form1); 
					    }
					    if(listofIssues.size()>0)
					    	request.setAttribute("listofIssues", listofIssues);
					    
					    
					    request.setAttribute("disableNextButton", "disableNextButton");
						request.setAttribute("previousButton", "previousButton");
						if(listofIssues.size()<10)
						{
							
							request.setAttribute("previousButton", "previousButton");
							request.setAttribute("disablePreviousButton", "disablePreviousButton");
						}
						request.setAttribute("displayRecordNo", "displayRecordNo");
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
					  
					    
			  }catch(Exception e){
				  e.printStackTrace();
			  }
			  
			  
	
			}
			else if(requestType.equals("SAPIssues")){

			 	int newStatusCount=0;
				int inprocess=0;
			 	int sendToIT=0;
			    int userAction=0;
			    int pendForSpares=0;
			    int solutionProvided=0;
			    int completedCount=0;
		    String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String toDate=report.getToDate();
			String keyword=report.getKeyword();
			String tech=report.getApprover();
		   if(!fromDate.equals("")){
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   
			   String b[]=toDate.split("/");
			   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   }
		    
		  try{
		    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
		    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		    if(!keyword.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
		    if(!locationId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
		    if(!category.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
		    if(!deptId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
		  while(rsNewCount.next()){
			  newStatusCount=rsNewCount.getInt(1);
		  }
		  ad.connClose();
		  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
		  while(rsgetinprocessCount.next()){
			  inprocess=rsgetinprocessCount.getInt(1);
		  }
		  rsgetinprocessCount.close();
		  ad.connClose();
		  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
		  while(rsSendToITCount.next()){
			  sendToIT=rsSendToITCount.getInt(1);
		  }
		  rsSendToITCount.close();
		  ad.connClose();
		  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
		  while(rsUserActionCount.next()){
			  userAction=rsUserActionCount.getInt(1);
		  }
		  rsUserActionCount.close();
		  ad.connClose();
		  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
		  while(rspendForSpares.next()){
			  pendForSpares=rspendForSpares.getInt(1);
		  }
		  rspendForSpares.close();
		  ad.connClose();
		  
		  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
		  while(rsSolProvided.next()){
			  solutionProvided=rsSolProvided.getInt(1);
		  }
		  rsSolProvided.close();
		  ad.connClose();
		  
		  
		  
	  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
	  if(!keyword.equals(""))
		  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
			  while(rsCompletedCount.next()){
				  completedCount=rsCompletedCount.getInt(1);
			  }	
			  rsCompletedCount.close();
			  ad.connClose();
			  
			  	report.setNewStatusCount(newStatusCount);
			  	report.setInprocesscount(inprocess);
				report.setSendToITcount(sendToIT);
				report.setUserActionCount(userAction);
				report.setPendForSparescount(pendForSpares);
				report.setSolutionProvidedcount(solutionProvided);
				report.setCompletedCount(completedCount);
				String id= session.getId();
				
			
				String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
						+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				String fileName=id+".jpg";
				
				File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
			 	boolean test=fileToCreate.delete();
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute("ITIssues", "ITIssues");
				
				//get Issue records
				String requestStatus=report.getRequestStatus();
				
				
			
				LinkedList listofIssues=new LinkedList();	
				
			    
				int totalRecords=report.getTotal();//21
				int startRecord=report.getStartRecord();//11
				int endRecord=report.getEndRecord();	
				
				
				 startRecord=totalRecords-19;
				 endRecord=totalRecords;
				 report.setTotal(totalRecords);
				 report.setStartRecord(startRecord);
				 report.setEndRecord(totalRecords);
			    
			    
			    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =it.assignto) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
			    		+ " IT.approved_date ,"
			    		+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date,'Sap issues' as category "
			    		+ "from IT_SAP_ISSUES it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID ";
						if(!requestStatus.equals(""))
							getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
						if(!keyword.equals(""))
							getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
						if(!locationId.equals(""))
							getIssues=getIssues+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getIssues=getIssues+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
					    if(!tech.equals(""))
					    	getIssues=getIssues+" and  it.assignto='"+tech+"'";
			    
			    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    ResultSet rsIssues=ad.selectQuery(getIssues);
			    try{
				    while(rsIssues.next()){
				    	IssuesForm form1=new IssuesForm();
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						form1.setReftype(rsIssues.getString("category"));
						
						String ref = rsIssues.getString("refyear");
						String appDate="";
						String status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						///time taken
						
						  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
						try {
							
							Date date1 = simpleDateFormat.parse(ReqDate);	
							Date date2=new Date();
							
							if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
							{
								date2 = simpleDateFormat.parse(appDate);
							}
							else
							{
								 date2 = new Date();
							}
							
							
							long different = date2.getTime() - date1.getTime();
							 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 				
						} catch (ParseException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						listofIssues.add(form1); 
				    }
				    if(listofIssues.size()>0)
				    	request.setAttribute("listofIssues", listofIssues);
				    
				    
				    request.setAttribute("disableNextButton", "disableNextButton");
					request.setAttribute("previousButton", "previousButton");
					if(listofIssues.size()<10)
					{
						
						request.setAttribute("previousButton", "previousButton");
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					}
					request.setAttribute("displayRecordNo", "displayRecordNo");
			    }catch(Exception e){
			    	e.printStackTrace();
			    }
				  
				    
		  }catch(Exception e){
			  e.printStackTrace();
		  }
		  
		  

					}
			else{
				int inprocesscount=0;
				int opencount=0;
			    int closedcount=0;
				
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String keyword=report.getKeyword();
			    String toDate=report.getToDate();
			    String tech=report.getApprover();
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
				/*String sql1="select  COUNT(a1.Req_Status) as a,(select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open' ) as b ,"
						+ "(select COUNT(ITEng_Status)from IT_HELPDESK  where ITEng_Status='closed' )as c   from IT_HELPDESK  as a1 where a1.Req_Status='In Process'";
		*/		try {
				String getInProcessCount="select count(Req_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Req_Status='In Process' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getInProcessCount=getInProcessCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getInProcessCount=getInProcessCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getInProcessCount=getInProcessCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getInProcessCount=getInProcessCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getInProcessCount=getInProcessCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
				ResultSet rs=ad.selectQuery(getInProcessCount);
					while(rs.next()) {
						inprocesscount=rs.getInt(1);
					}
			 String getOpenCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='open' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			 if(!keyword.equals(""))
				 getOpenCount=getOpenCount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getOpenCount=getOpenCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getOpenCount=getOpenCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getOpenCount=getOpenCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getOpenCount=getOpenCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
			    ResultSet rsOpenCount=ad.selectQuery(getOpenCount);
				while(rsOpenCount.next()) {
					opencount=rsOpenCount.getInt(1);
				
				}
				 String getCloseCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='closed' "
							+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				 if(!keyword.equals(""))
					 getCloseCount=getCloseCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getCloseCount=getCloseCount+" and it.Req_type='"+category+"'";
					if(!locationId.equals(""))
						getCloseCount=getCloseCount+" and loc.LOCID='"+locationId+"'";
				    if(!deptId.equals(""))
				    	getCloseCount=getCloseCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCloseCount=getCloseCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
				    ResultSet rsCloseCount=ad.selectQuery(getCloseCount);
					while(rsCloseCount.next()) {
						closedcount=rsCloseCount.getInt(1);
					}
					rsCloseCount.close();
					ad.connClose();
					report.setInprocesscount(inprocesscount);
					report.setOpencount(opencount);
					report.setClosedcount(closedcount);
					
					
				} catch (Exception e) {
					
					e.printStackTrace();
				}
				
				String id= session.getId();
				
				 
				String totalCount=requestType+","+Integer.toString(inprocesscount)+","+Integer.toString(opencount)+","+Integer.toString(closedcount);
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute(requestType, requestType);
				
				
				//get Help Desk Records
				
				LinkedList list=new LinkedList();
				String requestStatus=report.getRequestStatus();
				
				
			    
			    
			    
				int totalRecords=report.getTotal();//21
				int startRecord=report.getStartRecord();//11
				int endRecord=report.getEndRecord();	
				
				
				 startRecord=totalRecords-19;
				 endRecord=totalRecords;
				 report.setTotal(totalRecords);
				 report.setStartRecord(startRecord);
				 report.setEndRecord(totalRecords);
			    
			    
			    String getHelpDeskRecords="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,it.Emp_No,emp.EMP_FULLNAME,it.Req_type,it.Req_Status,it.ITEng_Status,"
						+ "it.Pending_approver,it.Last_approver,(select emp1.EMP_FULLNAME from IT_Approvers as ita,emp_official_info as emp1 where it.Req_type=ita.Req_type and Priority='1' and ita.LOCATION_ID=loc.LOCID and emp1.PERNR=ita.Approver_ID)as technician , "
						+ " IT.approved_date ,loc.LOCATION_CODE ,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date, 'Helpdesk Request' as category  "
						+ "from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
						+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getHelpDeskRecords=getHelpDeskRecords+" and it.Req_type='"+category+"'";
				if(!requestStatus.equals("")){
					if(requestStatus.equals("In Process"))
						getHelpDeskRecords=getHelpDeskRecords+" and it.Req_Status='"+requestStatus+"'";
					else
						getHelpDeskRecords=getHelpDeskRecords+" and it.ITEng_Status='"+requestStatus+"'";
				}
				if(!locationId.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			    
			    getHelpDeskRecords=getHelpDeskRecords+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    

			    
			   ResultSet rs=ad.selectQuery(getHelpDeskRecords);
			   try{
				 while(rs.next()){
					 HelpDeskReportForm h=new HelpDeskReportForm();
					 h.setRequestNo(rs.getInt("Req_No"));
					   	String ReqDate=rs.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						h.setRequestDate(ReqDate);
					 h.setEmpno(rs.getString("Emp_No"));
					 h.setRequestername(rs.getString("EMP_FULLNAME"));				 
					 h.setReqname(rs.getString("Req_type"));
					 h.setLastApprover(rs.getString("Last_approver"));
					 h.setPendingApprover(rs.getString("Pending_approver"));
					 h.setApprover(rs.getString("technician"));
					 h.setRequestStatus(rs.getString("Req_Status"));
					 h.setItEngStatus(rs.getString("ITEng_Status"));
					 h.setEscalatedLevel(rs.getInt("Escalated_level"));
					 h.setReftypes(rs.getString("category"));
					 String ref = rs.getString("refyear");
					 String appDate="";
					 String status = rs.getString("Req_Status");
					 if(ref!=null)
					 			{
					 			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setApprovedDate(appDate);
					 			}
					 			if(status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setCompDate(appDate);
					 			}
					 			}
					 int actaulminutes =0;
						if(ref.equalsIgnoreCase("1900"))
						{	
						
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
						
						}
						
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{
							
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
							
						}
						
						if(status.equalsIgnoreCase("Completed"))
						{
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,1);
							}
						}
						
						long different = actaulminutes*60000L;
						 
						
						///time taken
					
					
					
											 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							h.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							h.setHr(time);

						
						    list.add(h);
	 
					

				 }
				 rs.close();
				 ad.connClose();
				 if(list.size()>0)
					 request.setAttribute("helpDeskList", list);
				 
				 request.setAttribute("disableNextButton", "disableNextButton");
					request.setAttribute("previousButton", "previousButton");
					if(list.size()<10)
					{
						
						request.setAttribute("previousButton", "previousButton");
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					}
					request.setAttribute("displayRecordNo", "displayRecordNo");
				 
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			  
				
				}
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 
	}
	  
	  public ActionForward lastRecordSummary(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  
		  
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			
			
			  String loc = report.getLocation();
				String techname = report.getTechname();
				String status = report.getStatus();
				String requesttype = report.getRequestBy();
				String getITRecords ="";
				
				Date k = new Date();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
				String datenw = sdf.format(k);
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord();//11
					int endRecord=report.getEndRecord();	
					
					
					 startRecord=totalRecords-19;
					 endRecord=totalRecords;
					 report.setTotal(totalRecords);
					 report.setStartRecord(startRecord);
					 report.setEndRecord(totalRecords);
					 
					 String fromDate=report.getFromDate1();
			            String toDate=report.getToDate1();
						
			            
			            if(!fromDate.equals("") && fromDate.contains("/"))
			  		   {
			  			   String a[]=fromDate.split("/");
			  			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			  			  report.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
			  			  
			  		   }
			  		
			  		 if(!toDate.equals("") && toDate.contains("/"))
			  		   {  
			  		   String b[]=toDate.split("/");
			  		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			  		  report.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
			  		   }
				    
				    
					 if(!loc.equalsIgnoreCase("All"))
						{
							
							if(requesttype.equalsIgnoreCase("Techinician")){
							
								
								if(status.equalsIgnoreCase("pending"))
								{	
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_ISSUES.approved_date) as refyear ,"
									     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									     +" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									     + " from IT_HELPDESK ,emp_official_info"
									     +" where emp_official_info.Pernr = AssignTo and" 
										 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
										 + " and Req_Status in ('In Process','Approved')" 
										 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
										 + " union all"
										 + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
								

							}
								
								if(status.equalsIgnoreCase("total"))
								{
									
									getITRecords= " select IT_ISSUES.Req_No,"
											+" IT_ISSUES.Req_date,"
											+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
											+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
											+" emp_official_info.EMP_FULLNAME as tech,"
											
											+" IT_ISSUES.Req_type,"
											+" IT_ISSUES.Sub_Category,"
											+" IT_ISSUES.Subject,"
											+" IT_ISSUES.Req_Priority,"
											+" IT_ISSUES.Req_Status, "
											+ "IT_ISSUES.approved_date ,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_ISSUES.approved_date) as refyear ,"
										       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
											+" from IT_ISSUES ,emp_official_info" 
											 +" where  "
											 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
											 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
											 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
											 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
											 +" union all" 
											 +" select" 
											  +" IT_HELPDESK.Req_No,"
											  +" IT_HELPDESK.Req_date,"
											  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
											 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
											  +" emp_official_info.EMP_FULLNAME,"
											  +" IT_HELPDESK.Req_type,"
											  +" IT_HELPDESK.Category,"
											  +" '',"
											  +" IT_HELPDESK.Req_Priority,"
											  +" IT_HELPDESK.Req_Status ,"
											  + " IT_HELPDESK.approved_date ,"
											  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
												+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
												+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
												+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
												+"(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
												+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
												+ "Year(IT_HELPDESK.approved_date) as refyear ,"
										      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
												 +" from IT_HELPDESK , emp_official_info" 
												 +" where emp_official_info.Pernr = AssignTo and" 
												 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
												 +" and  (Req_Status <>'Rejected' )" 
												 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
											  + " union all"
											  + " select IT_SAP_ISSUES.Req_No,"					
											 +" IT_SAP_ISSUES.Req_date,"
											   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
											 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
											 +" emp_official_info.EMP_FULLNAME,"
											 +" IT_SAP_ISSUES.Req_type,"
											 +" IT_SAP_ISSUES.Sub_Category,"
											 +" IT_SAP_ISSUES.Subject,"
											 +" IT_SAP_ISSUES.Req_Priority,"
											 +" IT_SAP_ISSUES.Req_Status,"
											 + " IT_SAP_ISSUES.approved_date ,"
											 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
												+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
												+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
												+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
												+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
												+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
												+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
										       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
											 +" from IT_SAP_ISSUES , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
											 
										

									
								}
								if(status.equalsIgnoreCase("forward"))
								{
									getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
											+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
											+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
											+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
											+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
											+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
											+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
											+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
											+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
											+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
											+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
											+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
													+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
										
								}
								
								if(status.equalsIgnoreCase("sla"))
								{
									getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
								+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
								+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
								+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
								+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
								+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
								+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
								+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
								+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
								+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
								+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
										+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
								+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
										
								}
								
							}		
							
							
							if(requesttype.equalsIgnoreCase("Category")){
								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status , "
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								         +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  
										  
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status  in('In Process','Approved')   )" 
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									
							}
								
						
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status , "
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
											 +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo " 
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
										  
									  
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									
							
						  }
							

							}
							
							
							if(requesttype.equalsIgnoreCase("Priority")){

								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +" Req_Status in ('In Process','Approved')" 
											 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
								
							}
								
						
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
											 +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +"  (Req_Status <>'Rejected' )" 
											 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									
							
						  }
						 

							
							}
					   
							if(requesttype.equalsIgnoreCase("Mode")){


								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and Req_Status  not in ('Completed','Rejected')" 
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									
							}
								
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"'" 
										 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  ( Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
							
						  }
								
						 	

						   
							
							}	
							
						}	
							
						if(loc.equalsIgnoreCase("All"))
						{


							
							if(requesttype.equalsIgnoreCase("Techinician")){
							
								
								if(status.equalsIgnoreCase("pending"))
								{	
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo " 
											 +" and  (Req_Status  in('In Process','Approved')   )" 
											 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
									       + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";

							}
								
								if(status.equalsIgnoreCase("total"))
								{
									
									getITRecords= " select IT_ISSUES.Req_No,"
											+" IT_ISSUES.Req_date,"
											+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
											+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
											+" emp_official_info.EMP_FULLNAME as tech,"
											
											+" IT_ISSUES.Req_type,"
											+" IT_ISSUES.Sub_Category,"
											+" IT_ISSUES.Subject,"
											+" IT_ISSUES.Req_Priority,"
											+" IT_ISSUES.Req_Status, "
											+ "IT_ISSUES.approved_date ,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_ISSUES.approved_date) as refyear ,"
										       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
											+" from IT_ISSUES ,emp_official_info" 
											 +" where  "
											 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
											 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
											 +" union all" 
											 +" select" 
											  +" IT_HELPDESK.Req_No,"
											  +" IT_HELPDESK.Req_date,"
											  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
											 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
											  +" emp_official_info.EMP_FULLNAME,"
											  +" IT_HELPDESK.Req_type,"
											  +" IT_HELPDESK.Category,"
											  +" '',"
											  +" IT_HELPDESK.Req_Priority,"
											  +" IT_HELPDESK.Req_Status ,"
											  + " IT_HELPDESK.approved_date ,"
											  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
												+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
												+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
												+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
												+"(case when year(IT_HELPDESK.approved_date)=1900 "
												+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
												+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
												+ "Year(IT_HELPDESK.approved_date) as refyear ,"
										      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
										       +" from IT_HELPDESK , emp_official_info" 
												 +" where emp_official_info.Pernr = AssignTo "  
												 +" and  (Req_Status <>'Rejected' )" 
												 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
											  + " union all"
											  + " select IT_SAP_ISSUES.Req_No,"					
											 +" IT_SAP_ISSUES.Req_date,"
											   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
											 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
											 +" emp_official_info.EMP_FULLNAME,"
											 +" IT_SAP_ISSUES.Req_type,"
											 +" IT_SAP_ISSUES.Sub_Category,"
											 +" IT_SAP_ISSUES.Subject,"
											 +" IT_SAP_ISSUES.Req_Priority,"
											 +" IT_SAP_ISSUES.Req_Status,"
											 + " IT_SAP_ISSUES.approved_date ,"
											 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
												+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
												+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
												+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
												+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
												+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
												+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
												+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
										       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
											 +" from IT_SAP_ISSUES , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo "  
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
											 

									
								}
								if(status.equalsIgnoreCase("forward"))
								{
									getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
											+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
											+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
											+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
											+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
											+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
											+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
											+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
											+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
											+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
											+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
											+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
										
								}
								
								if(status.equalsIgnoreCase("sla"))
								{
									getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
								+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
								+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
								+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
								+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
								+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
								+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
								+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
								+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
								+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
								+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
										+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
								+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
										
								}
							
							}		
							
							
							if(requesttype.equalsIgnoreCase("Category")){
								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
										 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status , "
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo " 
											 + " and Req_Status in ('In Process','Approved')" 
											 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "						  
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									
							}
								
						
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										  
										 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status , "
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo " 
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
							
						  }
								


							}
							
							
							if(requesttype.equalsIgnoreCase("Priority")){

								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										  
										 
										 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											  + "  Req_Status in ('In Process','Approved')" 
											 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
								
								
									
							}
								
						
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										  
							 
										 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +"  (Req_Status <>'Rejected' )" 
											 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
								
						  }
						  	

							
							}
					   
							if(requesttype.equalsIgnoreCase("Mode")){


								if(status.equalsIgnoreCase("pending"))
								{	
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  Req_Status <>'Completed'"
										 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										  
										  
										 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and Req_Status  not in ('Completed','Rejected')"
										 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									
							}
								
						  if(status.equalsIgnoreCase("total"))
						  {
								
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status ,"
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										  
										  
										 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status ,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  ( Req_Status <>'Rejected' )" 
										 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
								
						  }
								
						  	

						   
							
							}	
							
						
						}
		    
			
						 String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
			    		           + "Req_No,		Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,	min ,refyear,	reftype ,Escalated_level  "
			    		           + "From"
			    		           + "("+ getITRecords+ ") as  T) AS SUB "
			    		           + " Where   sub.RowNum between "+startRecord+" and "+endRecord+" order by Req_No desc";			
			    
			   ResultSet rsIssues=ad.selectQuery(itrecords);
			   try{
				 while(rsIssues.next()){
					 IssuesForm form1=new IssuesForm();
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setReftype(rsIssues.getString("reftype"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						String ref = rsIssues.getString("refyear");
						String appDate="";
						status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						int actaulminutes =0;
						if(ref.equalsIgnoreCase("1900"))
						{	
						
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
							}
						
						}
						
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{
							
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
							}
							
						}
						
						if(status.equalsIgnoreCase("Completed"))
						{
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,3);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date") ,rsIssues.getString("LOCATION_CODE") ,1);
							}
						}
						
						long different = actaulminutes*60000L;
						 
						
						///time taken
					
					
					
											 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 	
						
						
						
						
						listofIssues.add(form1);
				 }
				 rsIssues.close();
				 ad.connClose();
				 if(listofIssues.size()>0)
					 request.setAttribute("dashboardissue", listofIssues);
				 
				 request.setAttribute("disableNextButton", "disableNextButton");
					request.setAttribute("previousButton", "previousButton");
					if(listofIssues.size()<10)
					{
						
						request.setAttribute("previousButton", "previousButton");
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					}
					request.setAttribute("displayRecordNo", "displayRecordNo");
				 
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			  
				
			
			   displayreport(mapping, form, request, response);
			return mapping.findForward("displayITReport");
			
		 
		  
		  
		  
		  
	  
		  
	  
	  }
  
	  public ActionForward previousRecord(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  

		  

			
			
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			String requestType=report.getRequestType();
			
			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);

			if(requestType.equals("Issues")){
				 	int newStatusCount=0;
					int inprocess=0;
				 	int sendToIT=0;
				    int userAction=0;
				    int pendForSpares=0;
				    int solutionProvided=0;
				    int completedCount=0;
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String toDate=report.getToDate();
				String keyword=report.getKeyword();
				String tech=report.getApprover();
				String type = request.getParameter("selType");
				report.setSelType(type);
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
			    
			  try{
			    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			    if(!keyword.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
			  while(rsNewCount.next()){
				  newStatusCount=rsNewCount.getInt(1);
			  }
			  ad.connClose();
			  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
			  while(rsgetinprocessCount.next()){
				  inprocess=rsgetinprocessCount.getInt(1);
			  }
			  rsgetinprocessCount.close();
			  ad.connClose();
			  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
			  while(rsSendToITCount.next()){
				  sendToIT=rsSendToITCount.getInt(1);
			  }
			  rsSendToITCount.close();
			  ad.connClose();
			  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
			  while(rsUserActionCount.next()){
				  userAction=rsUserActionCount.getInt(1);
			  }
			  rsUserActionCount.close();
			  ad.connClose();
			  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
			  while(rspendForSpares.next()){
				  pendForSpares=rspendForSpares.getInt(1);
			  }
			  rspendForSpares.close();
			  ad.connClose();
			  
			  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
			  while(rsSolProvided.next()){
				  solutionProvided=rsSolProvided.getInt(1);
			  }
			  rsSolProvided.close();
			  ad.connClose();
			  
			  
			  
		  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
				  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
				  while(rsCompletedCount.next()){
					  completedCount=rsCompletedCount.getInt(1);
				  }	
				  rsCompletedCount.close();
				  ad.connClose();
				  
				  	report.setNewStatusCount(newStatusCount);
				  	report.setInprocesscount(inprocess);
					report.setSendToITcount(sendToIT);
					report.setUserActionCount(userAction);
					report.setPendForSparescount(pendForSpares);
					report.setSolutionProvidedcount(solutionProvided);
					report.setCompletedCount(completedCount);
					String id= session.getId();
					
				
					String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
							+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
					
					// GRAPH CREATION AND DISPLAY
					HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
					/** Create a PieDataSet* */    
					String realPath=getServlet().getServletContext().getRealPath("/images/graph");
					/** Define a file location to save this chart */   
					String fileLocation = realPath+"/"+id+".jpg"; 
					String fileName=id+".jpg";
					
					File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
				 	boolean test=fileToCreate.delete();
					chartCreator.processgraphimage(fileLocation, totalCount);
					request.setAttribute("ITIssues", "ITIssues");
					
					//get Issue records
					String requestStatus=report.getRequestStatus();
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord()-20;//11
					int endRecord=report.getStartRecord()-1;	
					
					
					if(startRecord==1)
					{
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
						endRecord=20;
					}
					
					
					report.setTotal(totalRecords);
					report.setStartRecord(1);
					report.setEndRecord(20);
				    
				    
				    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =itall.Technician_Id) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
				    		+ " IT.approved_date ,"
				    		+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
							+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
							+"(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
							+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date ,'It issues' as category "
				    		+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
							if(!requestStatus.equals(""))
								getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
							if(!keyword.equals(""))
								getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
							if(!locationId.equals(""))
								getIssues=getIssues+" and it.Location='"+locationId+"'";
						    if(!category.equals(""))
						    	getIssues=getIssues+" and it.Req_type='"+category+"'";
						    if(!deptId.equals(""))
						    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
						    if(!fromDate.equals(""))
						    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
						    if(!tech.equals(""))
						    	getIssues=getIssues+" and  itall.Technician_Id='"+tech+"'";
				    
				    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
				    ResultSet rsIssues=ad.selectQuery(getIssues);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
							String ref = rsIssues.getString("refyear");
							form1.setReftype(rsIssues.getString("category"));
							
							String appDate="";
							String status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							///time taken
							
							  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
							try {
								
								Date date1 = simpleDateFormat.parse(ReqDate);	
								Date date2=new Date();
								
								if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
								{
									date2 = simpleDateFormat.parse(appDate);
								}
								else
								{
									 date2 = new Date();
								}
								
								
								long different = date2.getTime() - date1.getTime();
								 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 				
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							listofIssues.add(form1); 
					    }
					    if(listofIssues.size()>0)
					    request.setAttribute("listofIssues", listofIssues);
					    
						request.setAttribute("displayRecordNo", "displayRecordNo");
					    endRecord=endRecord;
						report.setTotal(totalRecords);
						report.setStartRecord(startRecord);
						report.setEndRecord(endRecord);
						request.setAttribute("nextButton", "nextButton");
						if(startRecord!=1)
						request.setAttribute("previousButton", "previousButton");
						request.setAttribute("displayRecordNo", "displayRecordNo");
						if(listofIssues.size()<10)
						{
							report.setStartRecord(1);
							request.setAttribute("previousButton", "");
							request.setAttribute("disablePreviousButton", "disablePreviousButton");
						}
					    	
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
					  
			  }catch(Exception e){
				  e.printStackTrace();
			  }
			  
			  
	
			}
			else if(requestType.equals("SAPIssues")){

			 	int newStatusCount=0;
				int inprocess=0;
			 	int sendToIT=0;
			    int userAction=0;
			    int pendForSpares=0;
			    int solutionProvided=0;
			    int completedCount=0;
		    String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String toDate=report.getToDate();
			String keyword=report.getKeyword();
			String tech=report.getApprover();
		   if(!fromDate.equals("")){
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   
			   String b[]=toDate.split("/");
			   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   }
		    
		  try{
		    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
		    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		    if(!keyword.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
		    if(!locationId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
		    if(!category.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
		    if(!deptId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
		  while(rsNewCount.next()){
			  newStatusCount=rsNewCount.getInt(1);
		  }
		  ad.connClose();
		  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
		  while(rsgetinprocessCount.next()){
			  inprocess=rsgetinprocessCount.getInt(1);
		  }
		  rsgetinprocessCount.close();
		  ad.connClose();
		  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
		  while(rsSendToITCount.next()){
			  sendToIT=rsSendToITCount.getInt(1);
		  }
		  rsSendToITCount.close();
		  ad.connClose();
		  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
		  while(rsUserActionCount.next()){
			  userAction=rsUserActionCount.getInt(1);
		  }
		  rsUserActionCount.close();
		  ad.connClose();
		  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
		  while(rspendForSpares.next()){
			  pendForSpares=rspendForSpares.getInt(1);
		  }
		  rspendForSpares.close();
		  ad.connClose();
		  
		  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
		  while(rsSolProvided.next()){
			  solutionProvided=rsSolProvided.getInt(1);
		  }
		  rsSolProvided.close();
		  ad.connClose();
		  
		  
		  
	  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
	  if(!keyword.equals(""))
		  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
			  while(rsCompletedCount.next()){
				  completedCount=rsCompletedCount.getInt(1);
			  }	
			  rsCompletedCount.close();
			  ad.connClose();
			  
			  	report.setNewStatusCount(newStatusCount);
			  	report.setInprocesscount(inprocess);
				report.setSendToITcount(sendToIT);
				report.setUserActionCount(userAction);
				report.setPendForSparescount(pendForSpares);
				report.setSolutionProvidedcount(solutionProvided);
				report.setCompletedCount(completedCount);
				String id= session.getId();
				
			
				String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
						+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				String fileName=id+".jpg";
				
				File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
			 	boolean test=fileToCreate.delete();
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute("ITIssues", "ITIssues");
				
				//get Issue records
				String requestStatus=report.getRequestStatus();
				
				
			
				LinkedList listofIssues=new LinkedList();	
				
			    
				int totalRecords=report.getTotal();//21
				int startRecord=report.getStartRecord()-20;//11
				int endRecord=report.getStartRecord()-1;	
				
				
				if(startRecord==1)
				{
					request.setAttribute("disablePreviousButton", "disablePreviousButton");
					endRecord=20;
				}
				
				
				report.setTotal(totalRecords);
				report.setStartRecord(1);
				report.setEndRecord(20);
			    
			    
			    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =it.assignto) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
			    		+ " IT.approved_date ,"
			    		+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date , 'Sap issues' as category"
			    		+ " from IT_SAP_ISSUES it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID ";
						if(!requestStatus.equals(""))
							getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
						if(!keyword.equals(""))
							getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
						if(!locationId.equals(""))
							getIssues=getIssues+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getIssues=getIssues+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
					    if(!tech.equals(""))
					    	getIssues=getIssues+" and  it.assignto='"+tech+"'";
			    
			    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    ResultSet rsIssues=ad.selectQuery(getIssues);
			    try{
				    while(rsIssues.next()){
				    	IssuesForm form1=new IssuesForm();
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						form1.setReftype(rsIssues.getString("category"));
						
						String ref = rsIssues.getString("refyear");
						String appDate="";
						String status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						///time taken
						
						  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
						try {
							
							Date date1 = simpleDateFormat.parse(ReqDate);	
							Date date2=new Date();
							
							if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
							{
								date2 = simpleDateFormat.parse(appDate);
							}
							else
							{
								 date2 = new Date();
							}
							
							
							long different = date2.getTime() - date1.getTime();
							 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 				
						} catch (ParseException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						listofIssues.add(form1); 
				    }
				    if(listofIssues.size()>0)
				    request.setAttribute("listofIssues", listofIssues);
				    
					request.setAttribute("displayRecordNo", "displayRecordNo");
				    endRecord=endRecord;
					report.setTotal(totalRecords);
					report.setStartRecord(startRecord);
					report.setEndRecord(endRecord);
					request.setAttribute("nextButton", "nextButton");
					if(startRecord!=1)
					request.setAttribute("previousButton", "previousButton");
					request.setAttribute("displayRecordNo", "displayRecordNo");
					if(listofIssues.size()<10)
					{
						report.setStartRecord(1);
						request.setAttribute("previousButton", "");
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					}
				    	
			    }catch(Exception e){
			    	e.printStackTrace();
			    }
				  
		  }catch(Exception e){
			  e.printStackTrace();
		  }
		  
		  

					}
			else{
				int inprocesscount=0;
				int opencount=0;
			    int closedcount=0;
				
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String keyword=report.getKeyword();
			    String toDate=report.getToDate();
			    String tech=report.getApprover();
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
				/*String sql1="select  COUNT(a1.Req_Status) as a,(select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open' ) as b ,"
						+ "(select COUNT(ITEng_Status)from IT_HELPDESK  where ITEng_Status='closed' )as c   from IT_HELPDESK  as a1 where a1.Req_Status='In Process'";
		*/		try {
				String getInProcessCount="select count(Req_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Req_Status='In Process' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getInProcessCount=getInProcessCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getInProcessCount=getInProcessCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getInProcessCount=getInProcessCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getInProcessCount=getInProcessCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getInProcessCount=getInProcessCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
				ResultSet rs=ad.selectQuery(getInProcessCount);
					while(rs.next()) {
						inprocesscount=rs.getInt(1);
					}
			 String getOpenCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='open' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			 if(!keyword.equals(""))
				 getOpenCount=getOpenCount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getOpenCount=getOpenCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getOpenCount=getOpenCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getOpenCount=getOpenCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getOpenCount=getOpenCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
			    ResultSet rsOpenCount=ad.selectQuery(getOpenCount);
				while(rsOpenCount.next()) {
					opencount=rsOpenCount.getInt(1);
				
				}
				 String getCloseCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='closed' "
							+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				 if(!keyword.equals(""))
					 getCloseCount=getCloseCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getCloseCount=getCloseCount+" and it.Req_type='"+category+"'";
					if(!locationId.equals(""))
						getCloseCount=getCloseCount+" and loc.LOCID='"+locationId+"'";
				    if(!deptId.equals(""))
				    	getCloseCount=getCloseCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCloseCount=getCloseCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
				    ResultSet rsCloseCount=ad.selectQuery(getCloseCount);
					while(rsCloseCount.next()) {
						closedcount=rsCloseCount.getInt(1);
					}
					rsCloseCount.close();
					ad.connClose();
					report.setInprocesscount(inprocesscount);
					report.setOpencount(opencount);
					report.setClosedcount(closedcount);
					
					
				} catch (Exception e) {
					
					e.printStackTrace();
				}
				
				String id= session.getId();
				
				 
				String totalCount=requestType+","+Integer.toString(inprocesscount)+","+Integer.toString(opencount)+","+Integer.toString(closedcount);
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute(requestType, requestType);
				
				
				//get Help Desk Records
				
				LinkedList list=new LinkedList();
				String requestStatus=report.getRequestStatus();
				
				
			    
			    
			    
				  int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord()-20;//11
					int endRecord=report.getStartRecord()-1;	
					
					
					if(startRecord==1)
					{
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
						endRecord=20;
					}
					
					
					report.setTotal(totalRecords);
					report.setStartRecord(1);
					report.setEndRecord(20);
			    
			    String getHelpDeskRecords="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,it.Emp_No,emp.EMP_FULLNAME,it.Req_type,it.Req_Status,it.ITEng_Status,"
						+ "it.Pending_approver,it.Last_approver,(select emp1.EMP_FULLNAME from IT_Approvers as ita,emp_official_info as emp1 where it.Req_type=ita.Req_type and Priority='1' and ita.LOCATION_ID=loc.LOCID and emp1.PERNR=ita.Approver_ID)as technician , "
						+ " IT.approved_date ,loc.LOCATION_CODE,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date, 'Helpdesk Request' as category   "
						+ "from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
						+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getHelpDeskRecords=getHelpDeskRecords+" and it.Req_type='"+category+"'";
				if(!requestStatus.equals("")){
					if(requestStatus.equals("In Process"))
						getHelpDeskRecords=getHelpDeskRecords+" and it.Req_Status='"+requestStatus+"'";
					else
						getHelpDeskRecords=getHelpDeskRecords+" and it.ITEng_Status='"+requestStatus+"'";
				}
				if(!locationId.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			    
			    getHelpDeskRecords=getHelpDeskRecords+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    

			    
			   ResultSet rs=ad.selectQuery(getHelpDeskRecords);
			   try{
				 while(rs.next()){
					 HelpDeskReportForm h=new HelpDeskReportForm();
					 h.setRequestNo(rs.getInt("Req_No"));
					   	String ReqDate=rs.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						h.setRequestDate(ReqDate);
					 h.setEmpno(rs.getString("Emp_No"));
					 h.setRequestername(rs.getString("EMP_FULLNAME"));				 
					 h.setReqname(rs.getString("Req_type"));
					 h.setLastApprover(rs.getString("Last_approver"));
					 h.setPendingApprover(rs.getString("Pending_approver"));
					 h.setApprover(rs.getString("technician"));
					 h.setRequestStatus(rs.getString("Req_Status"));
					 h.setItEngStatus(rs.getString("ITEng_Status"));
					 h.setEscalatedLevel(rs.getInt("Escalated_level"));
					 h.setReftypes(rs.getString("category"));
					 
					 String ref = rs.getString("refyear");
					 String appDate="";
					 String status = rs.getString("Req_Status");
					 if(ref!=null)
					 			{
					 			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setApprovedDate(appDate);
					 			}
					 			if(status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setCompDate(appDate);
					 			}
					 			}
					 int actaulminutes =0;
						if(ref.equalsIgnoreCase("1900"))
						{	
						
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
						
						}
						
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{
							
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
							
						}
						
						if(status.equalsIgnoreCase("Completed"))
						{
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,1);
							}
						}
						
						long different = actaulminutes*60000L;
						 
						
						///time taken
					
					
					
											 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							h.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							h.setHr(time);
						
					 	
						
						
						
						
						    list.add(h);
	 
					

				 }
				 rs.close();
				 ad.connClose();
				 if(list.size()>0)
					 request.setAttribute("helpDeskList", list);
				 
				 request.setAttribute("displayRecordNo", "displayRecordNo");
				    endRecord=endRecord;
					report.setTotal(totalRecords);
					report.setStartRecord(startRecord);
					report.setEndRecord(endRecord);
					request.setAttribute("nextButton", "nextButton");
					if(startRecord!=1)
					request.setAttribute("previousButton", "previousButton");
					request.setAttribute("displayRecordNo", "displayRecordNo");
					if(list.size()<10)
					{
						report.setStartRecord(1);
						request.setAttribute("previousButton", "");
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					}
				 
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			  
				
				}
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 
		  
		  
		  
		  
	  
		  
	  }
	  

	  public ActionForward previousRecordSummary(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			String requestType=report.getRequestType();
			String loc = report.getLocation();
			String techname = report.getTechname();
			String status = report.getStatus();
			String requesttype = report.getRequestBy();
			String getITRecords ="";
			
			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);
                 
					
					//get Issue records
					String requestStatus=report.getRequestStatus();
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord()-20;//11
					int endRecord=report.getStartRecord()-1;	
					
					String fromDate=report.getFromDate1();
		            String toDate=report.getToDate1();
					
		            
		            if(!fromDate.equals("") && fromDate.contains("/"))
		  		   {
		  			   String a[]=fromDate.split("/");
		  			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
		  			  report.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
		  			  
		  		   }
		  		
		  		 if(!toDate.equals("") && toDate.contains("/"))
		  		   {  
		  		   String b[]=toDate.split("/");
		  		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		  		  report.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
		  		   }
					
					if(startRecord==1)
					{
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
						endRecord=20;
					}
					
					
					report.setTotal(totalRecords);
					
				    
				    
					if(!loc.equalsIgnoreCase("All"))
					{
						
						if(requesttype.equalsIgnoreCase("Techinician")){
						
							
							if(status.equalsIgnoreCase("pending"))
							{	
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status, "
									+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
								     +" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"'  " 
									 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status ,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								     + " from IT_HELPDESK ,emp_official_info"
								     +" where emp_official_info.Pernr = AssignTo and" 
									 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
									 + " and Req_Status in ('In Process','Approved')" 
									 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
									 + " union all"
									 + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
							

						}
							
							if(status.equalsIgnoreCase("total"))
							{
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
											 +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									

								
							}
							
							if(status.equalsIgnoreCase("forward"))
							{
								getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
										+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
										+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
										+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
										+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
										+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
										+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
										+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
										+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
										+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
												+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
									
							}
							
							if(status.equalsIgnoreCase("sla"))
							{
								getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
							+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
							+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
							+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
							+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
							+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
							+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
							+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
							+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
									+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
							+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
									
							}
						}		
						
						
						if(requesttype.equalsIgnoreCase("Category")){
							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
							         +" from IT_HELPDESK , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 + " and Req_Status in ('In Process','Approved')"
									 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  
									  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
										 +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
									  
								  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  (Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						
					  }
						

						}
						
						
						if(requesttype.equalsIgnoreCase("Priority")){

							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" Req_Status in ('In Process','Approved')" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
							
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
										 +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +"  (Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						
					  }
					 

						
						}
				   
						if(requesttype.equalsIgnoreCase("Mode")){


							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						}
							
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  ( Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
						
					  }
							
					 	

					   
						
						}	
						
					}	
						
					if(loc.equalsIgnoreCase("All"))
					{


						
						if(requesttype.equalsIgnoreCase("Techinician")){
						
							
							if(status.equalsIgnoreCase("pending"))
							{	
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status, "
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status ,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status  in('In Process','Approved')   )" 
										 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
								       + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')" 
									 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";

						}
							
							if(status.equalsIgnoreCase("total"))
							{
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo "  
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo "  
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 

								
							}
							if(status.equalsIgnoreCase("forward"))
							{
								getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
										+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
										+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
										+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
										+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
										+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
										+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
										+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
										+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
										+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
									
							}
							
							
							if(status.equalsIgnoreCase("sla"))
							{
								getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
							+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
							+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
							+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
							+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
							+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
							+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
							+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
							+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
									+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
							+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
									
							}
						
						}		
						
						
						if(requesttype.equalsIgnoreCase("Category")){
							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 + " and Req_Status in ('In Process','Approved')" 
										 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "						  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  (Req_Status <>'Rejected' )" 
									 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
						
					  }
							


						}
						
						
						if(requesttype.equalsIgnoreCase("Priority")){

							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										  + "  Req_Status in ('In Process','Approved')" 
										 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
							
							
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
						 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +"  (Req_Status <>'Rejected' )" 
									 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
							
					  }
					  	

						
						}
				   
						if(requesttype.equalsIgnoreCase("Mode")){


							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									  
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						}
							
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									  
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  ( Req_Status <>'Rejected' )" 
									 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
									 
							
					  }
							
					  	

					   
						
						}	
						
					
					}
					
         
					String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
		    		           + "Req_No,		Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,min,	refyear,	reftype ,Escalated_level "
		    		           + "From"
		    		           + "("+ getITRecords+ ") as  T) AS SUB "
		    		           + " Where   sub.RowNum between "+startRecord+" and "+endRecord+" order by Req_No desc";
				    
				    
				    ResultSet rsIssues=ad.selectQuery(itrecords);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							form1.setReftype(rsIssues.getString("reftype"));
							form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
							String ref = rsIssues.getString("refyear");
							String appDate="";
							status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							int actaulminutes =0;
							if(ref.equalsIgnoreCase("1900"))
							{	
							
								if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
								{
									actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
								}
							
								if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
								{
									actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
								}
							
							}
							
							if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
							{
								
								if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
								{
									actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
								}
							
								if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
								{
									actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
								}
								
							}
							
							if(status.equalsIgnoreCase("Completed"))
							{
								if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
								{
									actaulminutes=getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,3);
								}
							
								if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
								{
									actaulminutes=	getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,1);
								}
							}
							
							long different = actaulminutes*60000L;
							 
							
							///time taken
						
						
						
												 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 	
							
							
							
							
							listofIssues.add(form1);
							
					    }
					    
					    
					    if(listofIssues.size()>0)
					    request.setAttribute("dashboardissue", listofIssues);
					    
						request.setAttribute("displayRecordNo", "displayRecordNo");
					    endRecord=endRecord;
						report.setTotal(totalRecords);
						report.setStartRecord(startRecord);
						report.setEndRecord(endRecord);
						request.setAttribute("nextButton", "nextButton");
						if(startRecord!=1)
						request.setAttribute("previousButton", "previousButton");
						request.setAttribute("displayRecordNo", "displayRecordNo");
						if(listofIssues.size()<10)
						{
							report.setStartRecord(1);
							request.setAttribute("previousButton", "");
							request.setAttribute("disablePreviousButton", "disablePreviousButton");
						}
					    	
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
			
			  
	
			
		
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 
		  
		  
		  
		  
	  
		  
	  }

	  public ActionForward nextRecord(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  

			
			
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			String requestType=report.getRequestType();
			
			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);

			
			if(requestType.equals("Issues")){
				 	int newStatusCount=0;
					int inprocess=0;
				 	int sendToIT=0;
				    int userAction=0;
				    int pendForSpares=0;
				    int solutionProvided=0;
				    int completedCount=0;
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String toDate=report.getToDate();
				String keyword=report.getKeyword();
				String tech=report.getApprover();
				String type = request.getParameter("selType");
				report.setSelType(type); 
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
			    
			  try{
			    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			    if(!keyword.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
			  while(rsNewCount.next()){
				  newStatusCount=rsNewCount.getInt(1);
			  }
			  ad.connClose();
			  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
			  while(rsgetinprocessCount.next()){
				  inprocess=rsgetinprocessCount.getInt(1);
			  }
			  rsgetinprocessCount.close();
			  ad.connClose();
			  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
			  while(rsSendToITCount.next()){
				  sendToIT=rsSendToITCount.getInt(1);
			  }
			  rsSendToITCount.close();
			  ad.connClose();
			  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
			  while(rsUserActionCount.next()){
				  userAction=rsUserActionCount.getInt(1);
			  }
			  rsUserActionCount.close();
			  ad.connClose();
			  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
			  while(rspendForSpares.next()){
				  pendForSpares=rspendForSpares.getInt(1);
			  }
			  rspendForSpares.close();
			  ad.connClose();
			  
			  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
			  while(rsSolProvided.next()){
				  solutionProvided=rsSolProvided.getInt(1);
			  }
			  rsSolProvided.close();
			  ad.connClose();
			  
			  
			  
		  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
				  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
				  while(rsCompletedCount.next()){
					  completedCount=rsCompletedCount.getInt(1);
				  }	
				  rsCompletedCount.close();
				  ad.connClose();
				  
				  	report.setNewStatusCount(newStatusCount);
				  	report.setInprocesscount(inprocess);
					report.setSendToITcount(sendToIT);
					report.setUserActionCount(userAction);
					report.setPendForSparescount(pendForSpares);
					report.setSolutionProvidedcount(solutionProvided);
					report.setCompletedCount(completedCount);
					String id= session.getId();
					
				
					String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
							+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
					
					// GRAPH CREATION AND DISPLAY
					HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
					/** Create a PieDataSet* */    
					String realPath=getServlet().getServletContext().getRealPath("/images/graph");
					/** Define a file location to save this chart */   
					String fileLocation = realPath+"/"+id+".jpg"; 
					String fileName=id+".jpg";
					
					File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
				 	boolean test=fileToCreate.delete();
					chartCreator.processgraphimage(fileLocation, totalCount);
					request.setAttribute("ITIssues", "ITIssues");
					
					//get Issue records
					String requestStatus=report.getRequestStatus();
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord();//11
					int endRecord=report.getEndRecord();	
					
					
					if(totalRecords>endRecord)
					{
						if(totalRecords==endRecord)
						{
							startRecord=startRecord;
							endRecord=totalRecords;
						}
						if(totalRecords>endRecord)
						{
						startRecord=endRecord+1;
						endRecord=endRecord+20;
						}
					}
				    
				    
				    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =itall.Technician_Id) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority, "
				    		+ " IT.approved_date ,"
				    		+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
							+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
							+"(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
							+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date ,'It issues' as category "
				    		+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
							if(!requestStatus.equals(""))
								getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
							if(!keyword.equals(""))
								getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
							if(!locationId.equals(""))
								getIssues=getIssues+" and it.Location='"+locationId+"'";
						    if(!category.equals(""))
						    	getIssues=getIssues+" and it.Req_type='"+category+"'";
						    if(!deptId.equals(""))
						    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
						    if(!fromDate.equals(""))
						    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
						    if(!tech.equals(""))
						    	getIssues=getIssues+" and  itall.Technician_Id='"+tech+"'";
				    
				    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
				    ResultSet rsIssues=ad.selectQuery(getIssues);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
							form1.setReftype(rsIssues.getString("category"));
							
							String ref = rsIssues.getString("refyear");
							String appDate="";
							String  status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							///time taken
							
							  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
							try {
								
								Date date1 = simpleDateFormat.parse(ReqDate);	
								Date date2=new Date();
								
								if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
								{
									date2 = simpleDateFormat.parse(appDate);
								}
								else
								{
									 date2 = new Date();
								}
								
								
								long different = date2.getTime() - date1.getTime();
								 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 				
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							listofIssues.add(form1); 
					    }
					    if(listofIssues.size()>0)
					    	request.setAttribute("listofIssues", listofIssues);
					    
					    
					    if(listofIssues.size()!=0)
						{
							report.setTotal(totalRecords);
							report.setStartRecord(startRecord);
							report.setEndRecord(endRecord);
							request.setAttribute("nextButton", "nextButton");
							request.setAttribute("previousButton", "previousButton");
						}
						else
						{
							int start=startRecord;
							int end=startRecord;
							
							report.setTotal(totalRecords);
							report.setStartRecord(start);
							report.setEndRecord(end);
							
						}
					 if(listofIssues.size()<10)
					 {
						 report.setTotal(totalRecords);
						 report.setStartRecord(startRecord);
						 report.setEndRecord(startRecord+listofIssues.size()-1);
							request.setAttribute("nextButton", "");
							request.setAttribute("disableNextButton", "disableNextButton");
							request.setAttribute("previousButton", "previousButton"); 
						 
					 }
					    	
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
					  if(endRecord==totalRecords)
						 {
							 request.setAttribute("nextButton", "");
								request.setAttribute("disableNextButton", "disableNextButton");
						 }
						 request.setAttribute("displayRecordNo", "displayRecordNo");
					    
			  }catch(Exception e){
				  e.printStackTrace();
			  }
			  
			  
	
			}
			else if(requestType.equals("SAPIssues")){

			 	int newStatusCount=0;
				int inprocess=0;
			 	int sendToIT=0;
			    int userAction=0;
			    int pendForSpares=0;
			    int solutionProvided=0;
			    int completedCount=0;
		    String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String toDate=report.getToDate();
			String keyword=report.getKeyword();
			String tech=report.getApprover();
		   if(!fromDate.equals("")){
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   
			   String b[]=toDate.split("/");
			   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   }
		    
		  try{
		    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
		    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		    if(!keyword.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
		    if(!locationId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
		    if(!category.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
		    if(!deptId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
		  while(rsNewCount.next()){
			  newStatusCount=rsNewCount.getInt(1);
		  }
		  ad.connClose();
		  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
		  while(rsgetinprocessCount.next()){
			  inprocess=rsgetinprocessCount.getInt(1);
		  }
		  rsgetinprocessCount.close();
		  ad.connClose();
		  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
		  while(rsSendToITCount.next()){
			  sendToIT=rsSendToITCount.getInt(1);
		  }
		  rsSendToITCount.close();
		  ad.connClose();
		  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
		  while(rsUserActionCount.next()){
			  userAction=rsUserActionCount.getInt(1);
		  }
		  rsUserActionCount.close();
		  ad.connClose();
		  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
		  while(rspendForSpares.next()){
			  pendForSpares=rspendForSpares.getInt(1);
		  }
		  rspendForSpares.close();
		  ad.connClose();
		  
		  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
		  while(rsSolProvided.next()){
			  solutionProvided=rsSolProvided.getInt(1);
		  }
		  rsSolProvided.close();
		  ad.connClose();
		  
		  
		  
	  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
	  if(!keyword.equals(""))
		  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
			  while(rsCompletedCount.next()){
				  completedCount=rsCompletedCount.getInt(1);
			  }	
			  rsCompletedCount.close();
			  ad.connClose();
			  
			  	report.setNewStatusCount(newStatusCount);
			  	report.setInprocesscount(inprocess);
				report.setSendToITcount(sendToIT);
				report.setUserActionCount(userAction);
				report.setPendForSparescount(pendForSpares);
				report.setSolutionProvidedcount(solutionProvided);
				report.setCompletedCount(completedCount);
				String id= session.getId();
				
			
				String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
						+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				String fileName=id+".jpg";
				
				File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
			 	boolean test=fileToCreate.delete();
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute("ITIssues", "ITIssues");
				
				//get Issue records
				String requestStatus=report.getRequestStatus();
				
				
			
				LinkedList listofIssues=new LinkedList();	
				
			    
				int totalRecords=report.getTotal();//21
				int startRecord=report.getStartRecord();//11
				int endRecord=report.getEndRecord();	
				
				
				if(totalRecords>endRecord)
				{
					if(totalRecords==endRecord)
					{
						startRecord=startRecord;
						endRecord=totalRecords;
					}
					if(totalRecords>endRecord)
					{
					startRecord=endRecord+1;
					endRecord=endRecord+20;
					}
				}
			    
			    
			    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =it.assignto) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
			    		+ " IT.approved_date ,"
			    		+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date,'Sap issues' as category "
			    		+ "from IT_SAP_ISSUES it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID ";
						if(!requestStatus.equals(""))
							getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
						if(!keyword.equals(""))
							getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
						if(!locationId.equals(""))
							getIssues=getIssues+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getIssues=getIssues+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
					    if(!tech.equals(""))
					    	getIssues=getIssues+" and  it.assignto='"+tech+"'";
			    
			    getIssues=getIssues+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    ResultSet rsIssues=ad.selectQuery(getIssues);
			    try{
				    while(rsIssues.next()){
				    	IssuesForm form1=new IssuesForm();
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						form1.setReftype(rsIssues.getString("category"));
						String ref = rsIssues.getString("refyear");
						String appDate="";
						String status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						///time taken
						
						  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
						try {
							
							Date date1 = simpleDateFormat.parse(ReqDate);	
							Date date2=new Date();
							status = rsIssues.getString("Req_Status");
							if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
							{
								date2 = simpleDateFormat.parse(appDate);
							}
							else
							{
								 date2 = new Date();
							}
							
							
							long different = date2.getTime() - date1.getTime();
							 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 				
						} catch (ParseException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						listofIssues.add(form1); 
				    }
				    if(listofIssues.size()>0)
				    	request.setAttribute("listofIssues", listofIssues);
				    
				    
				    if(listofIssues.size()!=0)
					{
						report.setTotal(totalRecords);
						report.setStartRecord(startRecord);
						report.setEndRecord(endRecord);
						request.setAttribute("nextButton", "nextButton");
						request.setAttribute("previousButton", "previousButton");
					}
					else
					{
						int start=startRecord;
						int end=startRecord;
						
						report.setTotal(totalRecords);
						report.setStartRecord(start);
						report.setEndRecord(end);
						
					}
				 if(listofIssues.size()<10)
				 {
					 report.setTotal(totalRecords);
					 report.setStartRecord(startRecord);
					 report.setEndRecord(startRecord+listofIssues.size()-1);
						request.setAttribute("nextButton", "");
						request.setAttribute("disableNextButton", "disableNextButton");
						request.setAttribute("previousButton", "previousButton"); 
					 
				 }
				    	
			    }catch(Exception e){
			    	e.printStackTrace();
			    }
				  if(endRecord==totalRecords)
					 {
						 request.setAttribute("nextButton", "");
							request.setAttribute("disableNextButton", "disableNextButton");
					 }
					 request.setAttribute("displayRecordNo", "displayRecordNo");
				    
		  }catch(Exception e){
			  e.printStackTrace();
		  }
		  
		  

					}
			else{
				int inprocesscount=0;
				int opencount=0;
			    int closedcount=0;
				
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String keyword=report.getKeyword();
			    String toDate=report.getToDate();
			    String tech=report.getApprover();
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
				/*String sql1="select  COUNT(a1.Req_Status) as a,(select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open' ) as b ,"
						+ "(select COUNT(ITEng_Status)from IT_HELPDESK  where ITEng_Status='closed' )as c   from IT_HELPDESK  as a1 where a1.Req_Status='In Process'";
		*/		try {
				String getInProcessCount="select count(Req_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Req_Status='In Process' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getInProcessCount=getInProcessCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getInProcessCount=getInProcessCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getInProcessCount=getInProcessCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getInProcessCount=getInProcessCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getInProcessCount=getInProcessCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
				ResultSet rs=ad.selectQuery(getInProcessCount);
					while(rs.next()) {
						inprocesscount=rs.getInt(1);
					}
			 String getOpenCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='open' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			 if(!keyword.equals(""))
				 getOpenCount=getOpenCount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getOpenCount=getOpenCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getOpenCount=getOpenCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getOpenCount=getOpenCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getOpenCount=getOpenCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
			    ResultSet rsOpenCount=ad.selectQuery(getOpenCount);
				while(rsOpenCount.next()) {
					opencount=rsOpenCount.getInt(1);
				
				}
				 String getCloseCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='closed' "
							+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				 if(!keyword.equals(""))
					 getCloseCount=getCloseCount+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getCloseCount=getCloseCount+" and it.Req_type='"+category+"'";
					if(!locationId.equals(""))
						getCloseCount=getCloseCount+" and loc.LOCID='"+locationId+"'";
				    if(!deptId.equals(""))
				    	getCloseCount=getCloseCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCloseCount=getCloseCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
				    ResultSet rsCloseCount=ad.selectQuery(getCloseCount);
					while(rsCloseCount.next()) {
						closedcount=rsCloseCount.getInt(1);
					}
					rsCloseCount.close();
					ad.connClose();
					report.setInprocesscount(inprocesscount);
					report.setOpencount(opencount);
					report.setClosedcount(closedcount);
					
					
				} catch (Exception e) {
					
					e.printStackTrace();
				}
				
				String id= session.getId();
				
				 
				String totalCount=requestType+","+Integer.toString(inprocesscount)+","+Integer.toString(opencount)+","+Integer.toString(closedcount);
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute(requestType, requestType);
				
				
				//get Help Desk Records
				
				LinkedList list=new LinkedList();
				String requestStatus=report.getRequestStatus();
				
				
				int totalRecords=report.getTotal();//21
				int startRecord=report.getStartRecord();//11
				int endRecord=report.getEndRecord();	
			  
			    
				  if(totalRecords>endRecord)
					{
						if(totalRecords==endRecord)
						{
							startRecord=startRecord;
							endRecord=totalRecords;
						}
						if(totalRecords>endRecord)
						{
						startRecord=endRecord+1;
						endRecord=endRecord+20;
						}
					}
			    
			    String getHelpDeskRecords="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,it.Emp_No,emp.EMP_FULLNAME,it.Req_type,it.Req_Status,it.ITEng_Status,"
						+ "it.Pending_approver,it.Last_approver,(select emp1.EMP_FULLNAME from IT_Approvers as ita,emp_official_info as emp1 where it.Req_type=ita.Req_type and Priority='1' and ita.LOCATION_ID=loc.LOCID and emp1.PERNR=ita.Approver_ID)as technician , "
						+ " IT.approved_date , loc.LOCATION_CODE,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as category  "
						+ "from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
						+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
				if(!keyword.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and it.Emp_No='"+keyword+"'";
				 if(!category.equals(""))
					 getHelpDeskRecords=getHelpDeskRecords+" and it.Req_type='"+category+"'";
				if(!requestStatus.equals("")){
					if(requestStatus.equals("In Process"))
						getHelpDeskRecords=getHelpDeskRecords+" and it.Req_Status='"+requestStatus+"'";
					else
						getHelpDeskRecords=getHelpDeskRecords+" and it.ITEng_Status='"+requestStatus+"'";
				}
				if(!locationId.equals(""))
					getHelpDeskRecords=getHelpDeskRecords+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getHelpDeskRecords=getHelpDeskRecords+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			    
			    getHelpDeskRecords=getHelpDeskRecords+" ) as  sub Where   sub.RowNum between '"+startRecord+"' and '"+endRecord+"' order by Req_No desc";
			    

			    
			   ResultSet rs=ad.selectQuery(getHelpDeskRecords);
			   try{
				 while(rs.next()){
					 HelpDeskReportForm h=new HelpDeskReportForm();
					 h.setRequestNo(rs.getInt("Req_No"));
					   	String ReqDate=rs.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						h.setRequestDate(ReqDate);
					 h.setEmpno(rs.getString("Emp_No"));
					 h.setRequestername(rs.getString("EMP_FULLNAME"));				 
					 h.setReqname(rs.getString("Req_type"));
					 h.setLastApprover(rs.getString("Last_approver"));
					 h.setPendingApprover(rs.getString("Pending_approver"));
					 h.setApprover(rs.getString("technician"));
					 h.setRequestStatus(rs.getString("Req_Status"));
					 h.setItEngStatus(rs.getString("ITEng_Status"));
					 h.setEscalatedLevel(rs.getInt("Escalated_level"));
					 h.setReftypes(rs.getString("category"));
					 String ref = rs.getString("refyear");
					 String appDate="";
					 String status = rs.getString("Req_Status");
					 if(ref!=null)
					 			{
					 			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setApprovedDate(appDate);
					 			}
					 			if(status.equalsIgnoreCase("Completed"))
					 			{	
					 			 appDate=rs.getString("approved_date");
					 			String c[]=appDate.split(" "); 
					 			appDate=c[0];
					 			String d[]=appDate.split("-");
					 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
					 	        h.setCompDate(appDate);
					 			}
					 			}
						///time taken
					 int actaulminutes =0;
						if(ref.equalsIgnoreCase("1900"))
						{	
						
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
						
						}
						
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{
							
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
							}
							
						}
						
						if(status.equalsIgnoreCase("Completed"))
						{
							if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,2);
							}
						
							if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=	getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,1);
							}
						}
						
						long different = actaulminutes*60000L;
						 
						
						///time taken
					
					
					
											 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							h.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							h.setHr(time);
						
					 	
						
						
						
						
						    list.add(h);
				 }
				 rs.close();
				 ad.connClose();
				 if(list.size()>0)
					 request.setAttribute("helpDeskList", list);
				 
				 if(list.size()!=0)
					{
						report.setTotal(totalRecords);
						report.setStartRecord(startRecord);
						report.setEndRecord(endRecord);
						request.setAttribute("nextButton", "nextButton");
						request.setAttribute("previousButton", "previousButton");
					}
					else
					{
						int start=startRecord;
						int end=startRecord;
						
						report.setTotal(totalRecords);
						report.setStartRecord(start);
						report.setEndRecord(end);
						
					}
				 if(list.size()<10)
				 {
					 report.setTotal(totalRecords);
					 report.setStartRecord(startRecord);
					 report.setEndRecord(startRecord+list.size()-1);
						request.setAttribute("nextButton", "");
						request.setAttribute("disableNextButton", "disableNextButton");
						request.setAttribute("previousButton", "previousButton"); 
					 
				 }
				 
				 
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			   if(endRecord==totalRecords)
				 {
					 request.setAttribute("nextButton", "");
						request.setAttribute("disableNextButton", "disableNextButton");
				 }
				 request.setAttribute("displayRecordNo", "displayRecordNo");
			
				
				}
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 
		  
		  
		  
		  
	  }
	  

	  public ActionForward nextRecordSummary(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		  

			
			
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
	        String loc = report.getLocation();
			String techname = report.getTechname();
			String status = report.getStatus();
			String requesttype = report.getRequestBy();
			String getITRecords ="";
			
			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);
            String fromDate=report.getFromDate1();
            String toDate=report.getToDate1();
            
            if(!fromDate.equals("") && fromDate.contains("/"))
 		   {
 			   String a[]=fromDate.split("/");
 			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
 			  report.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
 			  
 		   }
 		
 		 if(!toDate.equals("") && toDate.contains("/"))
 		   {  
 		   String b[]=toDate.split("/");
 		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
 		  report.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
 		   }
            
			
					
					//get Issue records
					
					
				
					LinkedList listofIssues=new LinkedList();	
					
				    
					int totalRecords=report.getTotal();//21
					int startRecord=report.getStartRecord();//11
					int endRecord=report.getEndRecord();	
					
					
				/*	if(startRecord==1)
					{
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
						endRecord=20;
					}*/
					
					
					report.setTotal(totalRecords);
				    
				    
					if(!loc.equalsIgnoreCase("All"))
					{
						
						if(requesttype.equalsIgnoreCase("Techinician")){
						
							
							if(status.equalsIgnoreCase("pending"))
							{	
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status, "
									+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
								     +" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'  and req_date between '"+fromDate+"' and '"+toDate+"'  " 
									 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status ,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								     + " from IT_HELPDESK ,emp_official_info"
								     +" where emp_official_info.Pernr = AssignTo and" 
									 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
									 + " and Req_Status in ('In Process','Approved')" 
									 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "					 
									 + " union all"
									 + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
							

						}
							
							if(status.equalsIgnoreCase("total"))
							{
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
										 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
											 +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo and" 
											 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
										 
									

								
							}
							
							if(status.equalsIgnoreCase("forward"))
							{
								getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
										+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
										+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
										+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
										+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
										+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
										+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
										+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
										+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
										+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
												+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
									
							}
							
							
							if(status.equalsIgnoreCase("sla"))
							{
								getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
							+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
							+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
							+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
							+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
							+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
							+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
							+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
							+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
									+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
							+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
									
							}
						}		
						
						
						if(requesttype.equalsIgnoreCase("Category")){
							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
							         +" from IT_HELPDESK , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  
									  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  (Req_Status  in('In Process','Approved')   )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
										 +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
									  
								  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  (Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
									 
								
						
					  }
						

						}
						
						
						if(requesttype.equalsIgnoreCase("Priority")){

							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +" Req_Status in ('In Process','Approved')" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
							
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
										 +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +"  (Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
								
						
					  }
					 

						
						}
				   
						if(requesttype.equalsIgnoreCase("Mode")){


							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
								
						}
							
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
									 +" and  Location = '"+loc+"'" 
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  ( Req_Status <>'Rejected' )" 
									 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
						
					  }
							
					 	

					   
						
						}	
						
					}	
						
					if(loc.equalsIgnoreCase("All"))
					{


						
						if(requesttype.equalsIgnoreCase("Techinician")){
						
							
							if(status.equalsIgnoreCase("pending"))
							{	
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status, "
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status ,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status  in('In Process','Approved')   )" 
										 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "	
								       + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";

						}
							
							if(status.equalsIgnoreCase("total"))
							{
								
								getITRecords= " select IT_ISSUES.Req_No,"
										+" IT_ISSUES.Req_date,"
										+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
										+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
										+" emp_official_info.EMP_FULLNAME as tech,"
										
										+" IT_ISSUES.Req_type,"
										+" IT_ISSUES.Sub_Category,"
										+" IT_ISSUES.Subject,"
										+" IT_ISSUES.Req_Priority,"
										+" IT_ISSUES.Req_Status, "
										+ "IT_ISSUES.approved_date ,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
										+" from IT_ISSUES ,emp_official_info" 
										 +" where  "
										 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
										 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
										 +" union all" 
										 +" select" 
										  +" IT_HELPDESK.Req_No,"
										  +" IT_HELPDESK.Req_date,"
										  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
										  +" emp_official_info.EMP_FULLNAME,"
										  +" IT_HELPDESK.Req_type,"
										  +" IT_HELPDESK.Category,"
										  +" '',"
										  +" IT_HELPDESK.Req_Priority,"
										  +" IT_HELPDESK.Req_Status ,"
										  + " IT_HELPDESK.approved_date ,"
										  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
											+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
											+"(case when year(IT_HELPDESK.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
											+ "Year(IT_HELPDESK.approved_date) as refyear ,"
									      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
									       +" from IT_HELPDESK , emp_official_info" 
											 +" where emp_official_info.Pernr = AssignTo "  
											 +" and  (Req_Status <>'Rejected' )" 
											 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "	
										  + " union all"
										  + " select IT_SAP_ISSUES.Req_No,"					
										 +" IT_SAP_ISSUES.Req_date,"
										   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
										 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
										 +" emp_official_info.EMP_FULLNAME,"
										 +" IT_SAP_ISSUES.Req_type,"
										 +" IT_SAP_ISSUES.Sub_Category,"
										 +" IT_SAP_ISSUES.Subject,"
										 +" IT_SAP_ISSUES.Req_Priority,"
										 +" IT_SAP_ISSUES.Req_Status,"
										 + " IT_SAP_ISSUES.approved_date ,"
										 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
											+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
											+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
											+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
											+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
											+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
											+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
											+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
									       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
										 +" from IT_SAP_ISSUES , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo "  
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
										 

								
							}
							
							if(status.equalsIgnoreCase("forward"))
							{
								getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
										+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
										+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
										+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
										+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
										+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
										+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
										+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
										+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
										+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
										+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
									
							}
							
							
							if(status.equalsIgnoreCase("sla"))
							{
								getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
							+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
							+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
							+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
							+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
							+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
							+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
							+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
							+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
							+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
							+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
									+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
							+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
									
							}
							
						
						}		
						
						
						if(requesttype.equalsIgnoreCase("Category")){
							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 + " and Req_Status in ('In Process','Approved')" 
										 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "						  
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status , "
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo " 
										 +" and  (Req_Status <>'Rejected' )" 
										 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "					 
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  (Req_Status <>'Rejected' )" 
									 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
						
					  }
							


						}
						
						
						if(requesttype.equalsIgnoreCase("Priority")){

							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										  + "  Req_Status in ('In Process','Approved')" 
										 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "	
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
							
							
								
						}
							
					
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
						 
									 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									 +" union all" 
									 +" select" 
									  +" IT_HELPDESK.Req_No,"
									  +" IT_HELPDESK.Req_date,"
									  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
									  +" emp_official_info.EMP_FULLNAME,"
									  +" IT_HELPDESK.Req_type,"
									  +" IT_HELPDESK.Category,"
									  +" '',"
									  +" IT_HELPDESK.Req_Priority,"
									  +" IT_HELPDESK.Req_Status,"
									  + " IT_HELPDESK.approved_date ,"
									  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
										+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
										+"(case when year(IT_HELPDESK.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
										+ "Year(IT_HELPDESK.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
								       +" from IT_HELPDESK , emp_official_info" 
										 +" where emp_official_info.Pernr = AssignTo and" 
										 +"  (Req_Status <>'Rejected' )" 
										 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo and" 
									 +"  (Req_Status <>'Rejected' )" 
									 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
							
					  }
					  	

						
						}
				   
						if(requesttype.equalsIgnoreCase("Mode")){


							if(status.equalsIgnoreCase("pending"))
							{	
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where  Req_Status <>'Completed'"
									 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									  
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and Req_Status  not in ('Completed','Rejected')"
									 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
								
						}
							
					  if(status.equalsIgnoreCase("total"))
					  {
							
							
							getITRecords= " select IT_ISSUES.Req_No,"
									+" IT_ISSUES.Req_date,"
									+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
									+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
									+" emp_official_info.EMP_FULLNAME as tech,"
									
									+" IT_ISSUES.Req_type,"
									+" IT_ISSUES.Sub_Category,"
									+" IT_ISSUES.Subject,"
									+" IT_ISSUES.Req_Priority,"
									+" IT_ISSUES.Req_Status ,"
									+ "IT_ISSUES.approved_date ,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
									+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
									+"abs(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
									+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
									+"(case when year(IT_ISSUES.approved_date)=1900 "
									+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
									+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
									+ "Year(IT_ISSUES.approved_date) as refyear ,"
								       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
									+" from IT_ISSUES ,emp_official_info" 
									 +" where "
									 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
									  
									  
									 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  "
									  + " union all"
									  + " select IT_SAP_ISSUES.Req_No,"					
									 +" IT_SAP_ISSUES.Req_date,"
									   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
									 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
									 +" emp_official_info.EMP_FULLNAME,"
									 +" IT_SAP_ISSUES.Req_type,"
									 +" IT_SAP_ISSUES.Sub_Category,"
									 +" IT_SAP_ISSUES.Subject,"
									 +" IT_SAP_ISSUES.Req_Priority,"
									 +" IT_SAP_ISSUES.Req_Status ,"
									 + " IT_SAP_ISSUES.approved_date ,"
									 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
										+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
										+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
										+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
										+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
										+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
										+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
										+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
								    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
									 +" from IT_SAP_ISSUES , emp_official_info" 
									 +" where emp_official_info.Pernr = AssignTo " 
									 +" and  ( Req_Status <>'Rejected' )" 
									 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'  ";
									 
							
					  }
							
					  	

					   
						
						}	
						
					
					}
				
				
				//get Help Desk Records
				
				LinkedList list=new LinkedList();
				
				
				
				 totalRecords=report.getTotal();//21
				 startRecord=report.getStartRecord();//11
				 endRecord=report.getEndRecord();	
			  
			    
				  if(totalRecords>endRecord)
					{
						if(totalRecords==endRecord)
						{
							startRecord=startRecord;
							endRecord=totalRecords;
						}
						if(totalRecords>endRecord)
						{
						startRecord=endRecord+1;
						endRecord=endRecord+20;
						}
					}
			    
				  String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
	    		           + "Req_No,		Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,min,	refyear,	reftype ,Escalated_level "
	    		           + "From"
	    		           + "("+ getITRecords+ ") as  T) AS SUB "
	    		           + " Where   sub.RowNum between "+startRecord+" and "+endRecord+" order by Req_No desc";
			    

			    
			   ResultSet rsIssues=ad.selectQuery(itrecords);
			   try{
				 while(rsIssues.next()){
					 IssuesForm form1=new IssuesForm();
				
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setReftype(rsIssues.getString("reftype"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						String ref = rsIssues.getString("refyear");
						String appDate="";
						status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						int actaulminutes =0;
						if(ref.equalsIgnoreCase("1900"))
						{	
						
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
							}
						
						}
						
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{
							
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw, rsIssues.getString("LOCATION_CODE") ,2);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw, rsIssues.getString("LOCATION_CODE") ,1);
							}
							
						}
						
						if(status.equalsIgnoreCase("Completed"))
						{
							if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,3);
							}
						
							if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
							{
								actaulminutes=	getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,1);
							}
						}
						
						long different = actaulminutes*60000L;
						 
						
						///time taken
					
					
					
											 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 	
						
						
						
						
						listofIssues.add(form1);
					 
				 }
			
				 ad.connClose();
				 if(listofIssues.size()>0)
					 request.setAttribute("dashboardissue", listofIssues);
				 
				 if(listofIssues.size()!=0)
					{
						report.setTotal(totalRecords);
						report.setStartRecord(startRecord);
						report.setEndRecord(endRecord);
						request.setAttribute("nextButton", "nextButton");
						request.setAttribute("previousButton", "previousButton");
					}
					else
					{
						int start=startRecord;
						int end=startRecord;
						
						report.setTotal(totalRecords);
						report.setStartRecord(start);
						report.setEndRecord(end);
						
					}
				 if(listofIssues.size()<10)
				 {
					 report.setTotal(totalRecords);
					 report.setStartRecord(startRecord);
					 report.setEndRecord(startRecord+listofIssues.size()-1);
						request.setAttribute("nextButton", "");
						request.setAttribute("disableNextButton", "disableNextButton");
						request.setAttribute("previousButton", "previousButton"); 
					 
				 }
				 
				 
			   }catch(Exception e){
				   e.printStackTrace();
			   }
			   if(endRecord==totalRecords)
				 {
					 request.setAttribute("nextButton", "");
						request.setAttribute("disableNextButton", "disableNextButton");
				 }
				 request.setAttribute("displayRecordNo", "displayRecordNo");
			
				
				
	  
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 
		  
		  
		  
		  
	  }
 
	  
		public ActionForward displayITReport(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
			
			
			HelpDeskReportForm report=(HelpDeskReportForm)form;
			EssDao ad=new EssDao();
			HttpSession session=request.getSession();
			String requestType=report.getRequestType();
			String type = request.getParameter("selType");
			report.setSelType(type);		

			Date k = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
			String datenw = sdf.format(k);
			
			if(requestType.equals("Issues")){
				 	int newStatusCount=0;
					int inprocess=0;
				 	int sendToIT=0;
				    int userAction=0;
				    int pendForSpares=0;
				    int solutionProvided=0;
				    int completedCount=0;
			    String locationId=report.getLocationId();
			    String category=report.getCategory();
			    String deptId=report.getDepartment();
			    String fromDate=report.getFromDate();
			    String toDate=report.getToDate();
				String keyword=report.getKeyword();
				String tech=report.getApprover();
			   if(!fromDate.equals("")){
				   String a[]=fromDate.split("/");
				   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
				   
				   String b[]=toDate.split("/");
				   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
			   }
			    
			  try{
			    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='New' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			    if(!keyword.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
			  while(rsNewCount.next()){
				  newStatusCount=rsNewCount.getInt(1);
			  }
			  ad.connClose();
			  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
			  while(rsgetinprocessCount.next()){
				  inprocess=rsgetinprocessCount.getInt(1);
			  }
			  rsgetinprocessCount.close();
			  ad.connClose();
			  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
						  if(!keyword.equals(""))
							  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
			  while(rsSendToITCount.next()){
				  sendToIT=rsSendToITCount.getInt(1);
			  }
			  rsSendToITCount.close();
			  ad.connClose();
			  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
			  while(rsUserActionCount.next()){
				  userAction=rsUserActionCount.getInt(1);
			  }
			  rsUserActionCount.close();
			  ad.connClose();
			  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
			  while(rspendForSpares.next()){
				  pendForSpares=rspendForSpares.getInt(1);
			  }
			  rspendForSpares.close();
			  ad.connClose();
			  
			  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
					    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
			  if(!keyword.equals(""))
				  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
					    if(!locationId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
			  while(rsSolProvided.next()){
				  solutionProvided=rsSolProvided.getInt(1);
			  }
			  rsSolProvided.close();
			  ad.connClose();
			  
			  
			  
		  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
				  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
				  while(rsCompletedCount.next()){
					  completedCount=rsCompletedCount.getInt(1);
				  }	
				  rsCompletedCount.close();
				  ad.connClose();
				  
				  	report.setNewStatusCount(newStatusCount);
				  	report.setInprocesscount(inprocess);
					report.setSendToITcount(sendToIT);
					report.setUserActionCount(userAction);
					report.setPendForSparescount(pendForSpares);
					report.setSolutionProvidedcount(solutionProvided);
					report.setCompletedCount(completedCount);
					String id= session.getId();
					
				
					String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
							+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
					
					// GRAPH CREATION AND DISPLAY
					HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
					/** Create a PieDataSet* */    
					String realPath=getServlet().getServletContext().getRealPath("/images/graph");
					/** Define a file location to save this chart */   
					String fileLocation = realPath+"/"+id+".jpg"; 
					String fileName=id+".jpg";
					
					File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
				 	boolean test=fileToCreate.delete();
				//	chartCreator.processgraphimage(fileLocation, totalCount);
					request.setAttribute("ITIssues", "ITIssues");
					
					//get Issue records
					String requestStatus=report.getRequestStatus();
					
					int totalRecords = 0;
					  int  startRecord=0;
					  int  endRecord=0;
					
				
					LinkedList listofIssues=new LinkedList();	
					String getIssuescount="select count(*)"
					+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
					if(!requestStatus.equals(""))
						getIssuescount=getIssuescount+" and it.Req_Status='"+requestStatus+"'";
					if(!keyword.equals(""))
						getIssuescount=getIssuescount+" and it.Emp_No='"+keyword+"'";
					if(!locationId.equals(""))
						getIssuescount=getIssuescount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getIssuescount=getIssuescount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getIssuescount=getIssuescount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getIssuescount=getIssuescount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
				    if(!tech.equals(""))
				    	getIssuescount=getIssuescount+" and  itall.Technician_Id='"+tech+"'";
				    
				    //total count
				    ResultSet rsIssuescount=ad.selectQuery(getIssuescount);
				    while(rsIssuescount.next()){
				    	totalRecords=rsIssuescount.getInt(1);
				    }
				    
				    if(totalRecords>20)
					 {
				    	report.setTotal(totalRecords);
					 startRecord=1;
					 endRecord=20;
					 report.setStartRecord(1);
					 report.setEndRecord(20);
						request.setAttribute("disablePreviousButton", "disablePreviousButton");
					 request.setAttribute("displayRecordNo", "displayRecordNo");
					 request.setAttribute("nextButton", "nextButton");
					 }else
					 {
						  startRecord=1;
						  endRecord=totalRecords;
						  report.setTotal(totalRecords);
						  report.setStartRecord(1);
						  report.setEndRecord(totalRecords); 
					 }
					 
				    
				    
				    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =itall.Technician_Id) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
				    		+ " IT.approved_date ,"
				    		+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
							+"abs(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
							+"(case when year(IT.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min ,"
							+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date ,'It issues' as Category  "
							+ "from IT_ISSUES it,IT_All_ISSUES as itall,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID and it.Req_No=itall.Req_Id";
							if(!requestStatus.equals(""))
								getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
							if(!keyword.equals(""))
								getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
							if(!locationId.equals(""))
								getIssues=getIssues+" and it.Location='"+locationId+"'";
						    if(!category.equals(""))
						    	getIssues=getIssues+" and it.Req_type='"+category+"'";
						    if(!deptId.equals(""))
						    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
						    if(!fromDate.equals(""))
						    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
						    if(!tech.equals(""))
						    	getIssues=getIssues+" and  itall.Technician_Id='"+tech+"'";
				    
				    getIssues=getIssues+" ) as  sub Where   sub.RowNum between 1 and 20 order by Req_No desc";
				    ResultSet rsIssues=ad.selectQuery(getIssues);
				    try{
					    while(rsIssues.next()){
					    	IssuesForm form1=new IssuesForm();
					    	form1.setRequestNo(rsIssues.getInt("Req_No"));
					    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
					    	String ReqDate=rsIssues.getString("Req_date");
							String a[]=ReqDate.split(" "); 
							ReqDate=a[0];
							String b[]=ReqDate.split("-");
							ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
							form1.setReqDate(ReqDate);
							form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
							form1.setTechnicianName(rsIssues.getString("tech"));
							form1.setCategory(rsIssues.getString("Req_Type"));
							form1.setSubcategory(rsIssues.getString("Sub_Category"));
							form1.setSubject(rsIssues.getString("Subject"));
							form1.setRequestStatus(rsIssues.getString("Req_Status"));
							form1.setReqPriority(rsIssues.getString("Req_Priority"));
							form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
							form1.setReftypes(rsIssues.getString("category"));
							String ref = rsIssues.getString("refyear");
							String appDate="";
							String status = rsIssues.getString("Req_Status");
							if(ref!=null)
										{
										if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setApprovedDate(appDate);
										}
										if(status.equalsIgnoreCase("Completed"))
										{	
										 appDate=rsIssues.getString("approved_date");
										String c[]=appDate.split(" "); 
										appDate=c[0];
										String d[]=appDate.split("-");
										appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
								        form1.setCompDate(appDate);
										}
										}
							///time taken
							
							  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
							try {
								
								Date date1 = simpleDateFormat.parse(ReqDate);	
								Date date2=new Date();
								
								if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
								{
									date2 = simpleDateFormat.parse(appDate);
								}
								else
								{
									 date2 = new Date();
								}
								
								
								long different = date2.getTime() - date1.getTime();
								 

								long secondsInMilli = 1000;
								long minutesInMilli = secondsInMilli * 60;
								long hoursInMilli = minutesInMilli * 60;
								long daysInMilli = hoursInMilli * 24;
						 
								long elapsedDays = different / daysInMilli;
								different = different % daysInMilli;
						 
								long elapsedHours = different / hoursInMilli;
								different = different % hoursInMilli;
						 
								long elapsedMinutes = different / minutesInMilli;
								different = different % minutesInMilli;
						 
						
								form1.setDay(Long.toString(elapsedDays));
								String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
								form1.setHr(time);
							
						 				
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							listofIssues.add(form1); 
					    }
					    if(listofIssues.size()>0)
					    	request.setAttribute("listofIssues", listofIssues);
					    
					    	
				    }catch(Exception e){
				    	e.printStackTrace();
				    }
					    
			  }catch(Exception e){
				  e.printStackTrace();
			  }
			}
			else if(requestType.equals("SAPIssues")){
			 	int newStatusCount=0;
				int inprocess=0;
			 	int sendToIT=0;
			    int userAction=0;
			    int pendForSpares=0;
			    int solutionProvided=0;
			    int completedCount=0;
		    String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String toDate=report.getToDate();
			String keyword=report.getKeyword();
			String tech=report.getApprover();
		   if(!fromDate.equals("")){
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   
			   String b[]=toDate.split("/");
			   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   }
		    
		  try{
		    String getNewStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
		    + "where it.Req_Status='Pending' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		    if(!keyword.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Emp_No='"+keyword+"'";
		    if(!locationId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Location='"+locationId+"'";
		    if(!category.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and it.Req_type='"+category+"'";
		    if(!deptId.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getNewStatusCount=getNewStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsNewCount=ad.selectQuery(getNewStatusCount);
		  while(rsNewCount.next()){
			  newStatusCount=rsNewCount.getInt(1);
		  }
		  ad.connClose();
		  String getinprocessCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='In Process') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getinprocessCount=getinprocessCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getinprocessCount=getinprocessCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getinprocessCount=getinprocessCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getinprocessCount=getinprocessCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsgetinprocessCount=ad.selectQuery(getinprocessCount);
		  while(rsgetinprocessCount.next()){
			  inprocess=rsgetinprocessCount.getInt(1);
		  }
		  rsgetinprocessCount.close();
		  ad.connClose();
		  String getsendToITCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Sent To IT') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
					  if(!keyword.equals(""))
						  getsendToITCount=getsendToITCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsendToITCount=getsendToITCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsendToITCount=getsendToITCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsendToITCount=getsendToITCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSendToITCount=ad.selectQuery(getsendToITCount);
		  while(rsSendToITCount.next()){
			  sendToIT=rsSendToITCount.getInt(1);
		  }
		  rsSendToITCount.close();
		  ad.connClose();
		  String getUserActionCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='User Action') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getUserActionCount=getUserActionCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getUserActionCount=getUserActionCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getUserActionCount=getUserActionCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getUserActionCount=getUserActionCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsUserActionCount=ad.selectQuery(getUserActionCount);
		  while(rsUserActionCount.next()){
			  userAction=rsUserActionCount.getInt(1);
		  }
		  rsUserActionCount.close();
		  ad.connClose();
		  String getpendForSparesCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Pending For Spares') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getpendForSparesCount=getpendForSparesCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getpendForSparesCount=getpendForSparesCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rspendForSpares=ad.selectQuery(getUserActionCount);
		  while(rspendForSpares.next()){
			  pendForSpares=rspendForSpares.getInt(1);
		  }
		  rspendForSpares.close();
		  ad.connClose();
		  
		  String getsolutionProvidedCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
				    + "where (it.Req_Status='Solution Provided') and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
		  if(!keyword.equals(""))
			  getsolutionProvidedCount=getsolutionProvidedCount+" and it.Emp_No='"+keyword+"'";
				    if(!locationId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Location='"+locationId+"'";
				    if(!category.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and it.Req_type='"+category+"'";
				    if(!deptId.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  dept.DPTID='"+deptId+"'";
				    if(!fromDate.equals(""))
				    	getsolutionProvidedCount=getsolutionProvidedCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
		  ResultSet rsSolProvided=ad.selectQuery(getsolutionProvidedCount);
		  while(rsSolProvided.next()){
			  solutionProvided=rsSolProvided.getInt(1);
		  }
		  rsSolProvided.close();
		  ad.connClose();
		  
		  
		  
	  String getCompletdStatusCount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Req_Status='Completed' and it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID  ";
	  if(!keyword.equals(""))
		  getCompletdStatusCount=getCompletdStatusCount+" and it.Emp_No='"+keyword+"'";
			    if(!locationId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getCompletdStatusCount=getCompletdStatusCount+" and  (Req_date between '"+fromDate+"' and '"+toDate+"')";
			  ResultSet rsCompletedCount=ad.selectQuery(getCompletdStatusCount);
			  while(rsCompletedCount.next()){
				  completedCount=rsCompletedCount.getInt(1);
			  }	
			  rsCompletedCount.close();
			  ad.connClose();
			  
			  	report.setNewStatusCount(newStatusCount);
			  	report.setInprocesscount(inprocess);
				report.setSendToITcount(sendToIT);
				report.setUserActionCount(userAction);
				report.setPendForSparescount(pendForSpares);
				report.setSolutionProvidedcount(solutionProvided);
				report.setCompletedCount(completedCount);
				String id= session.getId();
				
			
				String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
						+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount)+",";
				
				// GRAPH CREATION AND DISPLAY
				HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
				/** Create a PieDataSet* */    
				String realPath=getServlet().getServletContext().getRealPath("/images/graph");
				/** Define a file location to save this chart */   
				String fileLocation = realPath+"/"+id+".jpg"; 
				String fileName=id+".jpg";
				
				File fileToCreate = new File(getServlet().getServletContext().getRealPath("/images/graph"), fileName);
			 	boolean test=fileToCreate.delete();
				chartCreator.processgraphimage(fileLocation, totalCount);
				request.setAttribute("ITIssues", "ITIssues");
				
				//get Issue records
				String requestStatus=report.getRequestStatus();
				
				int totalRecords = 0;
				  int  startRecord=0;
				  int  endRecord=0;
				
			
				LinkedList listofIssues=new LinkedList();	
				String getIssuescount="select COUNT(Req_Status) as newCount from IT_SAP_ISSUES it,emp_official_info emp,DEPARTMENT dept "
			    + "where it.Emp_No=emp.PERNR and emp.DPTID=dept.DPTID";
				if(!requestStatus.equals(""))
					getIssuescount=getIssuescount+" and it.Req_Status='"+requestStatus+"'";
				if(!keyword.equals(""))
					getIssuescount=getIssuescount+" and it.Emp_No='"+keyword+"'";
				if(!locationId.equals(""))
					getIssuescount=getIssuescount+" and it.Location='"+locationId+"'";
			    if(!category.equals(""))
			    	getIssuescount=getIssuescount+" and it.Req_type='"+category+"'";
			    if(!deptId.equals(""))
			    	getIssuescount=getIssuescount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getIssuescount=getIssuescount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			    if(!tech.equals(""))
			    	getIssuescount=getIssuescount+" and  it.assignto='"+tech+"'";
			    
			    //total count
			    ResultSet rsIssuescount=ad.selectQuery(getIssuescount);
			    while(rsIssuescount.next()){
			    	totalRecords=rsIssuescount.getInt(1);
			    }
			    
			    if(totalRecords>20)
				 {
			    	report.setTotal(totalRecords);
				 startRecord=1;
				 endRecord=20;
				 report.setStartRecord(1);
				 report.setEndRecord(20);
					request.setAttribute("disablePreviousButton", "disablePreviousButton");
				 request.setAttribute("displayRecordNo", "displayRecordNo");
				 request.setAttribute("nextButton", "nextButton");
				 }else
				 {
					  startRecord=1;
					  endRecord=totalRecords;
					  report.setTotal(totalRecords);
					  report.setStartRecord(1);
					  report.setEndRecord(totalRecords); 
				 }
				 
			    
			    
			    String getIssues="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,loc.LOCATION_CODE,emp.EMP_FULLNAME,(select EMP_FULLNAME from emp_official_info where PERNR =it.assignto) as tech,it.Req_type,it.Sub_Category,it.Subject,it.Req_Status,it.Req_Priority ,"
			    		+ " IT.approved_date ,IT.sap_request_type,"
			    		+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
						+"abs(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
						+"(case when year(IT.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
						+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date ,'Sap issues' as category "
			    		+ "from IT_SAP_ISSUES it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Emp_No=emp.PERNR and loc.LOCID=it.Location and emp.DPTID=dept.DPTID ";
						if(!requestStatus.equals(""))
							getIssues=getIssues+" and it.Req_Status='"+requestStatus+"'";
						if(!keyword.equals(""))
							getIssues=getIssues+" and it.Emp_No='"+keyword+"'";
						if(!locationId.equals(""))
							getIssues=getIssues+" and it.Location='"+locationId+"'";
					    if(!category.equals(""))
					    	getIssues=getIssues+" and it.Req_type='"+category+"'";
					    if(!deptId.equals(""))
					    	getIssues=getIssues+" and  dept.DPTID='"+deptId+"'";
					    if(!fromDate.equals(""))
					    	getIssues=getIssues+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
					    if(!tech.equals(""))
					    	getIssues=getIssues+" and  it.assignto='"+tech+"'";
			    
			    getIssues=getIssues+" ) as  sub Where   sub.RowNum between 1 and 20 order by Req_No desc";
			    ResultSet rsIssues=ad.selectQuery(getIssues);
			    try{
				    while(rsIssues.next()){
				    	IssuesForm form1=new IssuesForm();
				    	form1.setRequestNo(rsIssues.getInt("Req_No"));
				    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
				    	String ReqDate=rsIssues.getString("Req_date");
						String a[]=ReqDate.split(" "); 
						ReqDate=a[0];
						String b[]=ReqDate.split("-");
						ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
						form1.setReqDate(ReqDate);
						form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
						form1.setTechnicianName(rsIssues.getString("tech"));
						form1.setCategory(rsIssues.getString("Req_Type"));
						form1.setSubcategory(rsIssues.getString("Sub_Category"));
						form1.setSubject(rsIssues.getString("Subject"));
						form1.setRequestStatus(rsIssues.getString("Req_Status"));
						form1.setReqPriority(rsIssues.getString("Req_Priority"));
						form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
						form1.setReftypes(rsIssues.getString("category"));
						form1.setRequestName(rsIssues.getString("sap_request_type"));
						
						
						String ref = rsIssues.getString("refyear");
						String appDate="";
						String status = rsIssues.getString("Req_Status");
						if(ref!=null)
									{
									if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setApprovedDate(appDate);
									}
									if(status.equalsIgnoreCase("Completed"))
									{	
									 appDate=rsIssues.getString("approved_date");
									String c[]=appDate.split(" "); 
									appDate=c[0];
									String d[]=appDate.split("-");
									appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
							        form1.setCompDate(appDate);
									}
									}
						///time taken
						
						  SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/M/yyyy HH:mm:ss");
						try {
							
							Date date1 = simpleDateFormat.parse(ReqDate);	
							Date date2=new Date();
							if(!ref.equalsIgnoreCase("1900") && status.equalsIgnoreCase("Completed"))
							{
								date2 = simpleDateFormat.parse(appDate);
							}
							else
							{
								 date2 = new Date();
							}
							
							
							long different = date2.getTime() - date1.getTime();
							 

							long secondsInMilli = 1000;
							long minutesInMilli = secondsInMilli * 60;
							long hoursInMilli = minutesInMilli * 60;
							long daysInMilli = hoursInMilli * 24;
					 
							long elapsedDays = different / daysInMilli;
							different = different % daysInMilli;
					 
							long elapsedHours = different / hoursInMilli;
							different = different % hoursInMilli;
					 
							long elapsedMinutes = different / minutesInMilli;
							different = different % minutesInMilli;
					 
					
							form1.setDay(Long.toString(elapsedDays));
							String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
							form1.setHr(time);
						
					 				
						} catch (ParseException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						listofIssues.add(form1); 
				    }
				    if(listofIssues.size()>0)
				    	request.setAttribute("listofIssues", listofIssues);
				    
				    	
			    }catch(Exception e){
			    	e.printStackTrace();
			    }
				    
		  }catch(Exception e){
			  e.printStackTrace();
		  }
		}
			else{
			int inprocesscount=0;
			int opencount=0;
		    int closedcount=0;
			
		    String locationId=report.getLocationId();
		    String category=report.getCategory();
		    String deptId=report.getDepartment();
		    String fromDate=report.getFromDate();
		    String keyword=report.getKeyword();
		    String toDate=report.getToDate();
		    String tech=report.getApprover();
		   if(!fromDate.equals("")){
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   
			   String b[]=toDate.split("/");
			   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   }
			/*String sql1="select  COUNT(a1.Req_Status) as a,(select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open' ) as b ,"
					+ "(select COUNT(ITEng_Status)from IT_HELPDESK  where ITEng_Status='closed' )as c   from IT_HELPDESK  as a1 where a1.Req_Status='In Process'";
	*/		try {
			String getInProcessCount="select count(Req_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.Req_Status='In Process' "
					+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			if(!keyword.equals(""))
				getInProcessCount=getInProcessCount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getInProcessCount=getInProcessCount+" and it.Req_type='"+category+"'";
			if(!locationId.equals(""))
				getInProcessCount=getInProcessCount+" and loc.LOCID='"+locationId+"'";
		    if(!deptId.equals(""))
		    	getInProcessCount=getInProcessCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getInProcessCount=getInProcessCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
			ResultSet rs=ad.selectQuery(getInProcessCount);
				while(rs.next()) {
					inprocesscount=rs.getInt(1);
				}
		 String getOpenCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='open' "
					+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
		 if(!keyword.equals(""))
			 getOpenCount=getOpenCount+" and it.Emp_No='"+keyword+"'";
		 if(!category.equals(""))
			 getOpenCount=getOpenCount+" and it.Req_type='"+category+"'";
			if(!locationId.equals(""))
				getOpenCount=getOpenCount+" and loc.LOCID='"+locationId+"'";
		    if(!deptId.equals(""))
		    	getOpenCount=getOpenCount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getOpenCount=getOpenCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
		    ResultSet rsOpenCount=ad.selectQuery(getOpenCount);
			while(rsOpenCount.next()) {
				opencount=rsOpenCount.getInt(1);
			
			}
			 String getCloseCount="select count(ITEng_Status)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept where it.ITEng_Status='closed' "
						+ "and it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			 if(!keyword.equals(""))
				 getCloseCount=getCloseCount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getCloseCount=getCloseCount+" and it.Req_type='"+category+"'";
				if(!locationId.equals(""))
					getCloseCount=getCloseCount+" and loc.LOCID='"+locationId+"'";
			    if(!deptId.equals(""))
			    	getCloseCount=getCloseCount+" and  dept.DPTID='"+deptId+"'";
			    if(!fromDate.equals(""))
			    	getCloseCount=getCloseCount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";		
			    ResultSet rsCloseCount=ad.selectQuery(getCloseCount);
				while(rsCloseCount.next()) {
					closedcount=rsCloseCount.getInt(1);
				}
				rsCloseCount.close();
				ad.connClose();
				report.setInprocesscount(inprocesscount);
				report.setOpencount(opencount);
				report.setClosedcount(closedcount);
				
				
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
			String id= session.getId();
			
			 
			String totalCount=requestType+","+Integer.toString(inprocesscount)+","+Integer.toString(opencount)+","+Integer.toString(closedcount);
			
			// GRAPH CREATION AND DISPLAY
			HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
			/** Create a PieDataSet* */    
			String realPath=getServlet().getServletContext().getRealPath("/images/graph");
			/** Define a file location to save this chart */   
			String fileLocation = realPath+"/"+id+".jpg"; 
		//	chartCreator.processgraphimage(fileLocation, totalCount);
			request.setAttribute(requestType, requestType);
			
			
			//get Help Desk Records
			
			LinkedList list=new LinkedList();
			String requestStatus=report.getRequestStatus();
			
			String getHelpDeskRecordscount="select COUNT(*)  from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
			+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			if(!keyword.equals(""))
				getHelpDeskRecordscount=getHelpDeskRecordscount+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getHelpDeskRecordscount=getHelpDeskRecordscount+" and it.Req_type='"+category+"'";
			if(!requestStatus.equals("")){
				if(requestStatus.equals("In Process"))
					getHelpDeskRecordscount=getHelpDeskRecordscount+" and it.Req_Status='"+requestStatus+"'";
				else
					getHelpDeskRecordscount=getHelpDeskRecordscount+" and it.ITEng_Status='"+requestStatus+"'";
			}
			if(!locationId.equals(""))
				getHelpDeskRecordscount=getHelpDeskRecordscount+" and loc.LOCID='"+locationId+"'";
		    if(!deptId.equals(""))
		    	getHelpDeskRecordscount=getHelpDeskRecordscount+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getHelpDeskRecordscount=getHelpDeskRecordscount+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
		  
		    
		      int totalRecords = 0;
			  int  startRecord=0;
			  int  endRecord=0;
		    
		    //total count
		    ResultSet rsHdcount=ad.selectQuery(getHelpDeskRecordscount);
		    try {
				while(rsHdcount.next()){
					totalRecords=rsHdcount.getInt(1);
				}
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		    
		    if(totalRecords>20)
			 {
		    	report.setTotal(totalRecords);
			 startRecord=1;
			 endRecord=20;
			 report.setStartRecord(1);
			 report.setEndRecord(20);
				request.setAttribute("disablePreviousButton", "disablePreviousButton");
			 request.setAttribute("displayRecordNo", "displayRecordNo");
			 request.setAttribute("nextButton", "nextButton");
			 }else
			 {
				  startRecord=1;
				  endRecord=totalRecords;
				  report.setTotal(totalRecords);
				  report.setStartRecord(1);
				  report.setEndRecord(totalRecords); 
			 }
		    
		    
		    String getHelpDeskRecords="select * From (SELECT ROW_NUMBER() OVER(ORDER BY  it.Req_No desc) AS  RowNum,it.Req_No,it.Req_date,it.Emp_No,emp.EMP_FULLNAME,it.Req_type,it.Req_Status,it.ITEng_Status,"
					+ "it.Pending_approver,it.Last_approver,(select emp1.EMP_FULLNAME from IT_Approvers as ita,emp_official_info as emp1 where it.Req_type=ita.Req_type and Priority='1' and ita.LOCATION_ID=loc.LOCID and emp1.PERNR=ita.Approver_ID)as technician , "
					+ " IT.approved_date ,loc.LOCATION_CODE ,"
					+"abs(case when year(IT.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT.Req_date,IT.approved_date)) end ) as day,"
					+"abs(case when year(IT.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT.Req_date,IT.approved_date))%24 end) as hr,"
					+"(case when year(IT.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT.Req_date,IT.approved_date))%(60) end)as min,"
					+ "Year(IT.approved_date) as refyear ,Escalated ,Escalated_level , Escalated_date , 'Helpdesk Request' as category "
					+ "from IT_HELPDESK it,emp_official_info emp,Location loc,DEPARTMENT dept "
					+ "where  it.Emp_No=emp.PERNR and emp.LOCID=loc.LOCATION_CODE and emp.DPTID =dept.DPTID";
			if(!keyword.equals(""))
				getHelpDeskRecords=getHelpDeskRecords+" and it.Emp_No='"+keyword+"'";
			 if(!category.equals(""))
				 getHelpDeskRecords=getHelpDeskRecords+" and it.Req_type='"+category+"'";
			if(!requestStatus.equals("")){
				if(requestStatus.equals("In Process"))
					getHelpDeskRecords=getHelpDeskRecords+" and it.Req_Status='"+requestStatus+"'";
				else
					getHelpDeskRecords=getHelpDeskRecords+" and it.ITEng_Status='"+requestStatus+"'";
			}
			if(!locationId.equals(""))
				getHelpDeskRecords=getHelpDeskRecords+" and loc.LOCID='"+locationId+"'";
		    if(!deptId.equals(""))
		    	getHelpDeskRecords=getHelpDeskRecords+" and  dept.DPTID='"+deptId+"'";
		    if(!fromDate.equals(""))
		    	getHelpDeskRecords=getHelpDeskRecords+" and  (it.Req_date between '"+fromDate+"' and '"+toDate+"')";
		
		    
		    getHelpDeskRecords=getHelpDeskRecords+" ) as  sub Where   sub.RowNum between 1 and 20 order by Req_No desc";
		    

		    
		   ResultSet rs=ad.selectQuery(getHelpDeskRecords);
		   try{
			 while(rs.next()){
				 HelpDeskReportForm h=new HelpDeskReportForm();
				 h.setRequestNo(rs.getInt("Req_No"));
				   	String ReqDate=rs.getString("Req_date");
					String a[]=ReqDate.split(" "); 
					ReqDate=a[0];
					String b[]=ReqDate.split("-");
					ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
					h.setRequestDate(ReqDate);
				 h.setEmpno(rs.getString("Emp_No"));
				 h.setRequestername(rs.getString("EMP_FULLNAME"));				 
				 h.setReqname(rs.getString("Req_type"));
				 h.setCategory(rs.getString("Req_type"));
				 h.setLastApprover(rs.getString("Last_approver"));
				 h.setPendingApprover(rs.getString("Pending_approver"));
				 h.setApprover(rs.getString("technician"));
				 h.setRequestStatus(rs.getString("Req_Status"));
				 h.setItEngStatus(rs.getString("ITEng_Status"));
				 h.setEscalatedLevel(rs.getInt("Escalated_level"));
				 h.setReftypes(rs.getString("category"));
				 
				 String ref = rs.getString("refyear");
				 String appDate="";
				 String status = rs.getString("Req_Status");
				 if(ref!=null)
				 			{
				 			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
				 			{	
				 			 appDate=rs.getString("approved_date");
				 			String c[]=appDate.split(" "); 
				 			appDate=c[0];
				 			String d[]=appDate.split("-");
				 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				 	        h.setApprovedDate(appDate);
				 			}
				 			if(status.equalsIgnoreCase("Completed"))
				 			{	
				 			 appDate=rs.getString("approved_date");
				 			String c[]=appDate.split(" "); 
				 			appDate=c[0];
				 			String d[]=appDate.split("-");
				 			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				 	        h.setCompDate(appDate);
				 			}
				 			}
				 int actaulminutes =0;
					if(ref.equalsIgnoreCase("1900"))
					{	
					
						if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
						{
							actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
						}
					
						if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
						{
							actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
						}
					
					}
					
					if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
					{
						
						if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
						{
							actaulminutes=getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,2);
						}
					
						if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
						{
							actaulminutes=	getminutes(rs.getString("Req_date"), datenw,rs.getString("LOCATION_CODE") ,1);
						}
						
					}
					
					if(status.equalsIgnoreCase("Completed"))
					{
						if(rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
						{
							actaulminutes=getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,2);
						}
					
						if(!rs.getString("Req_date").substring(0, 11).equalsIgnoreCase(rs.getString("approved_date").substring(0, 11)))
						{
							actaulminutes=	getminutes(rs.getString("Req_date"), rs.getString("approved_date"),rs.getString("LOCATION_CODE") ,1);
						}
					}
					
					long different = actaulminutes*60000L;
					 
					
					///time taken
				
				
				
										 

						long secondsInMilli = 1000;
						long minutesInMilli = secondsInMilli * 60;
						long hoursInMilli = minutesInMilli * 60;
						long daysInMilli = hoursInMilli * 24;
				 
						long elapsedDays = different / daysInMilli;
						different = different % daysInMilli;
				 
						long elapsedHours = different / hoursInMilli;
						different = different % hoursInMilli;
				 
						long elapsedMinutes = different / minutesInMilli;
						different = different % minutesInMilli;
				 
				
						h.setDay(Long.toString(elapsedDays));
						String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
						h.setHr(time);
					
				 	
					
					
					
					
					    list.add(h);
			 }
			 rs.close();
			 ad.connClose();
			 if(list.size()>0)
				 request.setAttribute("helpDeskList", list);
		   }catch(Exception e){
			   e.printStackTrace();
		   }
		
			
			}
			displayreport(mapping, form, request, response);
			
			return mapping.findForward("displayITReport");
			
		 }
	  

		
		public void saveChart(JFreeChart chart, String fileLocation) 
		{       
			String fileName = fileLocation;       
			try {       

				// Creating image size along with storing path
				
				
				ChartUtilities.saveChartAsJPEG(new File(fileName), chart, 300, 200);  
				} catch (IOException e) {  
					e.printStackTrace();   
					System.err.println("Problem occurred creating chart.");     
					}     }     
		
		public void processgraphimage(String fileLocation, String location) 
		{       
			String fileName = fileLocation; 
			HelpDeskReportAction p1 = new HelpDeskReportAction();
			
			PieDataset pieDataset = p1.createPieDataSet(location);
			/** Create 3D Pie Chart based on this dataset* */     
			JFreeChart chart = p1.create3DPieChart(pieDataset);   
			
			    
			/** Save the chart to the file system* */   
			p1.saveChart(chart, fileLocation);   
			
		}
		
		public PieDataset createPieDataSet(String totalCount) { 
			DefaultPieDataset pieDataset = new DefaultPieDataset();     

			// Data filling
			 
		
		/*	String sql_1 = "";
			String sql_2= "";
			String sql_3 = "";
			
			
			sql_1 = "select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open'  ";
			sql_2 = "select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='closed' ";
			sql_3 = "select COUNT(Req_Status)  from IT_HELPDESK  where Req_Status='In Process'  ";
			
			
			Connection geconn = ConnectionFactory.getConnection();	
			

			try {
				Statement st1 = geconn.createStatement();
				ResultSet rs1 = st1.executeQuery(sql_1);
				
				Statement st2 = geconn.createStatement();
				ResultSet rs2 = st2.executeQuery(sql_2);
				
				Statement st3 = geconn.createStatement();
				ResultSet rs3 = st3.executeQuery(sql_3);
				
				while(rs1.next()) {
					votes[0] = rs1.getInt(1);
				}
				while(rs2.next()) {
					votes[1] = rs2.getInt(1);
				}
				while(rs3.next()) {
					votes[2] = rs3.getInt(1);
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			}*/
			
			
			/*String totalCount=requestType+","+Integer.toString(newStatusCount)+","+Integer.toString(sendToIT)+","+Integer.toString(userAction)
							+","+Integer.toString(pendForSpares)+","+Integer.toString(solutionProvided)+","+Integer.toString(completedCount);*/
			
			    
			    String a[]=totalCount.split(",");
			    
			if(a[0].equals("Issues")){//Issues,0,3,0,0,0,1
				String[] categories = new String[6];
				 int[] votes= new int[6];
				
				categories[0]="New-"+a[1];
				categories[1]="Sent To IT-"+a[2];
				categories[2]="User Action-"+a[3];
				categories[3]="Pending For Spares-"+a[4];
				categories[4]="Solution Provided-"+a[5];
				
				categories[5]="Completed-"+a[6];
				
				pieDataset.setValue(categories[0], Integer.parseInt(a[1]));    
				pieDataset.setValue(categories[1], Integer.parseInt(a[2]));   
				pieDataset.setValue(categories[2], Integer.parseInt(a[3]));
				pieDataset.setValue(categories[3], Integer.parseInt(a[4]));    
				pieDataset.setValue(categories[4], Integer.parseInt(a[5]));   
				pieDataset.setValue(categories[5], Integer.parseInt(a[6]));
			}else{
				
				
				String[] categories = new String[3];
				 int[] votes= new int[3];
				categories[0]="InProcess-"+a[1];
				categories[1]="Open-"+a[2];
				categories[2]="Closed-"+a[3];
				
				pieDataset.setValue(categories[0], Integer.parseInt(a[1]));    
				pieDataset.setValue(categories[1], Integer.parseInt(a[2]));   
				pieDataset.setValue(categories[2], Integer.parseInt(a[3]));  
			}
			return pieDataset;       
			}    
		
		public JFreeChart create3DPieChart(PieDataset dataset) {      
					/**          * createPieChart3D method Parameters: --java.lang.String title,      
					 *     * --PieDataset dataset, --boolean legend, --boolean tooltips, --boolean     
					 *          * urls          */        
					JFreeChart chart = ChartFactory.createPieChart3D("", dataset, true, true, true); 
					PiePlot3D p = (PiePlot3D) chart.getPlot();  
					p.setForegroundAlpha(0.8f);     
					p.setBackgroundAlpha(0.1f);
				    p.setStartAngle(5);
				     p.setDirection(Rotation.CLOCKWISE);
				
				   
				       
					chart.setBackgroundPaint(Color.white);  
					chart.setAntiAlias(true);   
					chart.setBorderVisible(false);  
					
					return chart;    
					} 

		
		
	
	
	public ActionForward next(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String type=reqtype;
		HelpDeskReportForm myReqForm = (HelpDeskReportForm) form;
		myReqForm.setReqname(type);
		int nextval=myReqForm.getNext();
		int i=0;
		i=nextval;
		myReqForm.setStartRecord(i+1);
		myReqForm.setPrev(nextval);
		int end=nextval+10;
		int start=0;
		int row=0;
	    HttpSession session=request.getSession();
		//sform.setEndRecord(end);
		 ArrayList alldata=new ArrayList();
		try{
			 
				
				   
				    	 alldata=requestlist(mapping, myReqForm, request, response,type);
			 }
			 
		 
		 catch(Exception e){
			 e.printStackTrace();
		 }
		//HttpSession session=request.getSession();
		
		ArrayList NewList=new ArrayList();
		Iterator it=alldata.iterator();
		try{
		while(start<end){
			if(it.hasNext()&&start==nextval){
				NewList.add(it.next());
				nextval++;
				
			}
			else
			it.next();
			start++;
		}
		
		}
		catch(Exception e){
			e.printStackTrace();
		}
		System.out.println(nextval);
		myReqForm.setEndRecord(nextval);
		if(it.hasNext()){
			request.setAttribute("nextButton", "yes");
		request.setAttribute("previousButton", "ok");
		}
		else{
			request.setAttribute("disableNextButton","yes");
		request.setAttribute("previousButton", "ok");
		}
		request.setAttribute("displayRecordNo","ok");	
		
		myReqForm.setNext(nextval);
		//myReqForm.setRow(row);
		request.setAttribute("it", NewList);
		return mapping.findForward("displayrequests");
	
		
	}
	
	public ActionForward prev(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String type=reqtype;

		HelpDeskReportForm myReqForm = (HelpDeskReportForm) form;
		myReqForm.setReqname(type);
		HttpSession session=request.getSession();
		int prev=myReqForm.getPrev();
		int start=prev-10;
		//start--;
		//prev--;
		if(start<0)
			start=0;
		myReqForm.setStartRecord(start+1);
		myReqForm.setEndRecord(prev);
		int i=0;
		int row=0;
		EssDao ad=new EssDao();
		//sform.setEndRecord(end);
		ArrayList alldata=new ArrayList();
		
		try{

				    	 alldata=requestlist(mapping, myReqForm, request, response,type);
			 }
			 
		 
		 catch(Exception e){
			 e.printStackTrace();
		 }
		
		
		ArrayList NewList=new ArrayList();
		
		
		Iterator it=alldata.iterator();
		while(i<prev){
			if(it.hasNext()&&i==start){
				NewList.add(it.next());
				start++;
			}
			else
			it.next();
			i++;
		}
		if((prev-10)<=0){
		request.setAttribute("disablePreviousButton", "ok");
		request.setAttribute("nextButton", "ok");
	          }
	    
		else{
			request.setAttribute("previousButton", "ok");
		request.setAttribute("nextButton", "ok");
		}
		myReqForm.setPrev(prev-10);
		myReqForm.setNext(prev);
	
		request.setAttribute("displayRecordNo","ok");
		
	
		
		
		request.setAttribute("it", NewList);
		
		return mapping.findForward("displayrequests");
	}
	
	
	
	
	public ActionForward displayreport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HelpDeskReportForm report=(HelpDeskReportForm)form;
		String type = request.getParameter("selType");
		report.setSelType(type);		
		EssDao ad=new EssDao();
		try{
		ArrayList locationList=new ArrayList();
		ArrayList locationLabelList=new ArrayList();
		ResultSet rs11 = ad.selectQuery("select LOCID," +
				"LOCNAME,location_code from location"); 
				while(rs11.next()) {
					locationList.add(rs11.getString("LOCID"));
					locationLabelList.add(rs11.getString("location_code")+"-"+rs11.getString("LOCNAME"));
				}
				rs11.close();
				report.setLocationIdList(locationList);
				report.setLocationLabelList(locationLabelList);
				ArrayList deparmentList=new ArrayList();
				ArrayList departmentIdList=new ArrayList();
				
				ResultSet rs12 =ad.selectQuery("select DPTID,DPTSTXT from department order by DPTSTXT");
				while(rs12.next()){
					departmentIdList.add(rs12.getString("DPTID"));
					deparmentList.add(rs12.getString("DPTSTXT"));
				}
				rs12.close();
				ad.connClose();
				report.setDepartmentIdList(departmentIdList);
				report.setDepartmentList(deparmentList);
				//
				ArrayList techList=new ArrayList();
				ArrayList techLabelList=new ArrayList();
				ResultSet rs13 = ad.selectQuery("select distinct(Approver_ID),emp.EMP_FULLNAME from IT_Approvers ,emp_official_info as emp where emp.PERNR=Approver_ID and active=1 order by emp.EMP_FULLNAME"); 
						while(rs13.next()) {
							techList.add(rs13.getString("Approver_ID"));
							techLabelList.add(rs13.getString("EMP_FULLNAME"));
						}
						rs13.close();
						report.setTechidList(techList);
						report.setTechnameList(techLabelList);
				
				
			   ArrayList sapList=new ArrayList();
			   ArrayList sapLabelList=new ArrayList();
			   ResultSet rs14 = ad.selectQuery("select DISTINCT cat_req_type ,c_cat_sh_name from CAT_SUBCAT_MASTER where c_prefix ='SAP' and cat_req_type IN('SAP User Id Management','SAP Authorization Management','SAP Roles Management','Document Cancelation') "); 
				while(rs14.next())
				{
					
							sapLabelList.add(rs14.getString("cat_req_type")+"-"+rs14.getString("c_cat_sh_name"));
						
					
					sapList.add(rs14.getString("c_cat_sh_name"));
					
					
				}
				rs14.close();
				report.setSapList(sapList);
				report.setSapLabelList(sapLabelList);
		
		}catch(Exception e){
			e.printStackTrace();
		}
		
		
		/*HttpSession session=request.getSession();
		UserDao ad=new UserDao();
		
		int inprocesscount=0;
		int opencount=0;
	    int closedcount=0;
		
		String sql1="select  COUNT(a1.Req_Status) as a,(select COUNT(ITEng_Status)  from IT_HELPDESK  where ITEng_Status='open' ) as b ,"
				+ "(select COUNT(ITEng_Status)from IT_HELPDESK  where ITEng_Status='closed' )as c   from IT_HELPDESK  as a1 where a1.Req_Status='In Process'";
		ResultSet rs=ad.selectQuery(sql1);
		
		try {
			while(rs.next()) {
			
				inprocesscount=rs.getInt(1);
				opencount=rs.getInt(2);
				closedcount=rs.getInt(3);
				report.setInprocesscount(inprocesscount);
				report.setOpencount(opencount);
				report.setClosedcount(closedcount);
			}
			
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		
		String id= session.getId();
		
		System.out.println("Getting id is &&&&&&&&&&&&"+id);
		 
		String location="ML00";
		
		// GRAPH CREATION AND DISPLAY
		HelpDeskReportAction chartCreator = new HelpDeskReportAction();      
		*//** Create a PieDataSet* *//*    
		String realPath=getServlet().getServletContext().getRealPath("/images/graph");
		*//** Define a file location to save this chart *//*   
		String fileLocation = realPath+"/"+id+".jpg"; 
		chartCreator.processgraphimage(fileLocation, location);*/
		if(type!=null)
		{	
		
		if(type.equalsIgnoreCase("Detail"))
		{		
		report.setAction(0);
		}
		}
		return mapping.findForward("displayITReport");
		
	 }
	
	
	public ActionForward viewrequest(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) 
	{

		String chkdate1="";
		String chkdate="";
		HelpDeskReportForm help = (HelpDeskReportForm) form;
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		if(user==null){
			request.setAttribute("message","Session Expried! Try to Login again!");
			return mapping.findForward("displayiFrameSession");
		}
		NewsandMediaDao ad=new NewsandMediaDao();
		String forwardtype="";
		String localhostname="";
		String ipaddress="";
		String username="";
		try {
			localhostname = (InetAddress.getLocalHost()).getCanonicalHostName();
			ipaddress = (InetAddress.getLocalHost()).getHostAddress();
			username=(InetAddress.getLocalHost()).getHostName();
			
		} catch (UnknownHostException e1) {
			
			e1.printStackTrace();
		}
		
		String type=request.getParameter("type");
		help.setRequestType(type);
		String reqno=request.getParameter("requstNo");
		help.setRequestNumber(reqno);
		String status=request.getParameter("status");
		help.setItEngStatus(status);
		
		
		if(type.equalsIgnoreCase("Active Directory User Creation"))
		{
			LinkedList Adusercreation=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
	ResultSet rs1= ad.selectQuery(data1);
	try {
		while(rs1.next())
		{
			help.setAssetvalue(rs1.getString("Asset_Details"));
			help.setAdloginname(rs1.getString("ADLoginName"));
			help.setServer(rs1.getString("Server_Address"));
			help.setReqdfolderacces(rs1.getString("Req_Folder_access"));
			help.setReason(rs1.getString("Reason"));
			help.setHostname(rs1.getString("HostName"));
			help.setIPNumber(rs1.getString("IPAddress"));
			help.setReqPriority(rs1.getString("Req_Priority"));
			
			
		}
	} catch (SQLException e) {
		  e.printStackTrace();
		}
	
	//Approver Details
	int  checkStatus=0;
	LinkedList listApprers=new LinkedList();
	int jk=0;
	
	//HOD

	int hodpresent=0;
	int hodpresentinIt=0;
	String HODPresentId="";
	String HODPresentname="";
	String itengineerid="";
	String itengineername="";
	String HOD="";
	String	pendingApprovers="";
	
	 //chk if he has Hod
	 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
	 ResultSet rs10= ad.selectQuery(chkhod);
	 try {
		while(rs10.next())
		 {
			 hodpresent=rs10.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	
	//get hod details
	

	if(hodpresent>0){
	String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
			" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
	 ResultSet rs2= ad.selectQuery(gethod);
	 
	 try {
		if(rs2.next())
		 {
		
			HODPresentId=rs2.getString("ApproverId");
			HODPresentname=rs2.getString("EMP_FULLNAME");
		 }
	} catch (SQLException e) {
		
		e.printStackTrace();
	}
	}
	
	//chk if he is present in It approver
	 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
	 ResultSet rs11= ad.selectQuery(chkhodinit);
	 try {
		while(rs11.next())
		 {
			hodpresentinIt=rs11.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	 
		if(hodpresent>0 && hodpresentinIt==0 )
		{
			
			
			try {
				
					checkStatus=1;
					ApprovalsForm apprvershod=new ApprovalsForm();
					apprvershod.setPriority("1");
					
					apprvershod.setEmployeeCode(HODPresentId);
					apprvershod.setEmployeeName(HODPresentname);
					
					String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
				+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
				+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
				+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							apprvershod.setDate(rsAppInfo.getString("approved_date"));
						}else{
							apprvershod.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvershod.setComments("");
						}else{
							apprvershod.setComments(rsAppInfo.getString("Comments"));
						}
					}
					
					
					listApprers.add(apprvershod);
				 jk=1;
				}
			
			catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
		}
	
	

	
	
	
	String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
	ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
	try {
		while(rsApprDetails.next())
		{
			
			checkStatus=1;
			ApprovalsForm apprvers=new ApprovalsForm();
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			
				
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			if(jk==1){
				
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
			}
			apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
			String empCode=rsApprDetails.getString("Approver_Id");
			
			String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
					+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
					+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
					+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
					+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
			
			ResultSet rsAppInfo=ad.selectQuery(recordStatus);
			if(rsAppInfo.next())
			{
				if(rsAppInfo.getInt("Priority")==1 )
				{
					 chkdate=rsAppInfo.getString("approved_date");
					 chkdate1=rsAppInfo.getString("rejected_date");
				}
				apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
				String approveStatus=rsAppInfo.getString("Req_Status");
				if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
				{
					
				apprvers.setDate(rsAppInfo.getString("approved_date"));
				
				}else{
					apprvers.setDate(rsAppInfo.getString("rejected_date"));
				}
				String comments="";
				comments=rsAppInfo.getString("Comments");
				if(comments=="null" )
				{
					apprvers.setComments("");
				}else{
					apprvers.setComments(rsAppInfo.getString("Comments"));
				}
			}
			apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
			
			listApprers.add(apprvers);
			
		}
			//IT ENGINEER DETAIlS
			
			
			String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
			
				while(rsApprDetails1.next())
				{
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
					
					apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
					String empCode1=rsApprDetails1.getString("Approver_Id");
					
					String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
					if(rsAppInfo1.next())
					{
						
						String approveStatus=rsAppInfo1.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved"))
						{
							recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
							ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
							if(rsAppInfo2.next())
							{
								if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
								{
									apprvers.setApproveStatus("Closed");
								apprvers.setDate(rsAppInfo2.getString("approved_date"));
								
							
							
							String comments="";
							comments=rsAppInfo2.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo2.getString("Comments"));
							}
							}
							}
						}else{
							
							recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
							ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
							if(rsAppInfo3.next())
							{
								if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
								{
								apprvers.setDate(rsAppInfo3.getString("rejected_date"));
								}
							
							String comments="";
							comments=rsAppInfo3.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo3.getString("Comments"));
							}
							}
						}
						
					}
					apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
			
				listApprers.add(apprvers);
				}
			
			request.setAttribute("approverDetails", listApprers);
		
	} 
	
		catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
			
			
			forwardtype="viewAduserCreationform";
		}
		
		if(type.equalsIgnoreCase("Active Directory User Deletion"))
		{
			LinkedList AduserDeletion=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
				
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
					
					help.setEmpno(rs.getString("PERNR"));
				
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
	ResultSet rs1= ad.selectQuery(data1);
	try {
		while(rs1.next())
		{
			help.setAssetvalue(rs1.getString("Asset_Details"));
			help.setAdloginname(rs1.getString("ADLoginName"));
			help.setServer(rs1.getString("Server_Address"));
			help.setReqdfolderdeletion(rs1.getString("Req_Folder_Deletion"));
			help.setDeletefrom(rs1.getString("Delete_From"));
			help.setReason(rs1.getString("Reason"));
			help.setHostname(rs1.getString("HostName"));
			help.setIPNumber(rs1.getString("IPAddress"));
			help.setReqPriority(rs1.getString("Req_Priority"));
	
			
		}
	} catch (SQLException e) {
		  e.printStackTrace();
		}
	
	//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			if(hodpresent>0 && hodpresentinIt==0 )
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(HODPresentId);
						apprvershod.setEmployeeName(HODPresentname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
		}
	
		catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
			
			
			forwardtype="viewAduserDeletionform";
		}
		if(type.equalsIgnoreCase("Active Directory User Transfer"))
		{

			LinkedList Adusertransfer=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
	ResultSet rs1= ad.selectQuery(data1);
	try {
		while(rs1.next())
		{
			help.setAssetvalue(rs1.getString("Asset_Details"));
			help.setAdloginname(rs1.getString("ADLoginName"));
			help.setReason(rs1.getString("Reason"));
			help.setIPNumber(rs1.getString("IPAddress"));
			help.setReqPriority(rs1.getString("Req_Priority"));
			help.setFromlocationId(rs1.getString("From_Loc"));
			help.setTolocationId(rs1.getString("To_Loc"));
			help.setFromdepartment(rs1.getString("From_Dep"));
			help.setTodepartment(rs1.getString("To_Dep"));
			
		}
	} catch (SQLException e) {
		  e.printStackTrace();
		}
	
	//Approver Details
	int  checkStatus=0;
	LinkedList listApprers=new LinkedList();
	int jk=0;
	
	//HOD

	int hodpresent=0;
	int hodpresentinIt=0;
	String HODPresentId="";
	String HODPresentname="";
	String itengineerid="";
	String itengineername="";
	String HOD="";
	String	pendingApprovers="";
	
	 //chk if he has Hod
	 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
	 ResultSet rs10= ad.selectQuery(chkhod);
	 try {
		while(rs10.next())
		 {
			 hodpresent=rs10.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	
	//get hod details
	

	if(hodpresent>0){
	String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
			" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
	 ResultSet rs2= ad.selectQuery(gethod);
	 
	 try {
		if(rs2.next())
		 {
		
			HODPresentId=rs2.getString("ApproverId");
			HODPresentname=rs2.getString("EMP_FULLNAME");
		 }
	} catch (SQLException e) {
		
		e.printStackTrace();
	}
	}
	
	//chk if he is present in It approver
	 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
	 ResultSet rs11= ad.selectQuery(chkhodinit);
	 try {
		while(rs11.next())
		 {
			hodpresentinIt=rs11.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	 
		if(hodpresent>0 && hodpresentinIt==0 )
		{
			
			
			try {
				
					checkStatus=1;
					ApprovalsForm apprvershod=new ApprovalsForm();
					apprvershod.setPriority("1");
					
					apprvershod.setEmployeeCode(HODPresentId);
					apprvershod.setEmployeeName(HODPresentname);
					
					String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
				+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
				+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
				+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							apprvershod.setDate(rsAppInfo.getString("approved_date"));
						}else{
							apprvershod.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvershod.setComments("");
						}else{
							apprvershod.setComments(rsAppInfo.getString("Comments"));
						}
					}
					
					
					listApprers.add(apprvershod);
				 jk=1;
				}
			
			catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
		}
	
	

	
	
	
	String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
	ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
	try {
		while(rsApprDetails.next())
		{
			
			checkStatus=1;
			ApprovalsForm apprvers=new ApprovalsForm();
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			
				
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			if(jk==1){
				
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
			}
			apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
			String empCode=rsApprDetails.getString("Approver_Id");
			
			String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
					+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
					+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
					+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
					+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
			
			ResultSet rsAppInfo=ad.selectQuery(recordStatus);
			if(rsAppInfo.next())
			{
				if(rsAppInfo.getInt("Priority")==1 )
				{
					 chkdate=rsAppInfo.getString("approved_date");
					 chkdate1=rsAppInfo.getString("rejected_date");
				}
				apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
				String approveStatus=rsAppInfo.getString("Req_Status");
				if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
				{
					
				apprvers.setDate(rsAppInfo.getString("approved_date"));
				
				}else{
					apprvers.setDate(rsAppInfo.getString("rejected_date"));
				}
				String comments="";
				comments=rsAppInfo.getString("Comments");
				if(comments=="null" )
				{
					apprvers.setComments("");
				}else{
					apprvers.setComments(rsAppInfo.getString("Comments"));
				}
			}
			apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
			
			listApprers.add(apprvers);
			
		}
			//IT ENGINEER DETAIlS
			
			
			String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
			
				while(rsApprDetails1.next())
				{
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
					
					apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
					String empCode1=rsApprDetails1.getString("Approver_Id");
					
					String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
					if(rsAppInfo1.next())
					{
						
						String approveStatus=rsAppInfo1.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved"))
						{
							recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
							ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
							if(rsAppInfo2.next())
							{
								if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
								{
									apprvers.setApproveStatus("Closed");
								apprvers.setDate(rsAppInfo2.getString("approved_date"));
								
							
							
							String comments="";
							comments=rsAppInfo2.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo2.getString("Comments"));
							}
							}
							}
						}else{
							
							recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
							ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
							if(rsAppInfo3.next())
							{
								if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
								{
								apprvers.setDate(rsAppInfo3.getString("rejected_date"));
								}
							
							String comments="";
							comments=rsAppInfo3.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo3.getString("Comments"));
							}
							}
						}
						
					}
					apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
			
				listApprers.add(apprvers);
				}
			
			request.setAttribute("approverDetails", listApprers);
		
	} 
	
		catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
			
			
			forwardtype="viewAduserTransferform";
		
			
		}
		
		if(type.equalsIgnoreCase("Email ID Create Request"))
		{
			LinkedList LotusIDCreation=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
					help.setEmpno(rs.getString("PERNR"));
					
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
					String x=rs1.getString("comm_outside");
					if(x.equalsIgnoreCase("Yes"))
					{
						help.setOutsidecomyes("Yes");
					}
					if(x.equalsIgnoreCase("No"))
					{
						help.setOutsidecomyes("No");
					}
					
				
					help.setIsHeHod(rs1.getString("Is_He_Hod"));
					help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
					help.setEnablewebAccess(rs1.getString("Enable_Web_access"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
					
					help.setFirstname(rs1.getString("Frst_Name"));
					help.setLastname(rs1.getString("Last_Name"));
					help.setMiddname(rs1.getString("Middle_Name"));
					
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			
			request.setAttribute("LotusIDCreation", LotusIDCreation);
			forwardtype="viewLotusIDCreationform";
		}
		
		if(type.equalsIgnoreCase("Email ID Change Request"))
		{
			LinkedList LotusIDChange=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setFromemailId(rs1.getString("From_EmailID"));
					String x=rs1.getString("comm_outside");
					if(x.equalsIgnoreCase("Yes"))
					{
						help.setOutsidecomyes("Yes");
					}
					if(x.equalsIgnoreCase("No"))
					{
						help.setOutsidecomyes("No");
					}
					help.setDeleteoldmails(rs1.getString("delete_old_email"));
					help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
					help.setIsHeHod(rs1.getString("Is_He_Hod"));
					help.setTransferoldmail(rs1.getString("Transfer_Old_Emails"));
					help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
					help.setEnablewebAccess(rs1.getString("Enable_Web_access"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
					
				}
				
				
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1)); 
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			request.setAttribute("LotusIDChange", LotusIDChange);
			forwardtype="viewLotusIDChangeform";
		}
		
		if(type.equalsIgnoreCase("Email ID Delete Request"))
		{

			LinkedList LotusIDDeletion=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
				
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
			        help.setIsHeHod(rs1.getString("Is_He_Hod"));
					help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
					help.setEmailidDelete(rs1.getString("EmailID_Deleted"));
					help.setDeletefrom(rs1.getString("Delete_From"));
				    help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
					
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			
			request.setAttribute("LotusIDDeletion", LotusIDDeletion);
			forwardtype="viewLotusIDDeletionform";
		
			
		}
		
		if(type.equalsIgnoreCase("Internet Access Request"))
		{
			LinkedList internet=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
				
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAssetvalue(rs1.getString("Asset_Details"));
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
				
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
					
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			request.setAttribute("Internet", internet);
			forwardtype="viewInternetAccessform";
		}
		
		if(type.equalsIgnoreCase("External Drives Access Request"))
		{
			LinkedList externaldrives=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
				
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setAssetvalue(rs1.getString("Asset_Details"));
					help.setAccesstype(rs1.getString("Access_type"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
				
					String device=rs1.getString("Device_type");
					if(device.equalsIgnoreCase("3"))
					{
						help.setCdrom("CDROM");
						help.setUsb("USB");
					}
					if(device.equalsIgnoreCase("1"))
					{
						help.setCdrom("CDROM");
						
					}
					if(device.equalsIgnoreCase("2"))
					{
						
						help.setUsb("USB");
					}
					
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			request.setAttribute("externaldrives", externaldrives);
			forwardtype="viewexternaldrivesform";
		}
		
		if(type.equalsIgnoreCase("FTP Access Request"))
		{
			LinkedList ftp=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
				
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setAssetvalue(rs1.getString("Asset_Details"));
					help.setRequiredfoldername(rs1.getString("Req_Folder_access"));
					help.setServer(rs1.getString("Server_Address"));
					help.setAccesstype(rs1.getString("Access_type"));
					help.setFrmdurationofaccess(rs1.getString("FrmRequiredDurationofAccess"));
					help.setTodurationofaccess(rs1.getString("ToRequiredDurationofAccess"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
		
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			request.setAttribute("ftp", ftp);
			forwardtype="viewFtpAccessform";
		}
		
		if(type.equalsIgnoreCase("File Server Access Request"))
		{
			LinkedList folder=new LinkedList();
			String empno=user.getEmployeeNo();
			
			String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
					"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
					"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
			ResultSet rs= ad.selectQuery(data);
			try {
				while(rs.next())
				{
					
					help.setRequestername(rs.getString("EMP_FULLNAME"));
					help.setRequesterdepartment(rs.getString("DPTSTXT"));
					help.setRequesterdesignation(rs.getString("DSGSTXT"));
					help.setExtno(rs.getString("TEL_EXTENS"));
					help.setIpPhoneno(rs.getString("IP_PHONE"));
					help.setLocation(rs.getString("LOCATION_CODE"));
				
					help.setEmpno(rs.getString("PERNR"));
					
				}
			} catch (SQLException e) {
			  e.printStackTrace();
			}
			
			String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
			ResultSet rs1= ad.selectQuery(data1);
			try {
				while(rs1.next())
				{
					help.setAdloginname(rs1.getString("ADLoginName"));
					help.setAssetvalue(rs1.getString("Asset_Details"));
					help.setRequiredfoldername(rs1.getString("Req_Folder_access"));
					help.setServer(rs1.getString("Server_Address"));
					help.setAccesstype(rs1.getString("Access_type"));
					help.setReason(rs1.getString("Reason"));
					help.setReqPriority(rs1.getString("Req_Priority"));
					help.setHostname(rs1.getString("HostName"));
					help.setIPNumber(rs1.getString("IPAddress"));
				}
			} catch (SQLException e) {
				  e.printStackTrace();
				}
			
			
			//Approver Details
			int  checkStatus=0;
			LinkedList listApprers=new LinkedList();
			int jk=0;
			
			//HOD

			int hodpresent=0;
			int hodpresentinIt=0;
			String HODPresentId="";
			String HODPresentname="";
			String itengineerid="";
			String itengineername="";
			String HOD="";
			String	pendingApprovers="";
			
			 //chk if he has Hod
			 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
			 ResultSet rs10= ad.selectQuery(chkhod);
			 try {
				while(rs10.next())
				 {
					 hodpresent=rs10.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
			//get hod details
			

			if(hodpresent>0){
			String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
					" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
			 ResultSet rs2= ad.selectQuery(gethod);
			 
			 try {
				if(rs2.next())
				 {
				
					HODPresentId=rs2.getString("ApproverId");
					HODPresentname=rs2.getString("EMP_FULLNAME");
				 }
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			}
			
			//chk if he is present in It approver
			 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
			 ResultSet rs11= ad.selectQuery(chkhodinit);
			 try {
				while(rs11.next())
				 {
					hodpresentinIt=rs11.getInt(1);
				 }
			} catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			 
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
			
			

			
			
			
			String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
			try {
				while(rsApprDetails.next())
				{
					
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					
						
					apprvers.setPriority(rsApprDetails.getString("Priority"));
					if(jk==1){
						
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
					}
					apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
					String empCode=rsApprDetails.getString("Approver_Id");
					
					String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						if(rsAppInfo.getInt("Priority")==1 )
						{
							 chkdate=rsAppInfo.getString("approved_date");
							 chkdate1=rsAppInfo.getString("rejected_date");
						}
						apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							
						apprvers.setDate(rsAppInfo.getString("approved_date"));
						
						}else{
							apprvers.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo.getString("Comments"));
						}
					}
					apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
					
					listApprers.add(apprvers);
					
				}
					//IT ENGINEER DETAIlS
					
					
					String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
					ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
					
						while(rsApprDetails1.next())
						{
							checkStatus=1;
							ApprovalsForm apprvers=new ApprovalsForm();
							apprvers.setPriority(Integer.toString(listApprers.size()+1));
							
							apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
							String empCode1=rsApprDetails1.getString("Approver_Id");
							
							String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
									+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
									+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
									+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
									+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
							if(rsAppInfo1.next())
							{
								
								String approveStatus=rsAppInfo1.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved"))
								{
									recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
									ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
									if(rsAppInfo2.next())
									{
										if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
										{
											apprvers.setApproveStatus("Closed");
										apprvers.setDate(rsAppInfo2.getString("approved_date"));
										
									
									
									String comments="";
									comments=rsAppInfo2.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo2.getString("Comments"));
									}
									}
									}
								}else{
									
									recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
									ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
									if(rsAppInfo3.next())
									{
										if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
										{
										apprvers.setDate(rsAppInfo3.getString("rejected_date"));
										}
									
									String comments="";
									comments=rsAppInfo3.getString("Comments");
									if(comments=="null" )
									{
										apprvers.setComments("");
									}else{
										apprvers.setComments(rsAppInfo3.getString("Comments"));
									}
									}
								}
								
							}
							apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
					
						listApprers.add(apprvers);
						}
					
					request.setAttribute("approverDetails", listApprers);
				
			} 
			
				catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			request.setAttribute("folder", folder);
			forwardtype="viewFolderAccessform";
		}
		
		return mapping.findForward(forwardtype);
	  
		
	}
	
	public ActionForward displayMyRequestList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HelpDeskReportForm myReqForm = (HelpDeskReportForm) form;
		
		String type=request.getParameter("reqType");
		
		reqtype=type;
		
		ArrayList listOfMyRequest=new ArrayList();
		try{
			
		  
		    	listOfMyRequest=requestlist(mapping, myReqForm, request, response,type);

      
		
		ArrayList newList=new ArrayList();
		
		Iterator it=listOfMyRequest.iterator();
		
		int i=0;
		while(i<10){
			if(it.hasNext()){
				newList.add(it.next());
			i++;
			}
			else
				break;
		}
		myReqForm.setStartRecord(1);
		myReqForm.setEndRecord(i);
		myReqForm.setNext(i);
		myReqForm.setReqname(type);
	if(i>=10){
		
	
		if(it.hasNext()){
		request.setAttribute("displayRecordNo","ok");
		request.setAttribute("nextButton", "yes");
		request.setAttribute("disablePreviousButton", "ok");
		request.setAttribute("displayRecordNo","ok");
		}}
		else{
		request.setAttribute("disablePreviousButton", "ok");
		request.setAttribute("disableNextButton","yes");
		
		}
		  //myReqForm.setMyRequestRecords(listOfMyRequest);
		request.setAttribute("it", newList);
		//request.setAttribute("myRequestList1", listOfMyRequest);
		
		}catch (Exception e) {
			e.printStackTrace();
		}
	
		
		if(listOfMyRequest.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}
		
		return mapping.findForward("displayrequests");
	}
	
	
	public ArrayList requestlist(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,String type) 
	{
		
		HelpDeskReportForm help1 = (HelpDeskReportForm) form;
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		
		NewsandMediaDao ad=new NewsandMediaDao();
		ArrayList listOfMyRequest=new ArrayList();
		
			
			LinkedList it=new LinkedList();
			String getITRecords="";
			
			if(type.equalsIgnoreCase("In Process")){
			
            	  getITRecords="select * from IT_HELPDESK where  Emp_No='"+user.getEmployeeNo()+"' and Req_Status ='"+type+"' order by Req_No desc";
			}
			
			else
			{
          	  getITRecords="select * from IT_HELPDESK where  Emp_No='"+user.getEmployeeNo()+"' and ITEng_Status ='"+type+"' order by Req_No desc";

			}
				ResultSet rs=ad.selectQuery(getITRecords);
				
				try {
					while(rs.next()) 
					{
						MyRequestForm help=new MyRequestForm();
					
						help.setItReqNo(rs.getInt("Req_No"));
						help.setItReqDate((EMicroUtils.display(rs.getDate("Req_date"))));
						help.setLastApprover(rs.getString("Last_approver"));
						help.setPendingApprover(rs.getString("Pending_approver"));
						help.setReqStatus(rs.getString("Req_Status"));
						help.setRequestType(rs.getString("Req_type"));
						help.setReqPriority(rs.getString("Req_Priority"));
						help.setItEngStatus(rs.getString("ITEng_Status"));
						
						listOfMyRequest.add(help);	
							
					
					}
					
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				
			
		
		
		 return listOfMyRequest;
	}
	
	public ActionForward getSummary(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{
		
		HelpDeskReportForm help = (HelpDeskReportForm) form;
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		
		NewsandMediaDao ad=new NewsandMediaDao();
		LinkedList listOfMyRequest=new LinkedList();
		String requesttype=request.getParameter("linkName");
		String loc = request.getParameter("dept");
		help.setRequesterdepartment(loc);
		String getITRecords="";
		
		
		
		String fromDate = request.getParameter("fromDate");
		String toDate = request.getParameter("toDate");
		
		if(!fromDate.equals("") && fromDate.contains("/"))
		   {
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   help.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
		   }
		
		 if(!toDate.equals("") && toDate.contains("/"))
		   {  
		   String b[]=toDate.split("/");
		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   help.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
		   
		   }
		 
		
			
		
		
	if(!loc.equalsIgnoreCase("All"))
	{	
		if(requesttype.equalsIgnoreCase("Techinician")){
		
			getITRecords= " select assign , emp_official_info.EMP_FULLNAME ,"
					 +"  SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total,sum(fwd) as fwd,sum(sla)  as sla" 
					 +"  from ("
					 +" select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) AS assign ,"  
					 +" COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla" 
					 +" from IT_ISSUES ,emp_official_info"  
					 +" where  Req_Status <>'Completed'and emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') group by" 
					 +" (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"
					 +" union all"
					 +" select IT_HELPDESK.AssignTo ,COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla"  
					 +" from IT_HELPDESK , emp_official_info"
					 +" where"
					 + " emp_official_info.Pernr = AssignTo and"
					 + " emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"') and " 
					 +" Req_Status in ('In Process','Approved') and Location  = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by AssignTo"
					        
					 +" union all"
					 +" select AssignTo ,  COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla"
					  +" from IT_SAP_ISSUES , emp_official_info"
					 +" where"
					 + " emp_official_info.Pernr = AssignTo and"
					 + " emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"') and " 
					 +" Req_Status  not in ('Completed','Rejected') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"')"
					 +" group by AssignTo"
					 +" union All"
					 +" select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) AS assign ,"  
					 +" 0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla " 
					 +" from IT_ISSUES ,emp_official_info"  
					 +" where  Req_Status ='Completed'and emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') group by" 
					 +" (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
					 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"
					 +" union all"
					 +" select IT_HELPDESK.AssignTo , 0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla"
					+" from IT_HELPDESK , emp_official_info"
					+" where emp_official_info.Pernr = AssignTo and "
					+ " emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"') and "
					+" Req_Status ='Completed' and Location  = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					+" group by AssignTo"
				     
					 +" union all"
					 +" select AssignTo ,  0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla"
					 +" from IT_SAP_ISSUES , emp_official_info"
					 +" where emp_official_info.Pernr = AssignTo and "
					 + " emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"') and "
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"')"
					 +" group by AssignTo"
					 +" 	union all   select Technician_Id,pending,Closed,count(fwd) as fwd,sla from ( select  Technician_Id ,  0 as pending , 0 as Closed,"
					 + "count(*) fwd,0  as sla from IT_All_ISSUES , emp_official_info,IT_ISSUES where   IT_ISSUES.Req_No=IT_All_ISSUES.Req_Id and"
					 + " emp_official_info.Pernr = Technician_Id and    emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"') and "
					 + "   IT_All_ISSUES.Req_Status ='Forwarded'  and (IT_ISSUES.req_date between '"+fromDate+"' and '"+toDate+"') "
					 + "and IT_ISSUES.Location='"+loc+"' group by Req_Id,Technician_Id)t group by Technician_Id,pending,Closed,sla "
					 + "union all	 "
					 + "select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) AS assign ,"
					 + " 0 as pending , 0 as Closed,0  as fwd,count(*) as sla from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 "
					 + "THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) and"
					 + "  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and "
					 + "(req_date between '"+fromDate+"' and '"+toDate+"') and Escalated_Level>0 group by (CASE WHEN charindex(',', AssignTo)> 0"
					 + " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"
					 + ")t , emp_official_info"
					 +" where t.assign = emp_official_info.PERNR"
					 +" group by assign , emp_official_info.EMP_FULLNAME"; 
			
			ResultSet rs=ad.selectQuery(getITRecords);
			
			try {
				while(rs.next()) 
				{
					HelpDeskReportForm help1=new HelpDeskReportForm();
				
					help1.setEmpno(rs.getString("assign"));
					
					help1.setEmpName(rs.getString("EMP_FULLNAME"));
					help1.setPending(rs.getInt("Pending"));
					help1.setClosed(rs.getInt("closed"));
					help1.setTotal(rs.getInt("total"));
					help1.setNext(rs.getInt("fwd"));
					help1.setPrev(rs.getInt("sla"));
					listOfMyRequest.add(help1);	
						
				
				}
				
				request.setAttribute("Techinician",listOfMyRequest);	
		        		
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(listOfMyRequest.size()==0)
			{
				request.setAttribute("noit", "noit");	
			}	

		}
		
		
		if(requesttype.equalsIgnoreCase("Category")){
			
			getITRecords= " select assign , "
					 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
					 +" from ("
					 +" select IT_ISSUES.Req_type as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
					 +" where  Req_Status <> 'Completed' and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"')"
					 +" group by IT_ISSUES.Req_type"
					 +" union all"
					 +" select IT_HELPDESK.Req_Type ,COUNT(*) as pending , 0 as Closed"
					 +" from IT_HELPDESK"
					 +" where" 
					 +" Req_Status in ('In Process','Approved') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_type"
					 +" union all"
					 +" select Req_type ,  COUNT(*) as pending , 0 as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status  not in ('Completed','Rejected') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_type"
					 +" union All"
					 +" select IT_ISSUES.Req_type, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
					 +" where  Req_Status ='Completed'and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by IT_ISSUES.Req_type"
					 +" union all"
					 +" select IT_HELPDESK.Req_Type , 0 as pending , COUNT(*) as Closed" 
					 +" from IT_HELPDESK"
					 +" where" 
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_type"       
					 +" union all"
					 +" select Req_type ,  0 as pending , COUNT(*) as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_type"
					 +" )t group by assign "; 
			
			ResultSet rs=ad.selectQuery(getITRecords);
			
			try {
				while(rs.next()) 
				{
				
				
					HelpDeskReportForm help1=new HelpDeskReportForm();
					
					help1.setEmpno(rs.getString("assign"));
					help1.setPending(rs.getInt("Pending"));
					help1.setClosed(rs.getInt("closed"));
					help1.setTotal(rs.getInt("total"));
			
					listOfMyRequest.add(help1);		
				
				}
				
				request.setAttribute("Category",listOfMyRequest);	
		        		
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(listOfMyRequest.size()==0)
			{
				request.setAttribute("noit", "noit");	
			}	

		}
		
		
		if(requesttype.equalsIgnoreCase("Priority")){
			
			getITRecords= " select assign , "
					 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
					 +" from ("
					 +" select IT_ISSUES.Req_Priority as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
					 +" where  Req_Status <>'Completed' and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by IT_ISSUES.Req_Priority"
					 +" union all"
					 +" select IT_HELPDESK.Req_Priority ,COUNT(*) as pending , 0 as Closed"
					 +" from IT_HELPDESK"
					 +" where" 
					 +" Req_Status in ('In Process','Approved') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_Priority"	 
					 +" union all"
					 +" select Req_Priority ,  COUNT(*) as pending , 0 as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status  not in ('Completed','Rejected') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_Priority"
					 +" union All"
					 +" select IT_ISSUES.Req_Priority, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
					 +" where  Req_Status ='Completed'and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by IT_ISSUES.Req_Priority"
					 +" union all"
					 +" select IT_HELPDESK.Req_Priority , 0 as pending , COUNT(*) as Closed"
					 +" from IT_HELPDESK"
					 +" where" 
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_Priority"
					 +" union all"
					 +" select Req_Priority ,  0 as pending , COUNT(*) as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by Req_Priority"
					 +" )t group by assign "; 
			
			ResultSet rs=ad.selectQuery(getITRecords);
			
			try {
				while(rs.next()) 
				{
				
				
					HelpDeskReportForm help1=new HelpDeskReportForm();
					
					help1.setEmpno(rs.getString("assign"));
					help1.setPending(rs.getInt("Pending"));
					help1.setClosed(rs.getInt("closed"));
					help1.setTotal(rs.getInt("total"));
				
					listOfMyRequest.add(help1);		
				
				}
				
				request.setAttribute("Priority",listOfMyRequest);	
		        		
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(listOfMyRequest.size()==0)
			{
				request.setAttribute("noit", "noit");	
			}	

		}
if(requesttype.equalsIgnoreCase("Mode")){
			
			getITRecords= "select assign , "
					 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
					 +" from ("
					 +" select IT_ISSUES.mode as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
					 +" where  Req_Status <>'Completed' and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by IT_ISSUES.mode"       
					 +" union all"
					 +" select mode ,  COUNT(*) as pending , 0 as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status  not in ('Completed','Rejected') and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by mode"
					 +" union All"
					 +" select IT_ISSUES.mode, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
					 +" where  Req_Status ='Completed'and" 
					 +" Location = '"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" group by IT_ISSUES.mode"
					 +" union all"
					 +" select mode ,  0 as pending , COUNT(*) as Closed"
					  +" from IT_SAP_ISSUES"
					 +" where" 
					 +" Req_Status ='Completed' and Location  ='"+loc+"' and (req_date between '"+fromDate+"' and '"+toDate+"')"
					 +" group by mode"
					 +")t group by assign "; 
			
			ResultSet rs=ad.selectQuery(getITRecords);
			
			try {
				while(rs.next()) 
				{
				
				
					HelpDeskReportForm help1=new HelpDeskReportForm();
					
					help1.setEmpno(rs.getString("assign"));
					help1.setPending(rs.getInt("Pending"));
					help1.setClosed(rs.getInt("closed"));
					help1.setTotal(rs.getInt("total"));
					
					listOfMyRequest.add(help1);		
				
				}
				
				request.setAttribute("Mode",listOfMyRequest);	
		        		
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(listOfMyRequest.size()==0)
			{
				request.setAttribute("noit", "noit");	
			}	

		}	
	}
	
if(loc.equalsIgnoreCase("All"))
	{if(requesttype.equalsIgnoreCase("Techinician")){
		
		getITRecords= " select assign , emp_official_info.EMP_FULLNAME ,"
				 +"  SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total,sum(fwd) as fwd,sum(sla) as sla" 
				 +"  from ("
				 +" select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) AS assign ,"  
				 +" COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla" 
				 +" from IT_ISSUES ,emp_official_info"  
				 +" where  Req_Status <>'Completed'and emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +"  group by" 
				 +" (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"
				 +" union all"
				 +" select IT_HELPDESK.AssignTo ,COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla" 
				 +" from IT_HELPDESK , emp_official_info"
				 +" where"
				 + " emp_official_info.Pernr = AssignTo and"
				 +" Req_Status in ('In Process','Approved') and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by AssignTo"				        
				 +" union all"
				 +" select AssignTo ,  COUNT(*) as pending , 0 as Closed,0  as fwd,0 as sla"
				  +" from IT_SAP_ISSUES , emp_official_info"
				 +" where"
				 + " emp_official_info.Pernr = AssignTo and"
				 +" Req_Status  not in ('Completed','Rejected') and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by AssignTo"
				 +" union All"
				 +" select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) AS assign ,"  
				 +" 0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla" 
				 +" from IT_ISSUES ,emp_official_info"  
				 +" where  Req_Status ='Completed'and emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +"  group by" 
				 +" (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo)," 
				 +" charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"
				 +" union all"
				 +" select IT_HELPDESK.AssignTo , 0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla" 
				 +" from IT_HELPDESK , emp_official_info"
				 +" where emp_official_info.Pernr = AssignTo and "
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"') "
				 +" group by AssignTo"       
				 +" union all"
				 +" select AssignTo ,  0 as pending , COUNT(*) as Closed,0  as fwd,0 as sla"
				 +" from IT_SAP_ISSUES , emp_official_info"
				 +" where emp_official_info.Pernr = AssignTo and "
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"') "
				 +" group by AssignTo"
				 +" 	union all   select Technician_Id,pending,Closed,count(fwd) as fwd,sla from ( select  Technician_Id ,  0 as pending , 0 as Closed,"
				 + "count(*) fwd,0  as sla from IT_All_ISSUES , emp_official_info,IT_ISSUES where   IT_ISSUES.Req_No=IT_All_ISSUES.Req_Id and"
				 + " emp_official_info.Pernr = Technician_Id  and IT_All_ISSUES.Req_Status ='Forwarded'  and (IT_ISSUES.req_date between '"+fromDate+"' and '"+toDate+"') "
				 + " group by Req_Id,Technician_Id)t group by Technician_Id,pending,Closed,sla "
				 + "union all	 "
				 + "select (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) AS assign ,"
				 + " 0 as pending , 0 as Closed,0  as fwd,count(*) as sla from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 "
				 + "THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END) and"			
				 + "(req_date between '"+fromDate+"' and '"+toDate+"') and Escalated_Level>0 group by (CASE WHEN charindex(',', AssignTo)> 0"
				 + " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1)) ELSE AssignTo END)"				
				 +" )t , emp_official_info"
				 +" where t.assign = emp_official_info.PERNR"
				 +" group by assign , emp_official_info.EMP_FULLNAME"; 
		
		ResultSet rs=ad.selectQuery(getITRecords);
		
		try {
			while(rs.next()) 
			{
				HelpDeskReportForm help1=new HelpDeskReportForm();
			
				help1.setEmpno(rs.getString("assign"));
				
				help1.setEmpName(rs.getString("EMP_FULLNAME"));
				help1.setPending(rs.getInt("Pending"));
				help1.setClosed(rs.getInt("closed"));
				help1.setTotal(rs.getInt("total"));
				help1.setNext(rs.getInt("fwd"));
				help1.setPrev(rs.getInt("sla"));
				
				listOfMyRequest.add(help1);	
					
			
			}
			
			request.setAttribute("Techinician",listOfMyRequest);	
	        		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(listOfMyRequest.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}	
	
	}
	
	
	if(requesttype.equalsIgnoreCase("Category")){
		
		getITRecords= " select assign , "
				 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
				 +" from ("
				 +" select IT_ISSUES.Req_type as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
				 +" where  Req_Status <> 'Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +" group by IT_ISSUES.Req_type "
				 +" union all"
				 +" select IT_HELPDESK.Req_Type ,COUNT(*) as pending , 0 as Closed" 
				 +" from IT_HELPDESK"
				 +" where" 
				 +" Req_Status in ('In Process','Approved') and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by Req_type"
				 +" union all"
				 +" select Req_type ,  COUNT(*) as pending , 0 as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status  not in ('Completed','Rejected') and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by Req_type"
				 +" union All"
				 +" select IT_ISSUES.Req_type, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
				 +" where  Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +" group by IT_ISSUES.Req_type"
				 +" union all"
				 +" select IT_HELPDESK.Req_Type , 0 as pending , COUNT(*) as Closed" 
				 +" from IT_HELPDESK"
				 +" where" 
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by Req_type"
				 +" union all"
				 +" select Req_type ,  0 as pending , COUNT(*) as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by Req_type"
				 +" )t group by assign "; 
		
		ResultSet rs=ad.selectQuery(getITRecords);
		
		try {
			while(rs.next()) 
			{
			
			
				HelpDeskReportForm help1=new HelpDeskReportForm();
				
				help1.setEmpno(rs.getString("assign"));
				help1.setPending(rs.getInt("Pending"));
				help1.setClosed(rs.getInt("closed"));
				help1.setTotal(rs.getInt("total"));
			
				listOfMyRequest.add(help1);		
			
			}
			
			request.setAttribute("Category",listOfMyRequest);	
	        		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(listOfMyRequest.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}	
	
	}
	
	
	if(requesttype.equalsIgnoreCase("Priority")){
		
		getITRecords= " select assign , "
				 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
				 +" from ("
				 +" select IT_ISSUES.Req_Priority as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
				 +" where  Req_Status <>'Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +" group by IT_ISSUES.Req_Priority"
				 +" union all"
				 +" select IT_HELPDESK.Req_Priority ,COUNT(*) as pending , 0 as Closed" 
				 +" from IT_HELPDESK"
				 +" where" 
				 +" Req_Status in ('In Process','Approved') and (req_date between '"+fromDate+"' and '"+toDate+"') "
				 +" group by Req_Priority"
				 +" union all"
				 +" select Req_Priority ,  COUNT(*) as pending , 0 as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status  not in ('Completed','Rejected') and (req_date between '"+fromDate+"' and '"+toDate+"') "
				 +" group by Req_Priority"
				 +" union All"
				 +" select IT_ISSUES.Req_Priority, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
				 +" where  Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +" group by IT_ISSUES.Req_Priority"
				 +" union all"
				 +" select IT_HELPDESK.Req_Priority , 0 as pending , COUNT(*) as Closed" 
				 +" from IT_HELPDESK"
				 +" where" 
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"') "
				 +" group by Req_Priority"       
				 +" union all"
				 +" select Req_Priority ,  0 as pending , COUNT(*) as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by Req_Priority"
				 +" )t group by assign "; 
		
		ResultSet rs=ad.selectQuery(getITRecords);
		
		try {
			while(rs.next()) 
			{
			
			
				HelpDeskReportForm help1=new HelpDeskReportForm();
				help1.setEmpno(rs.getString("assign"));
				help1.setPending(rs.getInt("Pending"));
				help1.setClosed(rs.getInt("closed"));
				help1.setTotal(rs.getInt("total"));
				
				listOfMyRequest.add(help1);		
			
			}
			
			request.setAttribute("Priority",listOfMyRequest);	
	        		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(listOfMyRequest.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}	
	
	}
	if(requesttype.equalsIgnoreCase("Mode")){
		
		getITRecords= "select assign , "
				 +" SUM(pending) pending , SUM(closed) as Closed , SUM(pending)+SUM(closed) as total" 
				 +" from ("
				 +" select IT_ISSUES.mode as assign , COUNT(*) as pending , 0 as Closed from IT_ISSUES"
				 +" where  Req_Status <>'Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by IT_ISSUES.mode"       
				 +" union all"
				 +" select mode ,  COUNT(*) as pending , 0 as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status  not in ('Completed','Rejected')  and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by mode"
				 +" union All"
				 +" select IT_ISSUES.mode, 0 as pending , COUNT(*) as Closed from IT_ISSUES"
				 +" where  Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')" 
				 +" group by IT_ISSUES.mode"
				 +" union all"
				 +" select mode ,  0 as pending , COUNT(*) as Closed"
				  +" from IT_SAP_ISSUES"
				 +" where" 
				 +" Req_Status ='Completed' and (req_date between '"+fromDate+"' and '"+toDate+"')"
				 +" group by mode"
				 +")t group by assign "; 
		
		ResultSet rs=ad.selectQuery(getITRecords);
		
		try {
			while(rs.next()) 
			{
			
			
				HelpDeskReportForm help1=new HelpDeskReportForm();
				
				help1.setEmpno(rs.getString("assign"));
				help1.setPending(rs.getInt("Pending"));
				help1.setClosed(rs.getInt("closed"));
				help1.setTotal(rs.getInt("total"));
			
				listOfMyRequest.add(help1);		
			
			}
			
			request.setAttribute("Mode",listOfMyRequest);	
	        		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(listOfMyRequest.size()==0)
		{
			request.setAttribute("noit", "noit");	
		}	
	
	}	
}
	help.setAction(0);
	
	request.setAttribute("dashboardissue", "");
	
		return mapping.findForward("summaryAjax");
	}	
	
	public ActionForward firstRecordSummary(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException
			{

		
		HelpDeskReportForm help = (HelpDeskReportForm) form;
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		
		
		
		
		NewsandMediaDao ad=new NewsandMediaDao();
		LinkedList listofIssues=new LinkedList();
		String loc = help.getLocation();
		String techname = help.getTechname();
		String status = help.getStatus();
		String requesttype = help.getRequestBy();
		String getITRecords ="";
		
		Date k = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
		String datenw = sdf.format(k);
		
		ArrayList locationList=new ArrayList();
		ArrayList locationLabelList =new ArrayList();
		
		String fromDate=help.getFromDate1();
        String toDate=help.getToDate1();
        
        
        if(!fromDate.equals("") && fromDate.contains("/"))
		   {
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   help.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
			  
		   }
		
		 if(!toDate.equals("") && toDate.contains("/"))
		   {  
		   String b[]=toDate.split("/");
		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   help.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
		   }
		
		
		//System.out.println(help.getRequesterdepartment());
		//System.out.println(loc);
		
		ResultSet rs11 = ad.selectQuery("select LOCID," +
				"LOCNAME,location_code from location"); 
				while(rs11.next()) {
					locationList.add(rs11.getString("LOCID"));
					locationLabelList.add(rs11.getString("location_code")+"-"+rs11.getString("LOCNAME"));
				}
				help.setLocationIdList(locationList);
				help.setLocationLabelList(locationLabelList);
				
	int totalRecords = 0;
	int  startRecord=0;
	int  endRecord=0;			
	
				
	if(!loc.equalsIgnoreCase("All"))
	{
	
		if(requesttype.equalsIgnoreCase("Techinician")){
		
			
			if(status.equalsIgnoreCase("pending"))
			{	
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status, "
					+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
				     +" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status ,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				     + " from IT_HELPDESK ,emp_official_info"
				     +" where emp_official_info.Pernr = AssignTo and" 
					 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
					 + " and Req_Status in ('In Process','Approved')" 
					 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
					 + " union all"
					 + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			

		}
			
			if(status.equalsIgnoreCase("total"))
			{
				
				getITRecords= " select IT_ISSUES.Req_No,"
						+" IT_ISSUES.Req_date,"
						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
						+" emp_official_info.EMP_FULLNAME as tech,"
						
						+" IT_ISSUES.Req_type,"
						+" IT_ISSUES.Sub_Category,"
						+" IT_ISSUES.Subject,"
						+" IT_ISSUES.Req_Priority,"
						+" IT_ISSUES.Req_Status, "
						+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
						+" from IT_ISSUES ,emp_official_info" 
						 +" where  "
						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
						 +" union all" 
						 +" select" 
						  +" IT_HELPDESK.Req_No,"
						  +" IT_HELPDESK.Req_date,"
						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
						  +" emp_official_info.EMP_FULLNAME,"
						  +" IT_HELPDESK.Req_type,"
						  +" IT_HELPDESK.Category,"
						  +" '',"
						  +" IT_HELPDESK.Req_Priority,"
						  +" IT_HELPDESK.Req_Status ,"
						  + " IT_HELPDESK.approved_date ,"
						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
							+"(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
					      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
							 +" from IT_HELPDESK , emp_official_info" 
							 +" where emp_official_info.Pernr = AssignTo and" 
							 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
							 +" and  (Req_Status <>'Rejected' )" 
							 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
						  + " union all"
						  + " select IT_SAP_ISSUES.Req_No,"					
						 +" IT_SAP_ISSUES.Req_date,"
						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
						 +" emp_official_info.EMP_FULLNAME,"
						 +" IT_SAP_ISSUES.Req_type,"
						 +" IT_SAP_ISSUES.Sub_Category,"
						 +" IT_SAP_ISSUES.Subject,"
						 +" IT_SAP_ISSUES.Req_Priority,"
						 +" IT_SAP_ISSUES.Req_Status,"
						 + " IT_SAP_ISSUES.approved_date ,"
						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
						 +" from IT_SAP_ISSUES , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
						 
					

				
			}
			if(status.equalsIgnoreCase("forward"))
			{
				getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
						+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
						+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
						+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
						+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
						+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
						+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
						+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
						+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
						+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
								+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
					
			}
			
			
			if(status.equalsIgnoreCase("sla"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
			+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
			+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
			+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
			+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
			+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
			+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
			+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
			+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
			+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
			+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
					+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
			+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
					
			}
		}		
		
		
		if(requesttype.equalsIgnoreCase("Category")){
			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
			         +" from IT_HELPDESK , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  
					  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  (Req_Status  in('In Process','Approved')   )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
						 +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					  
				  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  (Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
					 
				
		
	  }
		

		}
		
		
		if(requesttype.equalsIgnoreCase("Priority")){

			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +" and Req_Status  not in ('Completed','Rejected')"
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +"  (Req_Status  in('In Process','Approved')   )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
						 +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +"  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +"  (Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
					 
				
		
	  }
	 

		
		}
   
		if(requesttype.equalsIgnoreCase("Mode")){


			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"'" 
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  ( Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
		
	  }
			
	 	

	   
		
		}	
		
	}	
		
	if(loc.equalsIgnoreCase("All"))
	{


		
		if(requesttype.equalsIgnoreCase("Techinician")){
		
			
			if(status.equalsIgnoreCase("pending"))
			{	
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status, "
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"')"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status ,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status  in('In Process','Approved')   )" 
						 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
				       + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";

		}
			
			if(status.equalsIgnoreCase("total"))
			{
				
				getITRecords= " select IT_ISSUES.Req_No,"
						+" IT_ISSUES.Req_date,"
						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
						+" emp_official_info.EMP_FULLNAME as tech,"
						
						+" IT_ISSUES.Req_type,"
						+" IT_ISSUES.Sub_Category,"
						+" IT_ISSUES.Subject,"
						+" IT_ISSUES.Req_Priority,"
						+" IT_ISSUES.Req_Status, "
						+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
						+" from IT_ISSUES ,emp_official_info" 
						 +" where  "
						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
						 +" union all" 
						 +" select" 
						  +" IT_HELPDESK.Req_No,"
						  +" IT_HELPDESK.Req_date,"
						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
						  +" emp_official_info.EMP_FULLNAME,"
						  +" IT_HELPDESK.Req_type,"
						  +" IT_HELPDESK.Category,"
						  +" '',"
						  +" IT_HELPDESK.Req_Priority,"
						  +" IT_HELPDESK.Req_Status ,"
						  + " IT_HELPDESK.approved_date ,"
						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
							+"(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
					      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
					       +" from IT_HELPDESK , emp_official_info" 
							 +" where emp_official_info.Pernr = AssignTo "  
							 +" and  (Req_Status <>'Rejected' )" 
							 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
						  + " union all"
						  + " select IT_SAP_ISSUES.Req_No,"					
						 +" IT_SAP_ISSUES.Req_date,"
						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
						 +" emp_official_info.EMP_FULLNAME,"
						 +" IT_SAP_ISSUES.Req_type,"
						 +" IT_SAP_ISSUES.Sub_Category,"
						 +" IT_SAP_ISSUES.Subject,"
						 +" IT_SAP_ISSUES.Req_Priority,"
						 +" IT_SAP_ISSUES.Req_Status,"
						 + " IT_SAP_ISSUES.approved_date ,"
						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
						 +" from IT_SAP_ISSUES , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo "  
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
						 

				
			}
			if(status.equalsIgnoreCase("forward"))
			{
				getITRecords= "select distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
						+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
						+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
						+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
						+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
						+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
						+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
						+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
						+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
						+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
					
			}
			
			if(status.equalsIgnoreCase("sla"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
			+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
			+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
			+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
			+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
			+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
			+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
			+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
			+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
			+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
			+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
					+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
			+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
					
			}
		
		}		
		
		
		if(requesttype.equalsIgnoreCase("Category")){
			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 + " and Req_Status in ('In Process','Approved')" 
						 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "						  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  (Req_Status <>'Rejected' )" 
					 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
		
	  }
			


		}
		
		
		if(requesttype.equalsIgnoreCase("Priority")){

			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						  + "  Req_Status in ('In Process','Approved')" 
						 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
			
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
		 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +"  (Req_Status <>'Rejected' )" 
						 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +"  (Req_Status <>'Rejected' )" 
					 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
	  }
	  	

		
		}
   
		if(requesttype.equalsIgnoreCase("Mode")){


			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					  
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					  
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  ( Req_Status <>'Rejected' )" 
					 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
	  }
			
	  	

	   
		
		}	
		
	
	}
	
	/////////checking
	String finalrecords = getITRecords;
	String getIssuescount ="select count(*) from ( " +finalrecords + ") sub";
	ResultSet rsIssuescount=ad.selectQuery(getIssuescount);
	while(rsIssuescount.next()){
    	totalRecords=rsIssuescount.getInt(1);
    }
	
	if(totalRecords>20)
	 {
		help.setTotal(totalRecords);
	 startRecord=1;
	 endRecord=20;
	 help.setStartRecord(1);
	 help.setEndRecord(20);
		request.setAttribute("disablePreviousButton", "disablePreviousButton");
	 request.setAttribute("displayRecordNo", "displayRecordNo");
	 request.setAttribute("nextButton", "nextButton");
	 }else
	 {
		  startRecord=1;
		  endRecord=totalRecords;
		  help.setTotal(totalRecords);
		  help.setStartRecord(1);
		  help.setEndRecord(totalRecords); 
	 }
	
	
    String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
    		           + "Req_No,		Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,	min,refyear,	reftype ,Escalated_level "
    		           + "From"
    		           + "("+ getITRecords+ ") as  T) AS SUB "
    		           + " Where   sub.RowNum between 1 and 20 order by Req_No desc";
	
	ResultSet rsIssues=ad.selectQuery(itrecords);
	
	try {
		while(rsIssues.next()) 
		{
			
			IssuesForm form1=new IssuesForm();
	    	form1.setRequestNo(rsIssues.getInt("Req_No"));
	    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
	    	String ReqDate=rsIssues.getString("Req_date");
			String a[]=ReqDate.split(" "); 
			ReqDate=a[0];
			String b[]=ReqDate.split("-");
			ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
			form1.setReqDate(ReqDate);
			form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
			form1.setTechnicianName(rsIssues.getString("tech"));
			form1.setCategory(rsIssues.getString("Req_Type"));
			form1.setSubcategory(rsIssues.getString("Sub_Category"));
			form1.setSubject(rsIssues.getString("Subject"));
			form1.setRequestStatus(rsIssues.getString("Req_Status"));
			form1.setReqPriority(rsIssues.getString("Req_Priority"));
			form1.setReftype(rsIssues.getString("reftype"));
			form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
			String ref = rsIssues.getString("refyear");			
			String appDate="";
			status = rsIssues.getString("Req_Status");
			if(ref!=null)
						{
						if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
						{	
						 appDate=rsIssues.getString("approved_date");
						String c[]=appDate.split(" "); 
						appDate=c[0];
						String d[]=appDate.split("-");
						appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				        form1.setApprovedDate(appDate);
						}
						if(status.equalsIgnoreCase("Completed"))
						{	
						 appDate=rsIssues.getString("approved_date");
						String c[]=appDate.split(" "); 
						appDate=c[0];
						String d[]=appDate.split("-");
						appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
				        form1.setCompDate(appDate);
						}
						}
			int actaulminutes =0;
			if(ref.equalsIgnoreCase("1900"))
			{	
			
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
				}
			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
				}
			
			}
			
			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
			{
				
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
				}
			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
				}
				
			}
			
			if(status.equalsIgnoreCase("Completed"))
			{
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,3);
				}
			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,1);
				}
			}
			
			long different = actaulminutes*60000L;
			 
			
			///time taken
		
		
		
								 

				long secondsInMilli = 1000;
				long minutesInMilli = secondsInMilli * 60;
				long hoursInMilli = minutesInMilli * 60;
				long daysInMilli = hoursInMilli * 24;
		 
				long elapsedDays = different / daysInMilli;
				different = different % daysInMilli;
		 
				long elapsedHours = different / hoursInMilli;
				different = different % hoursInMilli;
		 
				long elapsedMinutes = different / minutesInMilli;
				different = different % minutesInMilli;
		 
		
				form1.setDay(Long.toString(elapsedDays));
				String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
				form1.setHr(time);
			
		 	
			
			
			
			
			listofIssues.add(form1);
				
		
		}
		
		request.setAttribute("dashboardissue",listofIssues);	
        		
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	if(listofIssues.size()==0)
	{
		request.setAttribute("noit", "noit");	
	}	
	
	displayreport(mapping, form, request, response);
		return mapping.findForward("displayITReport");
	
		
			}
	public ActionForward getSummaryDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException
	{
		
		HelpDeskReportForm help = (HelpDeskReportForm) form;
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		
		NewsandMediaDao ad=new NewsandMediaDao();
		LinkedList listofIssues=new LinkedList();
		String requesttype=request.getParameter("requestedtype");
		
		String selType=request.getParameter("selType");
		help.setAction(4); 
	
		
	    String loc =request.getParameter("loc"); 
	    help.setRequesterdepartment(loc);
	    help.setLocation(loc);
		help.setRequestBy(requesttype);
		String techname = request.getParameter("techname");
		help.setTechname(techname);
		String status = request.getParameter("status");
		help.setStatus(status);
		
		Date k = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS ");
		String datenw = sdf.format(k);
		
		String fromDate = request.getParameter("fromDate");
		String toDate = request.getParameter("toDate");
		
		if(!fromDate.equals("") && fromDate.contains("/"))
		   {
			   String a[]=fromDate.split("/");
			   fromDate=a[2]+"-"+a[1]+"-"+a[0]+" "+"00:00:00.000";
			   help.setFromDate1(a[0]+"/"+a[1]+"/"+a[2]);
			  
		   }
		
		 if(!toDate.equals("") && toDate.contains("/"))
		   {  
		   String b[]=toDate.split("/");
		   toDate=b[2]+"-"+b[1]+"-"+b[0]+" "+"23:59:00.000";
		   help.setToDate1(b[0]+"/"+b[1]+"/"+b[2]);
		   }
		 
		
		
		ArrayList locationList=new ArrayList();
		ArrayList locationLabelList =new ArrayList();
		String getITRecords="";
		
	
		
		
		//System.out.println(help.getRequesterdepartment());
		//System.out.println(loc);
		
		ResultSet rs11 = ad.selectQuery("select LOCID," +
				"LOCNAME,location_code from location"); 
				while(rs11.next()) {
					locationList.add(rs11.getString("LOCID"));
					locationLabelList.add(rs11.getString("location_code")+"-"+rs11.getString("LOCNAME"));
				}
				help.setLocationIdList(locationList);
				help.setLocationLabelList(locationLabelList);
				
	int totalRecords = 0;
	int  startRecord=0;
	int  endRecord=0;			
	
				
	if(!loc.equalsIgnoreCase("All"))
	{	
		if(requesttype.equalsIgnoreCase("Techinician")){
		
			
			if(status.equalsIgnoreCase("pending"))
			{	
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status, "
					+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
				     +" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"  
					  +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status ,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				    +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				     + " from IT_HELPDESK ,emp_official_info"
				     +" where emp_official_info.Pernr = AssignTo and" 
					 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
					 + " and Req_Status in ('In Process','Approved')" 
					 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
					 + " union all"
					 + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
					 
			

		}
			
			if(status.equalsIgnoreCase("total"))
			{
				
				getITRecords= " select IT_ISSUES.Req_No,"
						+" IT_ISSUES.Req_date,"
						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
						+" emp_official_info.EMP_FULLNAME as tech,"
						
						+" IT_ISSUES.Req_type,"
						+" IT_ISSUES.Sub_Category,"
						+" IT_ISSUES.Subject,"
						+" IT_ISSUES.Req_Priority,"
						+" IT_ISSUES.Req_Status, "
						+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
						+" from IT_ISSUES ,emp_official_info" 
						 +" where  "
						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
						 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
						 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"'"
						 +" union all" 
						 +" select" 
						  +" IT_HELPDESK.Req_No,"
						  +" IT_HELPDESK.Req_date,"
						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
						  +" emp_official_info.EMP_FULLNAME,"
						  +" IT_HELPDESK.Req_type,"
						  +" IT_HELPDESK.Category,"
						  +" '',"
						  +" IT_HELPDESK.Req_Priority,"
						  +" IT_HELPDESK.Req_Status ,"
						  + " IT_HELPDESK.approved_date ,"
						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
							+"(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
					      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
							 +" from IT_HELPDESK , emp_official_info" 
							 +" where emp_official_info.Pernr = AssignTo and" 
							 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
							 +" and  (Req_Status <>'Rejected' )" 
							 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
						  + " union all"
						  + " select IT_SAP_ISSUES.Req_No,"					
						 +" IT_SAP_ISSUES.Req_date,"
						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
						 +" emp_official_info.EMP_FULLNAME,"
						 +" IT_SAP_ISSUES.Req_type,"
						 +" IT_SAP_ISSUES.Sub_Category,"
						 +" IT_SAP_ISSUES.Subject,"
						 +" IT_SAP_ISSUES.Req_Priority,"
						 +" IT_SAP_ISSUES.Req_Status,"
						 + " IT_SAP_ISSUES.approved_date ,"
						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
						 +" from IT_SAP_ISSUES , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +" emp_official_info.LOCID = (select location_code from Location where LOCID ='"+loc+"')" 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and AssignTo ='"+techname+"'and req_date between '"+fromDate+"' and '"+toDate+"' ";
						 
					

				
			}
			
			if(status.equalsIgnoreCase("forward"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
						+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
						+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
						+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
						+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
						+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
						+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
						+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
						+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
						+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded' and "
								+ "emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"'";
					
			}
			
			
			if(status.equalsIgnoreCase("sla"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
			+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
			+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
			+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
			+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
			+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
			+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
			+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
			+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
			+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
			+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
					+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
			+ "AssignTo END) = '"+techname+"'  and emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"') and  Location = '"+loc+"' and Escalated_Level>0";
					
			}
			
			
		}		
		
		
		if(requesttype.equalsIgnoreCase("Category")){
			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and IT_ISSUES.Req_type = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
			         +" from IT_HELPDESK , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 + " and Req_Status in ('In Process','Approved')"
					 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  
					  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and IT_ISSUES.Req_type = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
						 +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					  
				  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  (Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
					 
				
		
	  }
		

		}
		
		
		if(requesttype.equalsIgnoreCase("Priority")){

			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"'" 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +" Req_Status in ('In Process','Approved')" 
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"'" 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
						 +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +"  (Req_Status <>'Rejected' )" 
						 +" and Location  ='"+loc+"' and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +"  (Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
					 
				
		
	  }
	 

		
		}
   
		if(requesttype.equalsIgnoreCase("Mode")){


			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and IT_ISSUES.mode = '"+techname+"'"
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and  emp_official_info.LOCID = (select location_code from Location where LOCID = '"+loc+"')" 
					 +" and  Location = '"+loc+"' and req_date between '"+fromDate+"' and '"+toDate+"' " 
					 +" and IT_ISSUES.mode = '"+techname+"'"
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  ( Req_Status <>'Rejected' )" 
					 +" and Location  ='"+loc+"' and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
		
	  }
			
	 	

	   
		
		}	
		
	}	
		
	if(loc.equalsIgnoreCase("All"))
	{
		
		if(requesttype.equalsIgnoreCase("Techinician")){
		
			
			if(status.equalsIgnoreCase("pending"))
			{	
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status, "
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status ,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				      +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status  in('In Process','Approved')   )" 
						 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
				       + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";

		}
			
			if(status.equalsIgnoreCase("total"))
			{
				
				getITRecords= " select IT_ISSUES.Req_No,"
						+" IT_ISSUES.Req_date,"
						+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
						+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
						+" emp_official_info.EMP_FULLNAME as tech,"
						
						+" IT_ISSUES.Req_type,"
						+" IT_ISSUES.Sub_Category,"
						+" IT_ISSUES.Subject,"
						+" IT_ISSUES.Req_Priority,"
						+" IT_ISSUES.Req_Status, "
						+ "IT_ISSUES.approved_date ,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
						+" from IT_ISSUES ,emp_official_info" 
						 +" where  "
						 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
						 +" and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) = '"+techname+"' and (req_date between '"+fromDate+"' and '"+toDate+"') "
						 +" union all" 
						 +" select" 
						  +" IT_HELPDESK.Req_No,"
						  +" IT_HELPDESK.Req_date,"
						  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
						  +" emp_official_info.EMP_FULLNAME,"
						  +" IT_HELPDESK.Req_type,"
						  +" IT_HELPDESK.Category,"
						  +" '',"
						  +" IT_HELPDESK.Req_Priority,"
						  +" IT_HELPDESK.Req_Status ,"
						  + " IT_HELPDESK.approved_date ,"
						  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
							+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
							+"(case when year(IT_HELPDESK.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
							+ "Year(IT_HELPDESK.approved_date) as refyear ,"
					        +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
					       +" from IT_HELPDESK , emp_official_info" 
							 +" where emp_official_info.Pernr = AssignTo "  
							 +" and  (Req_Status <>'Rejected' )" 
							 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"	
						  + " union all"
						  + " select IT_SAP_ISSUES.Req_No,"					
						 +" IT_SAP_ISSUES.Req_date,"
						   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
						 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
						 +" emp_official_info.EMP_FULLNAME,"
						 +" IT_SAP_ISSUES.Req_type,"
						 +" IT_SAP_ISSUES.Sub_Category,"
						 +" IT_SAP_ISSUES.Subject,"
						 +" IT_SAP_ISSUES.Req_Priority,"
						 +" IT_SAP_ISSUES.Req_Status,"
						 + " IT_SAP_ISSUES.approved_date ,"
						 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
							+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
							+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
							+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
							+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
							+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
							+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
							+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
					       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
						 +" from IT_SAP_ISSUES , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo "  
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and AssignTo ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'";
						 

				
			}
			
			
			if(status.equalsIgnoreCase("forward"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date, (select emp_official_info.LOCID from emp_official_info where "
						+ "emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, (select emp_official_info.EMP_FULLNAME from emp_official_info where"
						+ " emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type,"
						+ " IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority, IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) else "
						+ "(DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then  "
						+ "(DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
						+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
						+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,"
						+ "Escalated_level , Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info,IT_All_ISSUES where   "
						+ "emp_official_info.Pernr = IT_All_ISSUES.Technician_Id and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"' "
						+ " and IT_All_ISSUES.Technician_Id = '"+techname+"' and IT_All_ISSUES.Req_Id=IT_ISSUEs.Req_No and IT_All_ISSUES.Req_Status='Forwarded'";
					
			}
			
			if(status.equalsIgnoreCase("sla"))
			{
				getITRecords= "select  distinct IT_ISSUES.Req_No, IT_ISSUES.Req_date,"
			+ " (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE, "
			+ "(select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME, "
			+ "emp_official_info.EMP_FULLNAME as tech, IT_ISSUES.Req_type, IT_ISSUES.Sub_Category, IT_ISSUES.Subject, IT_ISSUES.Req_Priority,"
			+ " IT_ISSUES.Req_Status, IT_ISSUES.approved_date ,abs(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
			+ "else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,abs(case when year(IT_ISSUES.approved_date)=1900 then "
			+ " (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
			+ "(case when year(IT_ISSUES.approved_date)=1900 then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) else "
			+ "(DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,Year(IT_ISSUES.approved_date) as refyear ,Escalated ,Escalated_level ,"
			+ " Escalated_date,'It issues' as reftype from IT_ISSUES ,emp_official_info where   emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0"
			+ " THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END) and IT_ISSUES.req_date between  '"+fromDate+"' and '"+toDate+"'"
					+ "  and (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE "
			+ "AssignTo END) = '"+techname+"'   and Escalated_Level>0";
					
			}
		
		}		
		
		
		if(requesttype.equalsIgnoreCase("Category")){
			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)"  
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 + " and Req_Status in ('In Process','Approved')" 
						 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "						  
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					 +" and IT_ISSUES.Req_type = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status , "
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo " 
						 +" and  (Req_Status <>'Rejected' )" 
						 +" and IT_HELPDESK.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "					 
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  (Req_Status <>'Rejected' )" 
					 +" and IT_SAP_ISSUES.Req_type ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
		
	  }
			


		}
		
		
		if(requesttype.equalsIgnoreCase("Priority")){

			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						  + "  Req_Status in ('In Process','Approved')" 
						 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "	
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
			
				
		}
			
	
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
		 
					 +" and IT_ISSUES.Req_Priority = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"'"
					 +" union all" 
					 +" select" 
					  +" IT_HELPDESK.Req_No,"
					  +" IT_HELPDESK.Req_date,"
					  +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_HELPDESK.Emp_No) as EMP_FULLNAME,"
					  +" emp_official_info.EMP_FULLNAME,"
					  +" IT_HELPDESK.Req_type,"
					  +" IT_HELPDESK.Category,"
					  +" '',"
					  +" IT_HELPDESK.Req_Priority,"
					  +" IT_HELPDESK.Req_Status,"
					  + " IT_HELPDESK.approved_date ,"
					  +"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_HELPDESK.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date)) end ) as day,"
						+"abs(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_HELPDESK.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%24 end) as hr,"
						+"(case when year(IT_HELPDESK.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_HELPDESK.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_HELPDESK.Req_date,IT_HELPDESK.approved_date))%(60) end)as min,"
						+ "Year(IT_HELPDESK.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'Helpdesk Request' as reftype"
				       +" from IT_HELPDESK , emp_official_info" 
						 +" where emp_official_info.Pernr = AssignTo and" 
						 +"  (Req_Status <>'Rejected' )" 
						 +"  and IT_HELPDESK.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				     +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo and" 
					 +"  (Req_Status <>'Rejected' )" 
					 +"  and IT_SAP_ISSUES.Req_Priority ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
	  }
	  	

		
		}
   
		if(requesttype.equalsIgnoreCase("Mode")){


			if(status.equalsIgnoreCase("pending"))
			{	
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				       +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where  Req_Status <>'Completed'"
					 +" and  emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					  
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and Req_Status  not in ('Completed','Rejected')"
					 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
				
		}
			
	  if(status.equalsIgnoreCase("total"))
	  {
			
			
			getITRecords= " select IT_ISSUES.Req_No,"
					+" IT_ISSUES.Req_date,"
					+" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as LOCATION_CODE,"
					+" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_ISSUES.Emp_no) as EMP_FULLNAME,"
					+" emp_official_info.EMP_FULLNAME as tech,"
					
					+" IT_ISSUES.Req_type,"
					+" IT_ISSUES.Sub_Category,"
					+" IT_ISSUES.Subject,"
					+" IT_ISSUES.Req_Priority,"
					+" IT_ISSUES.Req_Status ,"
					+ "IT_ISSUES.approved_date ,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(DAY,IT_ISSUES.Req_date,GETDATE())) "
					+"else (DATEDIFF(DAY,IT_ISSUES.Req_date,IT_ISSUES.approved_date)) end ) as day,"
					+"abs(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(HOUR,IT_ISSUES.Req_date,GETDATE()))%24 "
					+"else (DATEDIFF(HOUR,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%24 end) as hr,"
					+"(case when year(IT_ISSUES.approved_date)=1900 "
					+"then  (DATEDIFF(Minute,IT_ISSUES.Req_date,GETDATE()))%(60) "
					+"else (DATEDIFF(Minute,IT_ISSUES.Req_date,IT_ISSUES.approved_date))%(60) end)as min,"
					+ "Year(IT_ISSUES.approved_date) as refyear ,"
				    +"Escalated ,Escalated_level , Escalated_date,'It issues' as reftype"
					+" from IT_ISSUES ,emp_official_info" 
					 +" where "
					 +" emp_official_info.Pernr = (CASE WHEN charindex(',', AssignTo)> 0 THEN reverse(left(reverse(AssignTo), charindex(',', reverse(AssignTo)) -1))ELSE AssignTo END)" 
					  
					  
					 +" and IT_ISSUES.mode = '"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' "
					  + " union all"
					  + " select IT_SAP_ISSUES.Req_No,"					
					 +" IT_SAP_ISSUES.Req_date,"
					   +" (select emp_official_info.LOCID from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as LOCATION_CODE,"
					 +" (select emp_official_info.EMP_FULLNAME from emp_official_info where emp_official_info.PERNR = IT_SAP_ISSUES.Emp_no) as EMP_FULLNAME,"
					 +" emp_official_info.EMP_FULLNAME,"
					 +" IT_SAP_ISSUES.Req_type,"
					 +" IT_SAP_ISSUES.Sub_Category,"
					 +" IT_SAP_ISSUES.Subject,"
					 +" IT_SAP_ISSUES.Req_Priority,"
					 +" IT_SAP_ISSUES.Req_Status ,"
					 + " IT_SAP_ISSUES.approved_date ,"
					 +"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,GETDATE())) "
						+"else (DATEDIFF(DAY,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date)) end ) as day,"
						+"abs(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,GETDATE()))%24 "
						+"else (DATEDIFF(HOUR,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%24 end) as hr,"
						+"(case when year(IT_SAP_ISSUES.approved_date)=1900 "
						+"then  (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,GETDATE()))%(60) "
						+"else (DATEDIFF(Minute,IT_SAP_ISSUES.Req_date,IT_SAP_ISSUES.approved_date))%(60) end)as min,"
						+ "Year(IT_SAP_ISSUES.approved_date) as refyear ,"
				    	 +"Escalated ,Escalated_level , Escalated_date,'Sap issues' as reftype"
					 +" from IT_SAP_ISSUES , emp_official_info" 
					 +" where emp_official_info.Pernr = AssignTo " 
					 +" and  ( Req_Status <>'Rejected' )" 
					 +"  and IT_SAP_ISSUES.mode ='"+techname+"' and req_date between '"+fromDate+"' and '"+toDate+"' ";
					 
			
	  }
			
	  	

	   
		
		}	
		
	
	}
	
	/////////checking
	String finalrecords = getITRecords;
	String getIssuescount ="select count(*) from ( " +finalrecords + ") sub";
	ResultSet rsIssuescount=ad.selectQuery(getIssuescount);
	while(rsIssuescount.next()){
    	totalRecords=rsIssuescount.getInt(1);
    }
	
	if(totalRecords>20)
	 {
		help.setTotal(totalRecords);
	 startRecord=1;
	 endRecord=20;
	 help.setStartRecord(1);
	 help.setEndRecord(20);
		request.setAttribute("disablePreviousButton", "disablePreviousButton");
	 request.setAttribute("displayRecordNo", "displayRecordNo");
	 request.setAttribute("nextButton", "nextButton");
	 }else
	 {
		  startRecord=1;
		  endRecord=totalRecords;
		  help.setTotal(totalRecords);
		  help.setStartRecord(1);
		  help.setEndRecord(totalRecords); 
	 }
	
	
    String itrecords = "select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY  T.Req_No desc) AS  RowNum,"
    		           + "Req_No,Req_date,	LOCATION_CODE,	tech,	EMP_FULLNAME,	Req_type,	Sub_Category,	Subject,	Req_Priority,	Req_Status,	approved_date,	day,	hr,	min ,refyear,	reftype,Escalated_level  "
    		           + "From"
    		           + "("+ getITRecords+ ") as  T) AS SUB "
    		           + " Where   sub.RowNum between 1 and 20 order by Req_No desc";
	
	ResultSet rsIssues=ad.selectQuery(itrecords);
	
	try {
		while(rsIssues.next()) 
		{
			
			IssuesForm form1=new IssuesForm();
	    	form1.setRequestNo(rsIssues.getInt("Req_No"));
	    	form1.setLocation(rsIssues.getString("LOCATION_CODE"));
	    	
	    	String ReqDate=rsIssues.getString("Req_date");
	    	String a[]=ReqDate.split(" "); 
			ReqDate=a[0];
			String b[]=ReqDate.split("-");
			ReqDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
			form1.setReqDate(ReqDate);
			form1.setEmployeename(rsIssues.getString("EMP_FULLNAME"));
			form1.setTechnicianName(rsIssues.getString("tech"));
			form1.setCategory(rsIssues.getString("Req_Type"));
			form1.setSubcategory(rsIssues.getString("Sub_Category"));
			form1.setSubject(rsIssues.getString("Subject"));
			form1.setRequestStatus(rsIssues.getString("Req_Status"));
			
			form1.setReqPriority(rsIssues.getString("Req_Priority"));
			form1.setReftypes(rsIssues.getString("reftype"));
			form1.setEscalatedLevel(rsIssues.getInt("Escalated_level"));
			
			String ref = rsIssues.getString("refyear");
			String appDate="";
			status = rsIssues.getString("Req_Status");
			if(ref!=null)
			{
			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
			{	
			 appDate=rsIssues.getString("approved_date");
			String c[]=appDate.split(" "); 
			appDate=c[0];
			String d[]=appDate.split("-");
			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
	        form1.setApprovedDate(appDate);
			}
			if(status.equalsIgnoreCase("Completed"))
			{	
			 appDate=rsIssues.getString("approved_date");
			String c[]=appDate.split(" "); 
			appDate=c[0];
			String d[]=appDate.split("-");
			appDate=d[2]+"/"+d[1]+"/"+d[0]+" "+c[1];
	        form1.setCompDate(appDate);
			}
			}
			
			System.out.println(rsIssues.getInt("Req_No"));
			
			int actaulminutes =0;
			if(ref.equalsIgnoreCase("1900"))
			{	
			
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"),datenw,rsIssues.getString("LOCATION_CODE") ,2);
				}
			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
				}
			
			}
			
			if(!ref.equalsIgnoreCase("1900") && !status.equalsIgnoreCase("Completed"))
			{
				
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,2);
				}
			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(datenw.substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), datenw,rsIssues.getString("LOCATION_CODE") ,1);
				}
				
			}
			
			if(status.equalsIgnoreCase("Completed"))
				
			{
				if(rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
				{
					actaulminutes=getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,3);
				}
              			
				if(!rsIssues.getString("Req_date").substring(0, 11).equalsIgnoreCase(rsIssues.getString("approved_date").substring(0, 11)))
				{
					actaulminutes=	getminutes(rsIssues.getString("Req_date"), rsIssues.getString("approved_date"),rsIssues.getString("LOCATION_CODE") ,1);
				}
			}
			
			long different = actaulminutes*60000L;
			
			
			double i = actaulminutes*60000;
			 
			
			///time taken
		
		
		
								 

				long secondsInMilli = 1000;
				long minutesInMilli = secondsInMilli * 60;
				long hoursInMilli = minutesInMilli * 60;
				long daysInMilli = hoursInMilli * 24;
		 
				long elapsedDays = different / daysInMilli;
				different = different % daysInMilli;
		 
				long elapsedHours = different / hoursInMilli;
				different = different % hoursInMilli;
		 
				long elapsedMinutes = different / minutesInMilli;
				different = different % minutesInMilli;
		 
		
				form1.setDay(Long.toString(elapsedDays));
				String time = Long.toString(elapsedHours)+":"+Long.toString(elapsedMinutes);
				form1.setHr(time);
			
		 	
			
			
			
			
			listofIssues.add(form1); 
				
		
		}
		
		request.setAttribute("dashboardissue",listofIssues);	
        		
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	if(listofIssues.size()==0)
	{
		request.setAttribute("noit", "noit");	
	}	
	
	displayreport(mapping, form, request, response);
    help.setSelType(selType);
		return mapping.findForward("displayITReport");
	}	
	
	public ActionForward getSummaryDetailRecord(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException 

	{
		String chkdate1="";
		String chkdate="";
		HelpDeskReportForm help = (HelpDeskReportForm) form;
	
	MyRequestForm myReqForm = new MyRequestForm(); 
	HttpSession session=request.getSession();
	UserInfo user=(UserInfo)session.getAttribute("user");
	if(user==null){
		request.setAttribute("message","Session Expried! Try to Login again!");
		return mapping.findForward("displayiFrameSession");
	}
	NewsandMediaDao ad=new NewsandMediaDao();
	String forwardtype="";
	String localhostname="";
	String ipaddress="";
	String username="";
try {
localhostname = (InetAddress.getLocalHost()).getCanonicalHostName();
ipaddress = (InetAddress.getLocalHost()).getHostAddress();
username=(InetAddress.getLocalHost()).getHostName();

} catch (UnknownHostException e1) {

e1.printStackTrace();
}
String cate="";
String filePath2="";
String type=request.getParameter("type");
help.setRequestType(type);
String reqno=request.getParameter("requstNo");
help.setRequestNumber(reqno);

String issreqtype =request.getParameter("issrequestype");

help.setIssrequestype(issreqtype );
//System.out.println(help.getIssrequestype());
if(issreqtype.equalsIgnoreCase("Helpdesk Request"))
{	
		
	if(type.equalsIgnoreCase("New IT Asset Request"))
	{

		LinkedList Adusercreation=new LinkedList();
		String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
ResultSet rs1= ad.selectQuery(data1);
try {
	while(rs1.next())
	{
		help.setAssetvalue(rs1.getString("Asset_Details"));
		help.setAdloginname(rs1.getString("ADLoginName"));
		help.setServer(rs1.getString("Server_Address"));
		help.setReqdfolderacces(rs1.getString("Req_Folder_access"));
		help.setReason(rs1.getString("Reason"));
		help.setHostname(rs1.getString("HostName"));
		help.setIPNumber(rs1.getString("IPAddress"));
		help.setReqPriority(rs1.getString("Req_Priority"));
		help.setAssetcategory(rs1.getString("Category"));
		help.setReqbydate(rs1.getString("reqbydate"));
		help.setSuggestmodelname(rs1.getString("suggmodel"));
		
		help.setGxpyes(rs1.getString("gxp"));
		
		help.setTypeofprinter(rs1.getString("typeofprinter"));
		help.setUsers(rs1.getString("noofusers"));
		help.setPrintvolpermonth(rs1.getString("printvolpm"));
		help.setSuggestmodelno(rs1.getString("suggmodelno"));
		help.setApprxvalue(rs1.getString("Apprxvalue"));

		help.setLanyes(rs1.getString("lan"));
		help.setAnysplreq(rs1.getString("anysplreq"));
		help.setPurpose(rs1.getString("purpose"));


	}
} catch (SQLException e) {
	  e.printStackTrace();
	}

//Approver Details
int  checkStatus=0;
LinkedList listApprers=new LinkedList();
int jk=0;

//HOD

int hodpresent=0;
int hodpresentinIt=0;
String HODPresentId="";
String HODPresentname="";
String itengineerid="";
String itengineername="";
String HOD="";
String	pendingApprovers="";

 //chk if he has Hod
 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
 ResultSet rs10= ad.selectQuery(chkhod);
 try {
	while(rs10.next())
	 {
		 hodpresent=rs10.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}

//get hod details


if(hodpresent>0){
String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
		" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
 ResultSet rs2= ad.selectQuery(gethod);
 
 try {
	if(rs2.next())
	 {
	
		HODPresentId=rs2.getString("ApproverId");
		HODPresentname=rs2.getString("EMP_FULLNAME");
	 }
} catch (SQLException e) {
	
	e.printStackTrace();
}
}

//chk if he is present in It approver
 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
 ResultSet rs11= ad.selectQuery(chkhodinit);
 try {
	while(rs11.next())
	 {
		hodpresentinIt=rs11.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}
 
 

 
 
		
	if(hodpresent>0 && hodpresentinIt==0 )
	{
		
		
		try {
			
				checkStatus=1;
				ApprovalsForm apprvershod=new ApprovalsForm();
				apprvershod.setPriority("1");
				
				apprvershod.setEmployeeCode(HODPresentId);
				apprvershod.setEmployeeName(HODPresentname);
				
				String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
			+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
			+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
			+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						apprvershod.setDate(rsAppInfo.getString("approved_date"));
					}else{
						apprvershod.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvershod.setComments("");
					}else{
						apprvershod.setComments(rsAppInfo.getString("Comments"));
					}
				}
				
				
				listApprers.add(apprvershod);
			 jk=1;
			}
		
		catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
	}

		



String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
try {
	while(rsApprDetails.next())
	{
		
		checkStatus=1;
		ApprovalsForm apprvers=new ApprovalsForm();
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		
			
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		if(jk==1){
			
			apprvers.setPriority(Integer.toString(listApprers.size()+1));
		}
		apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
		String empCode=rsApprDetails.getString("Approver_Id");
		
		String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
				+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
				+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
				+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
				+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
		
		ResultSet rsAppInfo=ad.selectQuery(recordStatus);
		if(rsAppInfo.next())
		{
			if(rsAppInfo.getInt("Priority")==1 )
			{
				 chkdate=rsAppInfo.getString("approved_date");
				 chkdate1=rsAppInfo.getString("rejected_date");
			}
			apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
			String approveStatus=rsAppInfo.getString("Req_Status");
			if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
			{
				
			apprvers.setDate(rsAppInfo.getString("approved_date"));
			
			}else{
				apprvers.setDate(rsAppInfo.getString("rejected_date"));
			}
			String comments="";
			comments=rsAppInfo.getString("Comments");
			if(comments=="null" )
			{
				apprvers.setComments("");
			}else{
				apprvers.setComments(rsAppInfo.getString("Comments"));
			}
		}
		apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
		
		listApprers.add(apprvers);
		
	}
		//IT ENGINEER DETAIlS
		
		
		String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME "
		+ "from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    "
		+ "group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
		
			while(rsApprDetails1.next())
			{
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
				
				apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
				String empCode1=rsApprDetails1.getString("Approver_Id");
				
				String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
				if(rsAppInfo1.next())
				{
					
					String approveStatus=rsAppInfo1.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved"))
					{
						recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
						ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
						if(rsAppInfo2.next())
						{
							if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
							{
								apprvers.setApproveStatus("Closed");
							apprvers.setDate(rsAppInfo2.getString("approved_date"));
							
						
						
						String comments="";
						comments=rsAppInfo2.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo2.getString("Comments"));
						}
						}
						}
					}else{
						
						recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
						ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
						if(rsAppInfo3.next())
						{
							if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
							{
							apprvers.setDate(rsAppInfo3.getString("rejected_date"));
							}
						
						String comments="";
						comments=rsAppInfo3.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo3.getString("Comments"));
						}
						}
					}
					
				}
				apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
		
			listApprers.add(apprvers);
			}
		
		request.setAttribute("approverDetails", listApprers);
	
} 

	catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

		
		
		forwardtype="viewNewITAssetform";
	
		
	}
	if(type.equalsIgnoreCase("New IT Spares Request"))
	{

		LinkedList Adusercreation=new LinkedList();
		String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
			if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
			{
				empno=rs00.getString("Emp_No");
			}
			else
			{
				empno=user.getEmployeeNo();
			}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String locID="";
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
ResultSet rs1= ad.selectQuery(data1);
try {
	while(rs1.next())
	{
		help.setAssetvalue(rs1.getString("Asset_Details"));
		help.setAdloginname(rs1.getString("ADLoginName"));
		help.setServer(rs1.getString("Server_Address"));
		help.setReqdfolderacces(rs1.getString("Req_Folder_access"));
		help.setReason(rs1.getString("Reason"));
		help.setHostname(rs1.getString("HostName"));
		help.setIPNumber(rs1.getString("IPAddress"));
		help.setReqPriority(rs1.getString("Req_Priority"));
		help.setAssetcategory(rs1.getString("Category"));
		help.setReqbydate(rs1.getString("reqbydate"));
		help.setSuggestmodelname(rs1.getString("suggmodel"));
		
		help.setGxpyes(rs1.getString("gxp"));
		
		help.setTypeofprinter(rs1.getString("typeofprinter"));
		help.setUsers(rs1.getString("noofusers"));
		help.setPrintvolpermonth(rs1.getString("printvolpm"));
		help.setSuggestmodelno(rs1.getString("suggmodelno"));
		help.setApprxvalue(rs1.getString("Apprxvalue"));

		help.setLanyes(rs1.getString("lan"));
		help.setAnysplreq(rs1.getString("anysplreq"));
		help.setPurpose(rs1.getString("purpose"));
        locID=rs1.getString("Location");

	}
} catch (SQLException e) {
	  e.printStackTrace();
	}

//Approver Details
int  checkStatus=0;
LinkedList listApprers=new LinkedList();
int jk=0;

//HOD

int hodpresent=0;
int hodpresentinIt=0;
String HODPresentId="";
String HODPresentname="";
String itengineerid="";
String itengineername="";
String HOD="";
String	pendingApprovers="";

 //chk if he has Hod
 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
 ResultSet rs10= ad.selectQuery(chkhod);
 try {
	while(rs10.next())
	 {
		 hodpresent=rs10.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}

//get hod details


if(hodpresent>0){
String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
		" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
 ResultSet rs2= ad.selectQuery(gethod);
 
 try {
	if(rs2.next())
	 {
	
		HODPresentId=rs2.getString("ApproverId");
		HODPresentname=rs2.getString("EMP_FULLNAME");
	 }
} catch (SQLException e) {
	
	e.printStackTrace();
}
}

//chk if he is present in It approver
 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+locID+"'";
 ResultSet rs11= ad.selectQuery(chkhodinit);
 try {
	while(rs11.next())
	 {
		hodpresentinIt=rs11.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}
 
 

 
 
		
	if(hodpresent>0 && hodpresentinIt==0 )
	{
		
		
		try {
			
				checkStatus=1;
				ApprovalsForm apprvershod=new ApprovalsForm();
				apprvershod.setPriority("1");
				
				apprvershod.setEmployeeCode(HODPresentId);
				apprvershod.setEmployeeName(HODPresentname);
				
				String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
			+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+locID+"' AND "
			+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
			+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						apprvershod.setDate(rsAppInfo.getString("approved_date"));
					}else{
						apprvershod.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvershod.setComments("");
					}else{
						apprvershod.setComments(rsAppInfo.getString("Comments"));
					}
				}
				
				
				listApprers.add(apprvershod);
			 jk=1;
			}
		
		catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
	}

		



String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+locID+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
try {
	while(rsApprDetails.next())
	{
		
		checkStatus=1;
		ApprovalsForm apprvers=new ApprovalsForm();
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		
			
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		if(jk==1){
			
			apprvers.setPriority(Integer.toString(listApprers.size()+1));
		}
		apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
		String empCode=rsApprDetails.getString("Approver_Id");
		
		String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
				+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
				+ "and it.LOCATION_ID='"+locID+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
				+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
				+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
		
		ResultSet rsAppInfo=ad.selectQuery(recordStatus);
		if(rsAppInfo.next())
		{
			if(rsAppInfo.getInt("Priority")==1 )
			{
				 chkdate=rsAppInfo.getString("approved_date");
				 chkdate1=rsAppInfo.getString("rejected_date");
			}
			apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
			String approveStatus=rsAppInfo.getString("Req_Status");
			if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
			{
				
			apprvers.setDate(rsAppInfo.getString("approved_date"));
			
			}else{
				apprvers.setDate(rsAppInfo.getString("rejected_date"));
			}
			String comments="";
			comments=rsAppInfo.getString("Comments");
			if(comments=="null" )
			{
				apprvers.setComments("");
			}else{
				apprvers.setComments(rsAppInfo.getString("Comments"));
			}
		}
		apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
		
		listApprers.add(apprvers);
		
	}
		//IT ENGINEER DETAIlS
		
		
		String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+locID+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
		
			while(rsApprDetails1.next())
			{
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
				
				apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
				String empCode1=rsApprDetails1.getString("Approver_Id");
				
				String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+locID+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
				if(rsAppInfo1.next())
				{
					
					String approveStatus=rsAppInfo1.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved"))
					{
						recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
						ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
						if(rsAppInfo2.next())
						{
							if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
							{
								apprvers.setApproveStatus("Closed");
							apprvers.setDate(rsAppInfo2.getString("approved_date"));
							
						
						
						String comments="";
						comments=rsAppInfo2.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo2.getString("Comments"));
						}
						}
						}
					}else{
						
						recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
						ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
						if(rsAppInfo3.next())
						{
							if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
							{
							apprvers.setDate(rsAppInfo3.getString("rejected_date"));
							}
						
						String comments="";
						comments=rsAppInfo3.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo3.getString("Comments"));
						}
						}
					}
					
				}
				apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
		
			listApprers.add(apprvers);
			}
		
		request.setAttribute("approverDetails", listApprers);
	
} 

	catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

		
		
		forwardtype="viewNewITSparesform";
	
		
	}
	
	if(type.equalsIgnoreCase("Active Directory User Creation"))
	{
		LinkedList Adusercreation=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
ResultSet rs1= ad.selectQuery(data1);
try {
	while(rs1.next())
	{
		help.setAssetvalue(rs1.getString("Asset_Details"));
		help.setAdloginname(rs1.getString("ADLoginName"));
		help.setServer(rs1.getString("Server_Address"));
		help.setReqdfolderacces(rs1.getString("Req_Folder_access"));
		help.setReason(rs1.getString("Reason"));
		help.setHostname(rs1.getString("HostName"));
		help.setIPNumber(rs1.getString("IPAddress"));
		help.setReqPriority(rs1.getString("Req_Priority"));
		help.setInitials(rs1.getString("Initials"));
		help.setFirstname(rs1.getString("Frst_Name"));
		help.setLastname(rs1.getString("Last_Name"));
	}
} catch (SQLException e) {
	  e.printStackTrace();
	}

//Approver Details
int  checkStatus=0;
LinkedList listApprers=new LinkedList();
int jk=0;

//HOD

int hodpresent=0;
int hodpresentinIt=0;
String HODPresentId="";
String HODPresentname="";
String itengineerid="";
String itengineername="";
String HOD="";
String	pendingApprovers="";

 //chk if he has Hod
 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
 ResultSet rs10= ad.selectQuery(chkhod);
 try {
	while(rs10.next())
	 {
		 hodpresent=rs10.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}

//get hod details


if(hodpresent>0){
String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
		" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
 ResultSet rs2= ad.selectQuery(gethod);
 
 try {
	if(rs2.next())
	 {
	
		HODPresentId=rs2.getString("ApproverId");
		HODPresentname=rs2.getString("EMP_FULLNAME");
	 }
} catch (SQLException e) {
	
	e.printStackTrace();
}
}

//chk if he is present in It approver
 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
 ResultSet rs11= ad.selectQuery(chkhodinit);
 try {
	while(rs11.next())
	 {
		hodpresentinIt=rs11.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}
 
	if(hodpresent>0 && hodpresentinIt==0 )
	{
		
		
		try {
			
				checkStatus=1;
				ApprovalsForm apprvershod=new ApprovalsForm();
				apprvershod.setPriority("1");
				
				apprvershod.setEmployeeCode(HODPresentId);
				apprvershod.setEmployeeName(HODPresentname);
				
				String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
			+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
			+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
			+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						apprvershod.setDate(rsAppInfo.getString("approved_date"));
					}else{
						apprvershod.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvershod.setComments("");
					}else{
						apprvershod.setComments(rsAppInfo.getString("Comments"));
					}
				}
				
				
				listApprers.add(apprvershod);
			 jk=1;
			}
		
		catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
	}






String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
try {
	while(rsApprDetails.next())
	{
		
		checkStatus=1;
		ApprovalsForm apprvers=new ApprovalsForm();
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		
			
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		if(jk==1){
			
			apprvers.setPriority(Integer.toString(listApprers.size()+1));
		}
		apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
		String empCode=rsApprDetails.getString("Approver_Id");
		
		String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
				+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
				+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
				+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
				+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
		
		ResultSet rsAppInfo=ad.selectQuery(recordStatus);
		if(rsAppInfo.next())
		{
			if(rsAppInfo.getInt("Priority")==1 )
			{
				 chkdate=rsAppInfo.getString("approved_date");
				 chkdate1=rsAppInfo.getString("rejected_date");
			}
			apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
			String approveStatus=rsAppInfo.getString("Req_Status");
			if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
			{
				
			apprvers.setDate(rsAppInfo.getString("approved_date"));
			
			}else{
				apprvers.setDate(rsAppInfo.getString("rejected_date"));
			}
			String comments="";
			comments=rsAppInfo.getString("Comments");
			if(comments=="null" )
			{
				apprvers.setComments("");
			}else{
				apprvers.setComments(rsAppInfo.getString("Comments"));
			}
		}
		apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
		
		listApprers.add(apprvers);
		
	}
		//IT ENGINEER DETAIlS
		
		
		String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
		
			while(rsApprDetails1.next())
			{
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
				
				apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
				String empCode1=rsApprDetails1.getString("Approver_Id");
				
				String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
				if(rsAppInfo1.next())
				{
					
					String approveStatus=rsAppInfo1.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved"))
					{
						recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
						ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
						if(rsAppInfo2.next())
						{
							if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
							{
								apprvers.setApproveStatus("Closed");
							apprvers.setDate(rsAppInfo2.getString("approved_date"));
							
						
						
						String comments="";
						comments=rsAppInfo2.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo2.getString("Comments"));
						}
						}
						}
					}else{
						
						recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
						ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
						if(rsAppInfo3.next())
						{
							if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
							{
							apprvers.setDate(rsAppInfo3.getString("rejected_date"));
							}
						
						String comments="";
						comments=rsAppInfo3.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo3.getString("Comments"));
						}
						}
					}
					
				}
				apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
		
			listApprers.add(apprvers);
			}
		
		request.setAttribute("approverDetails", listApprers);
	
} 

	catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

		
		
		forwardtype="viewAduserCreationform";
	}
	
	if(type.equalsIgnoreCase("Active Directory User Deletion"))
	{
		LinkedList AduserDeletion=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
			
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				
				help.setEmpno(rs.getString("PERNR"));
			
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
ResultSet rs1= ad.selectQuery(data1);
try {
	while(rs1.next())
	{
		help.setAssetvalue(rs1.getString("Asset_Details"));
		help.setAdloginname(rs1.getString("ADLoginName"));
		help.setServer(rs1.getString("Server_Address"));
		help.setReqdfolderdeletion(rs1.getString("Req_Folder_Deletion"));
		help.setDeletefrom(rs1.getString("Delete_From"));
		help.setReason(rs1.getString("Reason"));
		help.setHostname(rs1.getString("HostName"));
		help.setIPNumber(rs1.getString("IPAddress"));
		help.setReqPriority(rs1.getString("Req_Priority"));

		
	}
} catch (SQLException e) {
	  e.printStackTrace();
	}

//Approver Details
	int  checkStatus=0;
	LinkedList listApprers=new LinkedList();
	int jk=0;
	
	//HOD

	int hodpresent=0;
	int hodpresentinIt=0;
	String HODPresentId="";
	String HODPresentname="";
	String itengineerid="";
	String itengineername="";
	String HOD="";
	String	pendingApprovers="";
	
	 //chk if he has Hod
	 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
	 ResultSet rs10= ad.selectQuery(chkhod);
	 try {
		while(rs10.next())
		 {
			 hodpresent=rs10.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	
	//get hod details
	

	if(hodpresent>0){
	String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
			" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
	 ResultSet rs2= ad.selectQuery(gethod);
	 
	 try {
		if(rs2.next())
		 {
		
			HODPresentId=rs2.getString("ApproverId");
			HODPresentname=rs2.getString("EMP_FULLNAME");
		 }
	} catch (SQLException e) {
		
		e.printStackTrace();
	}
	}
	
	//chk if he is present in It approver
	 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
	 ResultSet rs11= ad.selectQuery(chkhodinit);
	 try {
		while(rs11.next())
		 {
			hodpresentinIt=rs11.getInt(1);
		 }
	} catch (SQLException e1) {
		
		e1.printStackTrace();
	}
	 
		if(hodpresent>0 && hodpresentinIt==0 )
		{
			
			
			try {
				
					checkStatus=1;
					ApprovalsForm apprvershod=new ApprovalsForm();
					apprvershod.setPriority("1");
					
					apprvershod.setEmployeeCode(HODPresentId);
					apprvershod.setEmployeeName(HODPresentname);
					
					String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
				+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
				+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
				+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo=ad.selectQuery(recordStatus);
					if(rsAppInfo.next())
					{
						apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
						String approveStatus=rsAppInfo.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
						{
							apprvershod.setDate(rsAppInfo.getString("approved_date"));
						}else{
							apprvershod.setDate(rsAppInfo.getString("rejected_date"));
						}
						String comments="";
						comments=rsAppInfo.getString("Comments");
						if(comments=="null" )
						{
							apprvershod.setComments("");
						}else{
							apprvershod.setComments(rsAppInfo.getString("Comments"));
						}
					}
					
					
					listApprers.add(apprvershod);
				 jk=1;
				}
			
			catch (SQLException e1) {
				
				e1.printStackTrace();
			}
			
		}
	
	

	
	
	
	String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
	ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
	try {
		while(rsApprDetails.next())
		{
			
			checkStatus=1;
			ApprovalsForm apprvers=new ApprovalsForm();
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			
				
			apprvers.setPriority(rsApprDetails.getString("Priority"));
			if(jk==1){
				
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
			}
			apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
			String empCode=rsApprDetails.getString("Approver_Id");
			
			String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
					+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
					+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
					+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
					+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
			
			ResultSet rsAppInfo=ad.selectQuery(recordStatus);
			if(rsAppInfo.next())
			{
				if(rsAppInfo.getInt("Priority")==1 )
				{
					 chkdate=rsAppInfo.getString("approved_date");
					 chkdate1=rsAppInfo.getString("rejected_date");
				}
				apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
				String approveStatus=rsAppInfo.getString("Req_Status");
				if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
				{
					
				apprvers.setDate(rsAppInfo.getString("approved_date"));
				
				}else{
					apprvers.setDate(rsAppInfo.getString("rejected_date"));
				}
				String comments="";
				comments=rsAppInfo.getString("Comments");
				if(comments=="null" )
				{
					apprvers.setComments("");
				}else{
					apprvers.setComments(rsAppInfo.getString("Comments"));
				}
			}
			apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
			
			listApprers.add(apprvers);
			
		}
			//IT ENGINEER DETAIlS
			
			
			String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
			ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
			
				while(rsApprDetails1.next())
				{
					checkStatus=1;
					ApprovalsForm apprvers=new ApprovalsForm();
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
					
					apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
					String empCode1=rsApprDetails1.getString("Approver_Id");
					
					String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
							+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
							+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
							+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
							+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
					
					ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
					if(rsAppInfo1.next())
					{
						
						String approveStatus=rsAppInfo1.getString("Req_Status");
						if(approveStatus.equalsIgnoreCase("Approved"))
						{
							recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
							ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
							if(rsAppInfo2.next())
							{
								if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
								{
									apprvers.setApproveStatus("Closed");
								apprvers.setDate(rsAppInfo2.getString("approved_date"));
								
							
							
							String comments="";
							comments=rsAppInfo2.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo2.getString("Comments"));
							}
							}
							}
						}else{
							
							recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
							ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
							if(rsAppInfo3.next())
							{
								if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
								{
								apprvers.setDate(rsAppInfo3.getString("rejected_date"));
								}
							
							String comments="";
							comments=rsAppInfo3.getString("Comments");
							if(comments=="null" )
							{
								apprvers.setComments("");
							}else{
								apprvers.setComments(rsAppInfo3.getString("Comments"));
							}
							}
						}
						
					}
					apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
			
				listApprers.add(apprvers);
				}
			
			request.setAttribute("approverDetails", listApprers);
	}

	catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

		
		
		forwardtype="viewAduserDeletionform";
	}
	if(type.equalsIgnoreCase("Active Directory User Transfer"))
	{

		LinkedList Adusertransfer=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
ResultSet rs1= ad.selectQuery(data1);
try {
	while(rs1.next())
	{
		help.setAssetvalue(rs1.getString("Asset_Details"));
		help.setAdloginname(rs1.getString("ADLoginName"));
		help.setReason(rs1.getString("Reason"));
		help.setIPNumber(rs1.getString("IPAddress"));
		help.setReqPriority(rs1.getString("Req_Priority"));
		help.setFromlocationId(rs1.getString("From_Loc"));
		help.setTolocationId(rs1.getString("To_Loc"));
		help.setFromdepartment(rs1.getString("From_Dep"));
		help.setTodepartment(rs1.getString("To_Dep"));
		
	}
} catch (SQLException e) {
	  e.printStackTrace();
	}

//Approver Details
int  checkStatus=0;
LinkedList listApprers=new LinkedList();
int jk=0;

//HOD

int hodpresent=0;
int hodpresentinIt=0;
String HODPresentId="";
String HODPresentname="";
String itengineerid="";
String itengineername="";
String HOD="";
String	pendingApprovers="";

 //chk if he has Hod
 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
 ResultSet rs10= ad.selectQuery(chkhod);
 try {
	while(rs10.next())
	 {
		 hodpresent=rs10.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}

//get hod details


if(hodpresent>0){
String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
		" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
 ResultSet rs2= ad.selectQuery(gethod);
 
 try {
	if(rs2.next())
	 {
	
		HODPresentId=rs2.getString("ApproverId");
		HODPresentname=rs2.getString("EMP_FULLNAME");
	 }
} catch (SQLException e) {
	
	e.printStackTrace();
}
}

//chk if he is present in It approver
 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
 ResultSet rs11= ad.selectQuery(chkhodinit);
 try {
	while(rs11.next())
	 {
		hodpresentinIt=rs11.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}
 
	if(hodpresent>0 && hodpresentinIt==0 )
	{
		
		
		try {
			
				checkStatus=1;
				ApprovalsForm apprvershod=new ApprovalsForm();
				apprvershod.setPriority("1");
				
				apprvershod.setEmployeeCode(HODPresentId);
				apprvershod.setEmployeeName(HODPresentname);
				
				String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
			+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
			+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
			+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						apprvershod.setDate(rsAppInfo.getString("approved_date"));
					}else{
						apprvershod.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvershod.setComments("");
					}else{
						apprvershod.setComments(rsAppInfo.getString("Comments"));
					}
				}
				
				
				listApprers.add(apprvershod);
			 jk=1;
			}
		
		catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
	}






String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
try {
	while(rsApprDetails.next())
	{
		
		checkStatus=1;
		ApprovalsForm apprvers=new ApprovalsForm();
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		
			
		apprvers.setPriority(rsApprDetails.getString("Priority"));
		if(jk==1){
			
			apprvers.setPriority(Integer.toString(listApprers.size()+1));
		}
		apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
		String empCode=rsApprDetails.getString("Approver_Id");
		
		String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
				+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
				+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
				+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
				+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
		
		ResultSet rsAppInfo=ad.selectQuery(recordStatus);
		if(rsAppInfo.next())
		{
			if(rsAppInfo.getInt("Priority")==1 )
			{
				 chkdate=rsAppInfo.getString("approved_date");
				 chkdate1=rsAppInfo.getString("rejected_date");
			}
			apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
			String approveStatus=rsAppInfo.getString("Req_Status");
			if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
			{
				
			apprvers.setDate(rsAppInfo.getString("approved_date"));
			
			}else{
				apprvers.setDate(rsAppInfo.getString("rejected_date"));
			}
			String comments="";
			comments=rsAppInfo.getString("Comments");
			if(comments=="null" )
			{
				apprvers.setComments("");
			}else{
				apprvers.setComments(rsAppInfo.getString("Comments"));
			}
		}
		apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
		
		listApprers.add(apprvers);
		
	}
		//IT ENGINEER DETAIlS
		
		
		String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
		
			while(rsApprDetails1.next())
			{
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(Integer.toString(listApprers.size()+1));
				
				apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
				String empCode1=rsApprDetails1.getString("Approver_Id");
				
				String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
				if(rsAppInfo1.next())
				{
					
					String approveStatus=rsAppInfo1.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved"))
					{
						recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
						ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
						if(rsAppInfo2.next())
						{
							if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
							{
								apprvers.setApproveStatus("Closed");
							apprvers.setDate(rsAppInfo2.getString("approved_date"));
							
						
						
						String comments="";
						comments=rsAppInfo2.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo2.getString("Comments"));
						}
						}
						}
					}else{
						
						recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
						ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
						if(rsAppInfo3.next())
						{
							if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
							{
							apprvers.setDate(rsAppInfo3.getString("rejected_date"));
							}
						
						String comments="";
						comments=rsAppInfo3.getString("Comments");
						if(comments=="null" )
						{
							apprvers.setComments("");
						}else{
							apprvers.setComments(rsAppInfo3.getString("Comments"));
						}
						}
					}
					
				}
				apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
		
			listApprers.add(apprvers);
			}
		
		request.setAttribute("approverDetails", listApprers);
	
} 

	catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

		
		
		forwardtype="viewAduserTransferform";
	
		
	}
	
	if(type.equalsIgnoreCase("Email ID Create Request"))
	{
		LinkedList LotusIDCreation=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
				String x=rs1.getString("comm_outside");
				if(x.equalsIgnoreCase("Yes"))
				{
					help.setOutsidecomyes("Yes");
				}
				if(x.equalsIgnoreCase("No"))
				{
					help.setOutsidecomyes("No");
				}
				help.setIsHeHod(rs1.getString("Is_He_Hod"));
				help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
				help.setEnablewebAccess(rs1.getString("Enable_Web_access"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
				help.setFirstname(rs1.getString("Frst_Name"));
				help.setLastname(rs1.getString("Last_Name"));
				help.setMiddname(rs1.getString("Middle_Name"));
				//newly_Joinied,joining_date,Total_Mailids
				String a=rs1.getString("newly_Joinied");
				if(a.equalsIgnoreCase("Yes"))
				{
					help.setNewlyJoinedYes("Yes");
				}
				if(a.equalsIgnoreCase("No"))
				{
					help.setNewlyJoinedYes("No");
				}
				help.setJoiningDate(rs1.getString("joining_date"));
				help.setTotalIDs(rs1.getString("Total_Mailids"));
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			//Plant head
			String plantheadid="";
			String plantheadname="";
			String plantheaddep="";
			String plantheaddesg="";
			String a=user.getPlantId();
			if(!a.equalsIgnoreCase("16"))
			{
				String plant ="select pl.Plant,pl.PERNR,emp.EMP_FULLNAME,dep.DPTSTXT,desg.DSGSTXT from PLANT_HEAD pl,emp_official_info emp,DEPARTMENT dep,DESIGNATION desg where Plant=(select LOCATION_CODE from Location where LOCID='"+a+"') and emp.PERNR=pl.PERNR and dep.DPTID=emp.DPTID and desg.DSGID=emp.DSGID";
				ResultSet pl=ad.selectQuery(plant);
				try {
					while(pl.next())
					 {
						plantheadid=pl.getString("pernr");
						plantheadname=pl.getString("EMP_FULLNAME");
						plantheaddep=pl.getString("DPTSTXT");
						plantheaddesg=pl.getString("DSGSTXT");
					 }
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		 
			if(plantheadid.equalsIgnoreCase(""))
			{
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
				
				
			}
			
		 
		 if(!plantheadid.equalsIgnoreCase(""))
			{
			 
									
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(plantheadid);
						apprvershod.setEmployeeName(plantheadname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+plantheadid+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		request.setAttribute("LotusIDCreation", LotusIDCreation);
		forwardtype="viewLotusIDCreationform";
	}
	
	if(type.equalsIgnoreCase("Email ID Change Request"))
	{
		LinkedList LotusIDChange=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setFromemailId(rs1.getString("From_EmailID"));
				String x=rs1.getString("comm_outside");
				if(x.equalsIgnoreCase("Yes"))
				{
					help.setOutsidecomyes("Yes");
				}
				if(x.equalsIgnoreCase("No"))
				{
					help.setOutsidecomyes("No");
				}
				help.setDeleteoldmails(rs1.getString("delete_old_email"));
				help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
				help.setIsHeHod(rs1.getString("Is_He_Hod"));
				help.setTransferoldmail(rs1.getString("Transfer_Old_Emails"));
				help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
				help.setEnablewebAccess(rs1.getString("Enable_Web_access"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
				String a=rs1.getString("newly_Joinied");
				if(a.equalsIgnoreCase("Yes"))
				{
					help.setNewlyJoinedYes("Yes");
				}
				if(a.equalsIgnoreCase("No"))
				{
					help.setNewlyJoinedYes("No");
				}
				help.setJoiningDate(rs1.getString("joining_date"));
				help.setTotalIDs(rs1.getString("Total_Mailids"));
				
				help.setFirstname(rs1.getString("Frst_Name"));
				help.setLastname(rs1.getString("Last_Name"));
				help.setMiddname(rs1.getString("Middle_Name")); 
			}
			
			
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
		//Plant head
			String plantheadid="";
			String plantheadname="";
			String plantheaddep="";
			String plantheaddesg="";
			String a=user.getPlantId();
			if(!a.equalsIgnoreCase("16"))
			{
				String plant ="select pl.Plant,pl.PERNR,emp.EMP_FULLNAME,dep.DPTSTXT,desg.DSGSTXT from PLANT_HEAD pl,emp_official_info emp,DEPARTMENT dep,DESIGNATION desg where Plant=(select LOCATION_CODE from Location where LOCID='"+a+"') and emp.PERNR=pl.PERNR and dep.DPTID=emp.DPTID and desg.DSGID=emp.DSGID";
				ResultSet pl=ad.selectQuery(plant);
				try {
					while(pl.next())
					 {
						plantheadid=pl.getString("pernr");
						plantheadname=pl.getString("EMP_FULLNAME");
						plantheaddep=pl.getString("DPTSTXT");
						plantheaddesg=pl.getString("DSGSTXT");
					 }
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		 
			if(plantheadid.equalsIgnoreCase(""))
			{
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
				
				
			}
			
		 
		 if(!plantheadid.equalsIgnoreCase(""))
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(plantheadid);
						apprvershod.setEmployeeName(plantheadname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+plantheadid+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		request.setAttribute("LotusIDChange", LotusIDChange);
		forwardtype="viewLotusIDChangeform";
	}
	
	if(type.equalsIgnoreCase("Email ID Delete Request"))
	{

		LinkedList LotusIDDeletion=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setSuggestedEmailId(rs1.getString("SuggestedEmailId"));
		        help.setIsHeHod(rs1.getString("Is_He_Hod"));
				help.setIsthisCommonId(rs1.getString("Is_This_common_ID"));
				help.setEmailidDelete(rs1.getString("EmailID_Deleted"));
				help.setDeletefrom(rs1.getString("Delete_From"));
			    help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
				help.setMailIDPath(rs1.getString("path"));
				help.setDeletedDBYes(rs1.getString("deletedDB"));
				help.setForward_MailID(rs1.getString("forward_MailID"));
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
		//Plant head
			String plantheadid="";
			String plantheadname="";
			String plantheaddep="";
			String plantheaddesg="";
			String a=user.getPlantId();
			if(!a.equalsIgnoreCase("16"))
			{
				String plant ="select pl.Plant,pl.PERNR,emp.EMP_FULLNAME,dep.DPTSTXT,desg.DSGSTXT from PLANT_HEAD pl,emp_official_info emp,DEPARTMENT dep,DESIGNATION desg where Plant=(select LOCATION_CODE from Location where LOCID='"+a+"') and emp.PERNR=pl.PERNR and dep.DPTID=emp.DPTID and desg.DSGID=emp.DSGID";
				ResultSet pl=ad.selectQuery(plant);
				try {
					while(pl.next())
					 {
						plantheadid=pl.getString("pernr");
						plantheadname=pl.getString("EMP_FULLNAME");
						plantheaddep=pl.getString("DPTSTXT");
						plantheaddesg=pl.getString("DSGSTXT");
					 }
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
			if(plantheadid.equalsIgnoreCase(""))
			{
				if(hodpresent>0 && hodpresentinIt==0 )
				{
					
					
					try {
						
							checkStatus=1;
							ApprovalsForm apprvershod=new ApprovalsForm();
							apprvershod.setPriority("1");
							
							apprvershod.setEmployeeCode(HODPresentId);
							apprvershod.setEmployeeName(HODPresentname);
							
							String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
						+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
						+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
						+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
							
							ResultSet rsAppInfo=ad.selectQuery(recordStatus);
							if(rsAppInfo.next())
							{
								apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
								String approveStatus=rsAppInfo.getString("Req_Status");
								if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
								{
									apprvershod.setDate(rsAppInfo.getString("approved_date"));
								}else{
									apprvershod.setDate(rsAppInfo.getString("rejected_date"));
								}
								String comments="";
								comments=rsAppInfo.getString("Comments");
								if(comments=="null" )
								{
									apprvershod.setComments("");
								}else{
									apprvershod.setComments(rsAppInfo.getString("Comments"));
								}
							}
							
							
							listApprers.add(apprvershod);
						 jk=1;
						}
					
					catch (SQLException e1) {
						
						e1.printStackTrace();
					}
					
				}
				
				
			}
		 
		 
		 if(!plantheadid.equalsIgnoreCase(""))
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(plantheadid);
						apprvershod.setEmployeeName(plantheadname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+plantheadid+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		request.setAttribute("LotusIDDeletion", LotusIDDeletion);
		forwardtype="viewLotusIDDeletionform";
	
		
	}
	
	if(type.equalsIgnoreCase("Internet Access Request"))
	{
		LinkedList internet=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
			
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAssetvalue(rs1.getString("Asset_Details"));
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
				help.setIsHeHod(rs1.getString("Is_He_Hod"));
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
				
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			if(hodpresent>0 && hodpresentinIt==0 )
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(HODPresentId);
						apprvershod.setEmployeeName(HODPresentname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		request.setAttribute("Internet", internet);
		forwardtype="viewInternetAccessform";
	}
	
	if(type.equalsIgnoreCase("External Drives Access Request"))
	{
		LinkedList externaldrives=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
			
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setAssetvalue(rs1.getString("Asset_Details"));
				help.setAccesstype(rs1.getString("Access_type"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
			
				String device=rs1.getString("Device_type");
				if(device.equalsIgnoreCase("3"))
				{
					help.setCdrom("CD/DVD_ROM");
					help.setUsb("USB");
				}
				if(device.equalsIgnoreCase("1"))
				{
					help.setCdrom("CD/DVD_ROM");
					
				}
				if(device.equalsIgnoreCase("2"))
				{
					
					help.setUsb("USB");
				}
				
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			if(hodpresent>0 && hodpresentinIt==0 )
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(HODPresentId);
						apprvershod.setEmployeeName(HODPresentname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		request.setAttribute("externaldrives", externaldrives);
		forwardtype="viewexternaldrivesform";
	}
	
	if(type.equalsIgnoreCase("FTP Access Request"))
	{
		LinkedList ftp=new LinkedList();
String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
			
				help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1); 
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setAssetvalue(rs1.getString("Asset_Details"));
				help.setRequiredfoldername(rs1.getString("Req_Folder_access"));
				help.setServer(rs1.getString("Server_Address"));
				help.setAccesstype(rs1.getString("Access_type"));
				help.setFrmdurationofaccess(rs1.getString("FrmRequiredDurationofAccess"));
				help.setTodurationofaccess(rs1.getString("ToRequiredDurationofAccess"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
	
				help.setDurationofaccess(rs1.getString("RequiredDurationofAccess"));
				String fileusername=rs1.getString("UserName");
				 if(fileusername!=null)
					 help.setUsername(fileusername);
				 else
					 help.setUsername("");
				 
				   String filePwd=rs1.getString("Password");
				   if(filePwd!=null)
					   help.setPassword(filePwd);
				   else
					   help.setPassword("");
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD="";
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try {
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			if(hodpresent>0 && hodpresentinIt==0 )
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(HODPresentId);
						apprvershod.setEmployeeName(HODPresentname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{  
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		request.setAttribute("ftp", ftp);
		forwardtype="viewFtpAccessform";
	}
	
	if(type.equalsIgnoreCase("File Server Access Request"))
	{
		LinkedList folder=new LinkedList();
        String empno="";
		
		String data00=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs00= ad.selectQuery(data00);
		try {
			while(rs00.next())
			{
				if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
				{
					empno=rs00.getString("raisedBy");
				}
				else
				{
					empno=rs00.getString("Emp_No");
				}
			}
		} catch (SQLException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		
		String data="select emp.PERNR,emp.EMP_FULLNAME,emp.EMAIL_ID,emp.IP_PHONE,emp.TEL_EXTENS,dep.DPTSTXT,des.DSGSTXT,loc.LOCATION_CODE " +
				"from emp_official_info as emp,DEPARTMENT as dep,DESIGNATION as des ,Location as loc where PERNR='"+empno+"' and " +
				"dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID";	
		ResultSet rs= ad.selectQuery(data);
		try {
			while(rs.next())
			{
				
				help.setRequestername(rs.getString("EMP_FULLNAME"));
				help.setRequesterdepartment(rs.getString("DPTSTXT"));
				help.setRequesterdesignation(rs.getString("DSGSTXT"));
				help.setExtno(rs.getString("TEL_EXTENS"));
				help.setIpPhoneno(rs.getString("IP_PHONE"));
				help.setLocation(rs.getString("LOCATION_CODE"));
			    help.setEmpno(rs.getString("PERNR"));
				
			}
		} catch (SQLException e) {
		  e.printStackTrace();
		}
		
		String data1=" select * from IT_HELPDESK where Req_No="+reqno+"";	
		ResultSet rs1= ad.selectQuery(data1);
		try {
			while(rs1.next())
			{
				help.setAdloginname(rs1.getString("ADLoginName"));
				help.setAssetvalue(rs1.getString("Asset_Details"));
				help.setRequiredfoldername(rs1.getString("Req_Folder_access"));
				help.setServer(rs1.getString("Server_Address"));
				help.setAccesstype(rs1.getString("Access_type"));
				help.setReason(rs1.getString("Reason"));
				help.setReqPriority(rs1.getString("Req_Priority"));
				help.setHostname(rs1.getString("HostName"));
				help.setIPNumber(rs1.getString("IPAddress"));
				help.setFromlocationId(rs1.getString("From_Loc"));
			}
		} catch (SQLException e) {
			  e.printStackTrace();
			}
		
		
		//Approver Details
		int  checkStatus=0;
		LinkedList listApprers=new LinkedList();
		int jk=0;
		
		//HOD

		int hodpresent=0;
		int hodpresentinIt=0;
		String HODPresentId="";
		String HODPresentname="";
		String itengineerid="";
		String itengineername="";
		String HOD=""; 
		String	pendingApprovers="";
		
		 //chk if he has Hod
		 String chkhod="select count(*) from ESS_Approvers where employeeNumber='"+empno+"'  ";
		 ResultSet rs10= ad.selectQuery(chkhod);
		 try { 
			while(rs10.next())
			 {
				 hodpresent=rs10.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		
		//get hod details
		

		if(hodpresent>0){
		String gethod="select ess.ApproverId,emp.EMP_FULLNAME from ESS_Approvers  as ess,emp_official_info as emp  " +
				" where employeeNumber='"+empno+"'  and essType='Leave' and emp.PERNR=ess.ApproverId ";
		 ResultSet rs2= ad.selectQuery(gethod);
		 
		 try {
			if(rs2.next())
			 {
			
				HODPresentId=rs2.getString("ApproverId");
				HODPresentname=rs2.getString("EMP_FULLNAME");
			 }
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		}
		
		//chk if he is present in It approver
		 String chkhodinit="select count(*) from IT_Approvers where Approver_ID='"+HODPresentId+"' and Req_Type = '"+type+"'  and LOCATION_ID='"+user.getPlantId()+"'";
		 ResultSet rs11= ad.selectQuery(chkhodinit);
		 try {
			while(rs11.next())
			 {
				hodpresentinIt=rs11.getInt(1);
			 }
		} catch (SQLException e1) {
			
			e1.printStackTrace();
		}
		 
			if(hodpresent>0 && hodpresentinIt==0 )
			{
				
				
				try {
					
						checkStatus=1;
						ApprovalsForm apprvershod=new ApprovalsForm();
						apprvershod.setPriority("1");
						
						apprvershod.setEmployeeCode(HODPresentId);
						apprvershod.setEmployeeName(HODPresentname);
						
						String recordStatus="select emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments"
					+ " from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' and it.LOCATION_ID='"+user.getPlantId()+"' AND "
					+ "all_r.Last_Approver='"+HODPresentId+"' and all_r.Req_Type='IT Request' and it.Req_Type='"+type+"' and emp.PERNR=all_r.Last_Approver"
					+ " group by emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date, all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo=ad.selectQuery(recordStatus);
						if(rsAppInfo.next())
						{
							apprvershod.setApproveStatus(rsAppInfo.getString("Req_Status"));
							String approveStatus=rsAppInfo.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
							{
								apprvershod.setDate(rsAppInfo.getString("approved_date"));
							}else{
								apprvershod.setDate(rsAppInfo.getString("rejected_date"));
							}
							String comments="";
							comments=rsAppInfo.getString("Comments");
							if(comments=="null" )
							{
								apprvershod.setComments("");
							}else{
								apprvershod.setComments(rsAppInfo.getString("Comments"));
							}
						}
						
						
						listApprers.add(apprvershod);
					 jk=1;
					}
				
				catch (SQLException e1) {
					
					e1.printStackTrace();
				}
				
			}
		
		

		
		
		
		String getApprDetails="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
		ResultSet rsApprDetails=ad.selectQuery(getApprDetails);
		try {
			while(rsApprDetails.next())
			{
				
				checkStatus=1;
				ApprovalsForm apprvers=new ApprovalsForm();
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				
					
				apprvers.setPriority(rsApprDetails.getString("Priority"));
				if(jk==1){
					
					apprvers.setPriority(Integer.toString(listApprers.size()+1));
				}
				apprvers.setEmployeeCode(rsApprDetails.getString("Approver_Id"));
				String empCode=rsApprDetails.getString("Approver_Id");
				
				String recordStatus="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
						+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
						+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode+"' and it.Approver_Id=all_r.Last_Approver  and all_r.Req_Type='IT Request' and "
						+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
						+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
				
				ResultSet rsAppInfo=ad.selectQuery(recordStatus);
				if(rsAppInfo.next())
				{
					if(rsAppInfo.getInt("Priority")==1 )
					{
						 chkdate=rsAppInfo.getString("approved_date");
						 chkdate1=rsAppInfo.getString("rejected_date");
					}
					apprvers.setApproveStatus(rsAppInfo.getString("Req_Status"));
					String approveStatus=rsAppInfo.getString("Req_Status");
					if(approveStatus.equalsIgnoreCase("Approved")||approveStatus.equalsIgnoreCase("Created"))
					{
						
					apprvers.setDate(rsAppInfo.getString("approved_date"));
					
					}else{
						apprvers.setDate(rsAppInfo.getString("rejected_date"));
					}
					String comments="";
					comments=rsAppInfo.getString("Comments");
					if(comments=="null" )
					{
						apprvers.setComments("");
					}else{
						apprvers.setComments(rsAppInfo.getString("Comments"));
					}
				}
				apprvers.setEmployeeName(rsApprDetails.getString("EMP_FULLNAME"));
				
				listApprers.add(apprvers);
				
			}
				//IT ENGINEER DETAIlS
				
				
				String getApprDetails1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME from IT_Approvers as it,emp_official_info as emp 	where it.LOCATION_ID='"+user.getPlantId()+"'  and it.Approver_Id=emp.PERNR  and it.Req_Type='"+type+"' and it.Priority=1    group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME order by Priority";
				ResultSet rsApprDetails1=ad.selectQuery(getApprDetails1);
				
					while(rsApprDetails1.next())
					{
						checkStatus=1;
						ApprovalsForm apprvers=new ApprovalsForm();
						apprvers.setPriority(Integer.toString(listApprers.size()+1));
						
						apprvers.setEmployeeCode(rsApprDetails1.getString("Approver_Id"));
						String empCode1=rsApprDetails1.getString("Approver_Id");
						
						String recordStatus1="select it.Priority,it.Approver_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.rejected_date,"
								+ "all_r.Comments from IT_Approvers as it,emp_official_info as emp,All_Request as all_r where all_r.Req_Id='"+reqno+"' "
								+ "and it.LOCATION_ID='"+user.getPlantId()+"' AND all_r.Last_Approver='"+empCode1+"' and it.Approver_Id=all_r.Last_Approver and all_r.Req_Type='IT Request' and "
								+ "it.Req_Type='"+type+"' and it.Approver_Id=emp.PERNR  group by it.Priority,it.Approver_Id,emp.EMP_FULLNAME,"
								+ "all_r.Req_Status,all_r.approved_date,all_r.rejected_date,all_r.Comments   HAVING count(*) > 0";
						
						ResultSet rsAppInfo1=ad.selectQuery(recordStatus1);
						if(rsAppInfo1.next())
						{
							
							String approveStatus=rsAppInfo1.getString("Req_Status");
							if(approveStatus.equalsIgnoreCase("Approved"))
							{
								recordStatus1=recordStatus1+" order by all_r.approved_date desc ";
								ResultSet rsAppInfo2=ad.selectQuery(recordStatus1);
								if(rsAppInfo2.next())
								{
									if(!chkdate.equalsIgnoreCase(rsAppInfo2.getString("approved_date")))
									{
										apprvers.setApproveStatus("Closed");
									apprvers.setDate(rsAppInfo2.getString("approved_date"));
									
								
								
								String comments="";
								comments=rsAppInfo2.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo2.getString("Comments"));
								}
								}
								}
							}else{
								
								recordStatus1=recordStatus1+" order by all_r.rejected_date desc ";
								ResultSet rsAppInfo3=ad.selectQuery(recordStatus1);
								if(rsAppInfo3.next())
								{
									if(!chkdate1.equalsIgnoreCase(rsAppInfo3.getString("rejected_date")))
									{
									apprvers.setDate(rsAppInfo3.getString("rejected_date"));
									}
								
								String comments="";
								comments=rsAppInfo3.getString("Comments");
								if(comments=="null" )
								{
									apprvers.setComments("");
								}else{
									apprvers.setComments(rsAppInfo3.getString("Comments"));
								}
								}
							}
							
						}
						apprvers.setEmployeeName(rsApprDetails1.getString("EMP_FULLNAME"));
				
					listApprers.add(apprvers);
					}
				
				request.setAttribute("approverDetails", listApprers);
			
		} 
		
			catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		request.setAttribute("folder", folder);
		forwardtype="viewFolderAccessform";
	}
}	
if(issreqtype.equalsIgnoreCase("Sap issues"))
{
  LinkedList empList=new LinkedList();

	String empno="";
	
	String data00=" select * from IT_SAP_ISSUES where Req_No="+reqno+"";	
	ResultSet rs00= ad.selectQuery(data00);
	while(rs00.next())
	{
		if(!rs00.getString("raisedBy").equalsIgnoreCase(rs00.getString("Emp_No")))
		{
			empno=rs00.getString("raisedBy");
		}
		else
		{
			empno=rs00.getString("Emp_No");
		}
	}
	
	String data="select Emp.EMP_FULLNAME ,Emp.PERNR,dep.DPTSTXT,des.DSGSTXT,emp.IP_PHONE,emp.TEL_EXTENS,emp.IP_PHONE,IT.Req_No,"
            +" It.read_Status,It.Req_Priority,It.mode,It.Req_type,It.Sub_Category,It.AssignTo,loc.LOCATION_CODE,It.IPAddress,"
		    +" IT.Req_Status,It.Subject,It.Reason,it.sap_request_type,it.ROLE,IT.old_id,IT.NEW_id"
            +" from IT_SAP_ISSUES It,emp_official_info emp ,DEPARTMENT as dep ,Location as loc ,"
          +"DESIGNATION as des"
           +" where IT.Emp_No =emp.PERNR and dep.DPTID=emp.DPTID and des.DSGID=emp.DSGID and loc.LOCATION_CODE=emp.LOCID and"
          +" IT.Req_No = '"+reqno+"'";
	ResultSet rs= ad.selectQuery(data);
	try {
		while(rs.next())
		{   myReqForm.setEmpno(rs.getString("PERNR"));
	//	System.out.println(myReqForm.getEmpno());
		myReqForm.setRequestername(rs.getString("EMP_FULLNAME"));
		myReqForm.setRequesterdepartment(rs.getString("DPTSTXT"));
		myReqForm.setRequesterdesignation(rs.getString("DSGSTXT"));
		myReqForm.setExtno(rs.getString("TEL_EXTENS"));
		myReqForm.setIpPhoneno(rs.getString("IP_PHONE"));
		myReqForm.setLocation(rs.getString("LOCATION_CODE"));
		myReqForm.setIPNumber(rs.getString("IPAddress"));
		myReqForm.setRequestNo(reqno);
		myReqForm.setRequestStatus(rs.getString("req_status"));
		myReqForm.setPriority(rs.getString("Req_Priority"));
		myReqForm.setMode(rs.getString("mode"));
		myReqForm.setCategory(rs.getString("Req_type"));
		myReqForm.setCategory1(rs.getString("Req_type"));						
		myReqForm.setSubcategory(rs.getString("Sub_Category"));
		myReqForm.setSubcategory1(rs.getString("Sub_Category"));
		myReqForm.setTechniciansID(rs.getString("AssignTo"));
		myReqForm.setReason(rs.getString("reason"));
		myReqForm.setSubject(rs.getString("subject"));
		myReqForm.setRequestName(rs.getString("sap_request_type"));
		if(rs.getString("sap_request_type")!=null)
		{
			if(!rs.getString("sap_request_type").equalsIgnoreCase("Document Cancellation"))
			{
				String rol="select rol.role as role_manage from IT_SAP_ISSUES as sap,Role_SAP as rol where sap.ROLE=rol.id and sap.location=rol.location_id and sap.role='"+rs.getString("ROLE")+"' and  sap.Req_No='"+reqno+"'";
					
				 ResultSet role1=ad.selectQuery(rol);
					while(role1.next())
					{
						myReqForm.setRoleId(role1.getString("role_manage"));
					}
			}
			
		}
		
		if(rs.getString("Sub_Category")!=null)
		{
			if(rs.getString("Sub_Category").equalsIgnoreCase("Rename ID"))	
			{
				request.setAttribute("renameId", "renameId");
				myReqForm.setOldId(rs.getString("old_id"));
				myReqForm.setNewId(rs.getString("new_id"));
			}
			
		}
		if(rs.getString("sap_request_type")!=null)
		{
			if(rs.getString("sap_request_type").equalsIgnoreCase("SAP Roles Management"))	
			{
				cate="'ROLES'";
				request.setAttribute("role", "role");
			//	pendAppForm.setOldId(rsLeave.getString("old_id"));
			//	pendAppForm.setNewId(rsLeave.getString("new_id"));
			}
			if(rs.getString("sap_request_type").equalsIgnoreCase("SAP Authorization Management"))	
			{
				 cate="'AUTH'";
				request.setAttribute("role", "role");
			//	pendAppForm.setOldId(rsLeave.getString("old_id"));
			//	pendAppForm.setNewId(rsLeave.getString("new_id"));
			}
			if(rs.getString("sap_request_type").equalsIgnoreCase("SAP User Id Management"))	
			{
				 
				 cate="'PSAP','SSAP'";
				 request.setAttribute("role", "role");
			//	pendAppForm.setOldId(rsLeave.getString("old_id"));
			//	pendAppForm.setNewId(rsLeave.getString("new_id"));
			}
			if(rs.getString("sap_request_type").equalsIgnoreCase("Document Cancellation"))	
			{
				 
				 cate="'DC'";
				// request.setAttribute("role", "role");
			//	pendAppForm.setOldId(rsLeave.getString("old_id"));
			//	pendAppForm.setNewId(rsLeave.getString("new_id"));
			}
			}
		empList.add(myReqForm);
				}
	} catch (SQLException e) {
	  e.printStackTrace();
	}
	request.setAttribute("empList", empList);
	String getReqestNumber="select MAX(Priority) as priority"
		    	+" from Material_Approvers app,"
			+"emp_official_info as emp"
		+" where Material_Type='"+myReqForm.getCategory()+"' and " 
		+"Material_Sub_Category='"+myReqForm.getSubcategory()+"' and "    
		+"LOCATION='"+myReqForm.getLocation()+"'";
int maxPriority=0;
ResultSet rsReqestNumber=ad.selectQuery(getReqestNumber);
try {
	if(rsReqestNumber.next())
	{
		maxPriority=rsReqestNumber.getInt(1);
	}
} catch (SQLException e) {

	e.printStackTrace();
}
//maxPriority+=1;



int hodreq =0;

String chkreq=" select c_hod_req from CAT_SUBCAT_MASTER where c_prefix = 'SAP' and c_cat_name = '"+myReqForm.getCategory()+"' and c_sub_cat_name ='"+myReqForm.getSubcategory()+"'";
 ResultSet chk= ad.selectQuery(chkreq);
 try {
	while(chk.next())
	 {
		 hodreq=chk.getInt(1);
	 }
} catch (SQLException e1) {
	
	e1.printStackTrace();
}
 
 String Sqlstring ="";
 
if(hodreq ==1)
{	
 Sqlstring ="select 0 as priority ,"  
         +"PERNR as employeeCode ," 
         +"EMP_FULLNAME as employeeName ,"
         +"DEPARTMENT.DPTLTXT as department,"
         +"DESIGNATION.DSGLTXT as designation,"
         +"All_Request.Req_Status ,"
         +"All_Request.Comments ,"
         +"ISNULL(All_Request.approved_date,All_Request.rejected_date) as date "
         +" from  DEPARTMENT,DESIGNATION ,ESS_Approvers ,emp_official_info "
		  +"left outer join All_Request on Req_type ='IT Sap Request' and "
         +"Req_Id = '"+reqno+"' and "
         +"emp_official_info.PERNR = All_Request.Last_Approver"
         +" where emp_official_info.DPTID  = DEPARTMENT.DPTID and "
         +"emp_official_info.DSGID  = DESIGNATION.DSGID and "
         +"emp_official_info.PERNR =  ESS_Approvers.ApproverId and "
        +"ESS_Approvers.employeeNumber = '"+myReqForm.getEmpno()+"'"
        +" union " 
       +"select app.priority as priority,"
	    +"PERNR as employeeCode ," 
		+"EMP_FULLNAME as employeeName ,"
	    +"DEPARTMENT.DPTLTXT as department,"
		+"DESIGNATION.DSGLTXT as designation ,"
		+"All_Request.Req_Status ,"
         +"All_Request.Comments ,"
         +"ISNULL(All_Request.approved_date,All_Request.rejected_date) as date "
		+" from Material_Approvers app,"
			+" DEPARTMENT,DESIGNATION ,emp_official_info as emp  left outer join All_Request on Req_type ='IT Sap Request' and "
		 +"Req_Id = '"+reqno+"' and "
        +"emp.PERNR = All_Request.Last_Approver"
			+" where Material_Type='"+myReqForm.getCategory()+"' and " 
		+"Material_Sub_Category='"+myReqForm.getSubcategory()+"' and "  
		+"emp.PERNR=app.Approver_Id and " 
		+"LOCATION='"+myReqForm.getLocation()+"' and role ='USER' and "
		+"emp.DPTID  = DEPARTMENT.DPTID and "
		+"emp.DSGID  = DESIGNATION.DSGID" 
		+" Union "
		+"select '"+maxPriority+"' as priority ," 
         +"PERNR as employeeCode ," 
         +"EMP_FULLNAME as employeeName ,"
         +"DEPARTMENT.DPTLTXT as department,"
         +"DESIGNATION.DSGLTXT as designation ,"
         +"All_Request.Req_Status ,"
         +"All_Request.Comments ,"
         +"ISNULL(All_Request.approved_date,All_Request.rejected_date) as date "
         +" from DEPARTMENT,DESIGNATION ,emp_official_info "
		 +"Left Outer Join  All_Request on Req_type ='IT Sap Request' and" 
                  +" Req_Id = '"+reqno+"' and" 
                  +" emp_official_info.PERNR = All_Request.Last_Approver"   

        +" where emp_official_info.DPTID  = DEPARTMENT.DPTID and "
        +"emp_official_info.DSGID  = DESIGNATION.DSGID and "
        +"emp_official_info.PERNR = '"+myReqForm.getTechniciansID()+"'" 
		+" Order by 1";
}
else
{
	 Sqlstring ="select app.priority as priority,"
		    +"PERNR as employeeCode ," 
			+"EMP_FULLNAME as employeeName ,"
		    +"DEPARTMENT.DPTLTXT as department,"
			+"DESIGNATION.DSGLTXT as designation ,"
			+"All_Request.Req_Status ,"
	         +"All_Request.Comments ,"
	         +"ISNULL(All_Request.approved_date,All_Request.rejected_date) as date "
			+" from Material_Approvers app,"
				+" DEPARTMENT,DESIGNATION ,emp_official_info as emp  left outer join All_Request on Req_type ='IT Sap Request' and "
			 +"Req_Id = '"+reqno+"' and "
            +"emp.PERNR = All_Request.Last_Approver "
				+" where Material_Type='"+myReqForm.getCategory()+"' and " 
			+"Material_Sub_Category='"+myReqForm.getSubcategory()+"' and "  
			+"emp.PERNR=app.Approver_Id and " 
			+"LOCATION='"+myReqForm.getLocation()+"' and role ='USER' and "
			+"emp.DPTID  = DEPARTMENT.DPTID and "
			+"emp.DSGID  = DESIGNATION.DSGID" 
			+" Union "
			+"select '"+maxPriority+"' as priority ," 
	         +"PERNR as employeeCode ," 
	         +"EMP_FULLNAME as employeeName ,"
	         +"DEPARTMENT.DPTLTXT as department,"
	         +"DESIGNATION.DSGLTXT as designation ,"
	         +"All_Request.Req_Status ,"
	         +"All_Request.Comments ,"
	         +"ISNULL(All_Request.approved_date,All_Request.rejected_date) as date "
	         +" from DEPARTMENT,DESIGNATION ,emp_official_info "
			 +"Left Outer Join  All_Request on Req_type ='IT Sap Request' and" 
                      +" Req_Id = '"+reqno+"' and" 
                      +" emp_official_info.PERNR = All_Request.Last_Approver"   

	        +" where emp_official_info.DPTID  = DEPARTMENT.DPTID and "
	        +"emp_official_info.DSGID  = DESIGNATION.DSGID and "
	        +"emp_official_info.PERNR = '"+myReqForm.getTechniciansID()+"'" 
			+" Order by 1";		
}
          
ResultSet rs10=ad.selectQuery(Sqlstring);
int i =0;
LinkedList apprList=new LinkedList();

try{
	while(rs10.next()){
		//IssuesForm form1=new IssuesForm();
		MyRequestForm form1 = new MyRequestForm();
		i = i+1;
		//form1.setPriority(rs.getInt("priority"));
		form1.setPriority(Integer.toString(i));
		//pendAppForm.setEmployeeCode(rs.getString("employeeCode"));
		form1.setEmployeeCode(rs10.getString("employeeCode"));
		form1.setEmployeeName(rs10.getString("employeeName"));
		
		//form1.setEmployeename(rs.getString("employeeName"));
		//pendAppForm.setDepartment(rs.getString("department"));
		form1.setDepartment(rs10.getString("department"));
		//form1.setDesignation(rs.getString("designation"));
		form1.setDesignation(rs10.getString("designation"));
		form1.setStatus(rs10.getString("req_status"));
		form1.setComments(rs10.getString("Comments"));
		form1.setDate(rs10.getString("date"));
		
		apprList.add(form1);	
	}
}catch(Exception e){
	e.printStackTrace();
}

request.setAttribute("apprList", apprList);
//file upload list

 InputStream in =ConnectionFactory.class.getClassLoader().getResourceAsStream("db.properties");
	 Properties props = new Properties();
	 try {
	props.load(in);

 in.close();
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
	 String uploadFilePath=props.getProperty("file.uploadFilePath");
	  System.out.println("required filepath="+uploadFilePath+"/EMicro Files/IT/Help Desk/SapIssues/UploadFiles");
	String filePath=uploadFilePath+"/EMicro Files/IT/Help Desk/SapIssues/UploadFiles/"+cate+"";
	 filePath2="/EMicro Files/IT/Help Desk/SapIssues/UploadFiles/"+cate+"";
String sql1="select * from Issues_document where request_no='"+reqno+"' and user_id='"+empno+"'";
ResultSet rs1=ad.selectQuery(sql1);
IssuesForm leaveForm1=null;
	ArrayList a1=new ArrayList();
	try {
		while(rs1.next()) {
			leaveForm1=new IssuesForm();
			String start = rs1.getString("file_name").substring(rs1.getString("file_name").indexOf("_")+1, rs1.getString("file_name").length()-1);
			leaveForm1.setFileName(start);
			//leaveForm1.setFileName(rs1.getString("file_name"));
			leaveForm1.setId(rs1.getString("id"));
			leaveForm1.setFileFullPath(filePath2+"/"+rs1.getString("file_name"));
			a1.add(leaveForm1);
		}
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	request.setAttribute("requesterDetails", a1);
//----

	forwardtype="viewNewSapRequestform";



}

if(issreqtype.equalsIgnoreCase("It issues"))
{	


IssueImpl impl=new IssueImpl();
int reqNo=Integer.parseInt(request.getParameter("requstNo"));
String empType="";
//check emp type
String checkEmp="select it.Emp_No,all_r.Technician_Id from IT_ISSUES as it,IT_All_ISSUES as all_r "
+ "where Req_No='"+reqNo+"' and it.Req_No=all_r.Req_Id";
ResultSet rs=ad.selectQuery(checkEmp);
try{
if(rs.next()){	
	if(user.getEmployeeNo().equals(rs.getString("Emp_No"))){
		empType="Requester";
		request.setAttribute("showReqReply", "showReqReply");
	}else if(user.getEmployeeNo().equals(rs.getString("Technician_Id"))){
		empType="Technician";
		request.setAttribute("showTechnReply", "showTechnReply");
	}else{
		empType="Other";
	}
	help.setEmpType(empType);
}
}catch(Exception e){
	e.printStackTrace();
}
if(empType.equals("Other"))
	request.setAttribute("showBackButton", "showBackButton");

getRequesterDetails(reqNo,form,request);
getApprovalStatus(reqNo, form, request);
getConversationList(reqNo, form, request);
return mapping.findForward("pickupSelectedIssue");

}

return mapping.findForward(forwardtype);

}
	
	public List getRequesterDetails(int reqNo,ActionForm form,HttpServletRequest request){
		//IssuesForm help = (IssuesForm) form;
		HelpDeskReportForm help = (HelpDeskReportForm) form;
		//IssuesForm help = new IssuesForm();
		List requseterDetails=new LinkedList();
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo)session.getAttribute("user");
		NewsandMediaDao ad=new NewsandMediaDao();
		String getDetails="select emp.PERNR,emp.EMP_FULLNAME,emp.LOCID,emp.EMAIL_ID,it.Ext_No,it.Req_No,it.IP_Phone,"
		+ "it.IPAddress,it.Req_type,it.Req_Status,it.Req_Priority,it.Subject,it.Reason,it.Sub_Category,it.mode,dep.DPTSTXT,"
		+ "desg.DSGSTXT from IT_ISSUES as it,emp_official_info as emp,DEPARTMENT dep,DESIGNATION desg where it.Req_No='"+reqNo+"' and "
		+ "emp.PERNR=it.Emp_No and emp.DPTID=dep.DPTID and emp.DSGID=desg.DSGID";
		ResultSet rs=ad.selectQuery(getDetails);
		try{
			String requesterNo="";
		while(rs.next()){
			IssuesForm form1=new IssuesForm();
			form1.setEmployeeno(rs.getString("PERNR"));
			requesterNo=rs.getString("PERNR");
			form1.setEmployeename(rs.getString("EMP_FULLNAME"));
			form1.setLocation(rs.getString("LOCID"));
			form1.setEmpEmailID(rs.getString("EMAIL_ID"));
			form1.setExtno(rs.getString("Ext_No"));
			form1.setRequestNo(rs.getInt("Req_No"));
			help.setRequestNo(rs.getInt("Req_No"));
			form1.setIPNumber(rs.getString("IPAddress"));
			form1.setIpPhoneno(rs.getString("IP_Phone"));
			form1.setCategory(rs.getString("Req_type"));
			form1.setSubcategory(rs.getString("Sub_Category"));
			help.setCategory(rs.getString("Req_type"));
			help.setSubcategory(rs.getString("Sub_Category"));
			form1.setIssuePriority(rs.getString("Req_Priority"));
			help.setRequestStatus(rs.getString("Req_Status"));
			form1.setSubject(rs.getString("Subject"));
			form1.setReason(rs.getString("Reason"));
			form1.setMode(rs.getString("mode"));
			form1.setRequesterdepartment(rs.getString("DPTSTXT"));
			form1.setRequesterdesignation(rs.getString("DSGSTXT"));
			requseterDetails.add(form1);
		}
		ad.closeResultset();
		 InputStream in =ConnectionFactory.class.getClassLoader().getResourceAsStream("db.properties");
	 	 Properties props = new Properties();
	 	 props.load(in);
		 in.close();
	 	 String uploadFilePath=props.getProperty("file.uploadFilePath");
	 	  System.out.println("required filepath="+uploadFilePath+"/EMicro Files/IT/Help Desk/Issues/UploadFiles");
	 	String filePath=uploadFilePath+"/EMicro Files/IT/Help Desk/Issues/UploadFiles";
		String sql1="select * from Issues_document where request_no='"+reqNo+"' and user_id='"+requesterNo+"'";
		ResultSet rs1=ad.selectQuery(sql1);
		IssuesForm leaveForm1=null;
			ArrayList a1=new ArrayList();
			while(rs1.next()) {
				leaveForm1=new IssuesForm();
				leaveForm1.setFileName(rs1.getString("file_name"));
				leaveForm1.setId(rs1.getString("id"));
				leaveForm1.setFileFullPath(filePath+"/"+rs1.getString("file_name"));
				a1.add(leaveForm1);
			}
			
			request.setAttribute("requesterDetails", a1);
		System.out.println("Emp Type="+help.getEmpType());
		
		if(help.getRequestStatus()==null)
		{
			help.setRequestStatus("");
		}
		
		if(help.getEmpType().equals("Technician") && help.getRequestStatus().equals("New")){
			String updateStatus="update IT_ISSUES set Req_Status='In Process' where Req_No='"+reqNo+"' and Req_Status='New' ";
			ad.SqlExecuteUpdate(updateStatus);
			 updateStatus="update IT_All_ISSUES set Req_Status='In Process',readStatus=1 where Req_Id='"+reqNo+"' and Req_Status='New' and "
			 		+ "Technician_Id='"+user.getEmployeeNo()+"'";
			ad.SqlExecuteUpdate(updateStatus);
			help.setRequestStatus("In Process");
		}if(help.getEmpType().equals("Technician")){
			String updateStatus="update IT_All_ISSUES set readStatus=1 where Req_Id='"+reqNo+"' ";
			ad.SqlExecuteUpdate(updateStatus);
		}
		if(help.getEmpType().equals("Requester")){
			String updateStatus="update IT_ISSUES set read_Status=1 where Req_No='"+reqNo+"' ";
			ad.SqlExecuteUpdate(updateStatus);
		}
		
		request.setAttribute("requseterDetails", requseterDetails);
		}catch(Exception e){
			e.printStackTrace();
		}
		return requseterDetails;
	}
	
	public List getApprovalStatus(int reqNo,ActionForm form,HttpServletRequest request){
		//IssuesForm help = (IssuesForm) form;
		
		List approvalDetails=new LinkedList();
		NewsandMediaDao ad=new NewsandMediaDao();
		String getAppDet="select all_r.Technician_Id,emp.EMP_FULLNAME,all_r.Req_Status,all_r.approved_date,all_r.Comments,all_r.Sequence "
		+ "from IT_All_ISSUES as all_r,IT_ISSUES as it,emp_official_info as emp where it.Req_No='"+reqNo+"' and it.Req_No=all_r.Req_Id and "
		+ "emp.PERNR=all_r.Technician_Id";
		ResultSet rs=ad.selectQuery(getAppDet);
		
		try{
		while(rs.next()){
			IssuesForm appDet=new IssuesForm();
			appDet.setTechnicianID(rs.getString("Technician_Id"));
			appDet.setEmployeename(rs.getString("EMP_FULLNAME"));
			String approveDate=rs.getString("approved_date");
			if(approveDate!=null){
			String a[]=approveDate.split(" "); 
			approveDate=a[0];
			String b[]=approveDate.split("-");
			approveDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
			}
			appDet.setApprovedDate(approveDate);
			appDet.setRequestStatus(rs.getString("Req_Status"));
			appDet.setComments(rs.getString("Comments"));
			approvalDetails.add(appDet);
			
		}
		request.setAttribute("approverDetails", approvalDetails);
		}catch(Exception e){
			e.printStackTrace();
		}
		return approvalDetails;
	}
	
	public List getConversationList(int reqNo,ActionForm form,HttpServletRequest request){
		List convList=new LinkedList();
		NewsandMediaDao ad=new NewsandMediaDao();
		InputStream in =ConnectionFactory.class.getClassLoader().getResourceAsStream("db.properties");
		try{
			Properties props = new Properties();
	 	 props.load(in);
		 in.close();
	 	 String uploadFilePath=props.getProperty("file.uploadFilePath");
	 	  System.out.println("required filepath="+uploadFilePath+"/EMicro Files/IT/Help Desk/Issues/UploadFiles");
	 	String filePath=uploadFilePath+"/EMicro Files/IT/Help Desk/Issues/UploadFiles";
		String getDetails="select emp.EMP_FULLNAME,it.Remarks,it.Transaction_Date,it.Sequence,it.Status from IT_Issue_Trans as it,emp_official_info"
		+ " as emp where it.Req_No='"+reqNo+"' and it.Emp_No=emp.PERNR ORDER BY it.Transaction_Date";
		ResultSet rs=ad.selectQuery(getDetails);
	
		while(rs.next()){
			IssuesForm convDet=new IssuesForm();
			convDet.setEmployeename(rs.getString("EMP_FULLNAME"));
			convDet.setComments(rs.getString("Remarks"));
			String approveDate=rs.getString("Transaction_Date");
			String a[]=approveDate.split(" ");
			approveDate=a[0];
			String b[]=approveDate.split("-");
			approveDate=b[2]+"/"+b[1]+"/"+b[0]+" "+a[1];
			convDet.setReqDate(approveDate);
			convDet.setRequestStatus(rs.getString("Status"));
			int transNo=rs.getInt("Sequence");
			String getFiles="select * from Issues_solution_document where request_no='"+reqNo+"' and sequence_no='"+transNo+"'";
			ResultSet rsFiles=ad.selectQuery(getFiles);
			String fileName="";
			while(rsFiles.next()) {
				fileName=fileName+rsFiles.getString("file_name")+",";
			}
			System.out.println("fileName="+fileName);
			convDet.setFileName(fileName);
			convList.add(convDet);
		}
		if(convList.size()>0){
			request.setAttribute("convList", convList);
			
			
		}
		}catch(Exception e){
			e.printStackTrace();
		}
		return convList;
	}	

	
	public  int getminutes(String fromdate,String todate,String locationCODE, int prefix)
	{
		NewsandMediaDao ad=new NewsandMediaDao();
		int count=0;
		String query="";
		
		if(prefix==3)
		{
			query="select  DATEDIFF( MINUTE,'"+fromdate+"','"+todate+"') minutes from CMP_WRKIN_HRS ,Location where LOCID =  Location and LOCATION_CODE ='"+locationCODE+"' ";
		}
		
		if(prefix==2)
		{
			query="select  CASE WHEN DATEDIFF( MINUTE,'"+todate+"',left(GETDATE(),11)+' '+End_time)> 1 THEN DATEDIFF( MINUTE,'"+fromdate+"','"+todate+"') "
					+ " ELSE DATEDIFF( MINUTE,'"+fromdate+"','"+todate.substring(0,11)+"'+' '+End_time)"
					+ "END as minutes"
					+ " from CMP_WRKIN_HRS ,Location where LOCID =  Location and LOCATION_CODE ='"+locationCODE+"' ";
		}
		
		if(prefix==1)
		{

			query="select SUM(minutes)  as mind from (select COUNT(*)*(select DATEDIFF( MINUTE,left(GETDATE(),11)+' '+Start_time,left(GETDATE(),11)+' '+End_time) "
		+ " from CMP_WRKIN_HRS ,Location where LOCID =  Location and LOCATION_CODE ='"+locationCODE+"') as minutes from ESCALATION_CALENDAR e where DATE>'"+fromdate.substring(0, 11)+"' and DATE<'"+todate.substring(0, 11)+"' and "+locationCODE+"='W' "
		+ " union all select  DATEDIFF( MINUTE,left(GETDATE(),11)+' '+'"+fromdate.substring(11, fromdate.length())+"',left(GETDATE(),11)+' '+End_time) minutes from CMP_WRKIN_HRS ,Location where LOCID =  Location and LOCATION_CODE ='"+locationCODE+"' "
		+ " union all select  DATEDIFF( MINUTE,left(GETDATE(),11)+' '+Start_time, left(GETDATE(),11)+' '+'"+todate.substring(11, fromdate.length())+"') minutes from CMP_WRKIN_HRS ,Location where LOCID =  Location and LOCATION_CODE ='"+locationCODE+"')d ";			
		
		}
		
		
		
		ResultSet rsCount = ad.selectQuery(query);
		try {
			while (rsCount.next()) {
				count=rsCount.getInt(1);
			}
		} catch (SQLException e) {
		   System.out.println(query);
			e.printStackTrace();
		}
		
		
		return count;
	}


	


}
